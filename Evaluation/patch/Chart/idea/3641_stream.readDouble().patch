diff --git a/source/org/jfree/chart/util/SerialUtilities.java b/source/org/jfree/chart/util/SerialUtilities.java
index 90edcc1..27a79bf 100644
--- a/source/org/jfree/chart/util/SerialUtilities.java
+++ b/source/org/jfree/chart/util/SerialUtilities.java
@@ -276,34 +276,35 @@
         boolean isNull = stream.readBoolean();
         if (!isNull) {
             Class c = (Class) stream.readObject();
+            double v = stream.readDouble();
             if (c.equals(Line2D.class)) {
-                double x1 = stream.readDouble();
-                double y1 = stream.readDouble();
-                double x2 = stream.readDouble();
-                double y2 = stream.readDouble();
+                double x1 = v;
+                double y1 = v;
+                double x2 = v;
+                double y2 = v;
                 result = new Line2D.Double(x1, y1, x2, y2);
             }
             else if (c.equals(Rectangle2D.class)) {
-                double x = stream.readDouble();
-                double y = stream.readDouble();
-                double w = stream.readDouble();
-                double h = stream.readDouble();
+                double x = v;
+                double y = v;
+                double w = v;
+                double h = v;
                 result = new Rectangle2D.Double(x, y, w, h);
             }
             else if (c.equals(Ellipse2D.class)) {
-                double x = stream.readDouble();
-                double y = stream.readDouble();
-                double w = stream.readDouble();
-                double h = stream.readDouble();
+                double x = v;
+                double y = v;
+                double w = v;
+                double h = v;
                 result = new Ellipse2D.Double(x, y, w, h);
             }
             else if (c.equals(Arc2D.class)) {
-                double x = stream.readDouble();
-                double y = stream.readDouble();
-                double w = stream.readDouble();
-                double h = stream.readDouble();
-                double as = stream.readDouble(); // Angle Start
-                double ae = stream.readDouble(); // Angle Extent
+                double x = v;
+                double y = v;
+                double w = v;
+                double h = v;
+                double as = v; // Angle Start
+                double ae = v; // Angle Extent
                 int at = stream.readInt();       // Arc type
                 result = new Arc2D.Double(x, y, w, h, as, ae, at);
             }

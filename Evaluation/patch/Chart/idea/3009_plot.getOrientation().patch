diff --git a/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java b/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
index 8332a80..8bab366 100644
--- a/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
+++ b/source/org/jfree/chart/renderer/xy/StackedXYAreaRenderer.java
@@ -396,7 +396,8 @@
             ValueAxis rangeAxis, XYDataset dataset, int series, int item,
             boolean selected, int pass) {
 
-        PlotOrientation orientation = plot.getOrientation();
+        PlotOrientation orientation1 = plot.getOrientation();
+        PlotOrientation orientation = orientation1;
         StackedXYAreaRendererState areaState
             = (StackedXYAreaRendererState) state;
         // Get the item count for the series, so that we can know which is the
@@ -540,11 +541,11 @@
             Shape shape = null;
             if (getPlotShapes()) {
                 shape = getItemShape(series, item, selected);
-                if (plot.getOrientation() == PlotOrientation.VERTICAL) {
+                if (orientation1 == PlotOrientation.VERTICAL) {
                     shape = ShapeUtilities.createTranslatedShape(shape,
                             transX1, transY1);
                 }
-                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {
+                else if (orientation1 == PlotOrientation.HORIZONTAL) {
                     shape = ShapeUtilities.createTranslatedShape(shape,
                             transY1, transX1);
                 }
@@ -565,11 +566,11 @@
                 }
             }
             else {
-                if (plot.getOrientation() == PlotOrientation.VERTICAL) {
+                if (orientation1 == PlotOrientation.VERTICAL) {
                     shape = new Rectangle2D.Double(transX1 - 3, transY1 - 3,
                             6.0, 6.0);
                 }
-                else if (plot.getOrientation() == PlotOrientation.HORIZONTAL) {
+                else if (orientation1 == PlotOrientation.HORIZONTAL) {
                     shape = new Rectangle2D.Double(transY1 - 3, transX1 - 3,
                             6.0, 6.0);
                 }

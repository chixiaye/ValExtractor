diff --git a/source/org/jfree/chart/block/GridArrangement.java b/source/org/jfree/chart/block/GridArrangement.java
index 7aa4631..81c8eb5 100644
--- a/source/org/jfree/chart/block/GridArrangement.java
+++ b/source/org/jfree/chart/block/GridArrangement.java
@@ -103,6 +103,7 @@
                           RectangleConstraint constraint) {
         LengthConstraintType w = constraint.getWidthConstraintType();
         LengthConstraintType h = constraint.getHeightConstraintType();
+        LengthConstraintType range = LengthConstraintType.RANGE;
         if (w == LengthConstraintType.NONE) {
             if (h == LengthConstraintType.NONE) {
                 return arrangeNN(container, g2);
@@ -110,7 +111,7 @@
             else if (h == LengthConstraintType.FIXED) {
                 return arrangeNF(container, g2, constraint);
             }
-            else if (h == LengthConstraintType.RANGE) {
+            else if (h == range) {
                 // find optimum height, then map to range
                 return arrangeNR(container, g2, constraint);
             }
@@ -123,12 +124,12 @@
             else if (h == LengthConstraintType.FIXED) {
                 return arrangeFF(container, g2, constraint);
             }
-            else if (h == LengthConstraintType.RANGE) {
+            else if (h == range) {
                 // find optimum height and map to range
                 return arrangeFR(container, g2, constraint);
             }
         }
-        else if (w == LengthConstraintType.RANGE) {
+        else if (w == range) {
             // find optimum width and map to range
             if (h == LengthConstraintType.NONE) {
                 // find optimum height
@@ -138,7 +139,7 @@
                 // fixed width
                 return arrangeRF(container, g2, constraint);
             }
-            else if (h == LengthConstraintType.RANGE) {
+            else if (h == range) {
                 return arrangeRR(container, g2, constraint);
             }
         }

diff --git a/source/org/jfree/chart/block/GridArrangement.java b/source/org/jfree/chart/block/GridArrangement.java
index 7aa4631..eee163d 100644
--- a/source/org/jfree/chart/block/GridArrangement.java
+++ b/source/org/jfree/chart/block/GridArrangement.java
@@ -50,6 +50,7 @@
 import java.util.List;
 
 import org.jfree.chart.util.Size2D;
+import org.jfree.data.Range;
 
 /**
  * Arranges blocks in a grid within their container.
@@ -316,13 +317,14 @@
 
         Size2D size1 = arrange(container, g2, RectangleConstraint.NONE);
 
+        Range heightRange = constraint.getHeightRange();
         if (constraint.getWidthRange().contains(size1.getWidth())) {
-            if (constraint.getHeightRange().contains(size1.getHeight())) {
+            if (heightRange.contains(size1.getHeight())) {
                 return size1;
             }
             else {
                 // width is OK, but height must be constrained
-                double h = constraint.getHeightRange().constrain(
+                double h = heightRange.constrain(
                         size1.getHeight());
                 RectangleConstraint cc = new RectangleConstraint(
                         size1.getWidth(), h);
@@ -330,7 +332,7 @@
             }
         }
         else {
-            if (constraint.getHeightRange().contains(size1.getHeight())) {
+            if (heightRange.contains(size1.getHeight())) {
                 // height is OK, but width must be constrained
                 double w = constraint.getWidthRange().constrain(
                         size1.getWidth());
@@ -342,7 +344,7 @@
             else {
                 double w = constraint.getWidthRange().constrain(
                         size1.getWidth());
-                double h = constraint.getHeightRange().constrain(
+                double h = heightRange.constrain(
                         size1.getHeight());
                 RectangleConstraint cc = new RectangleConstraint(w, h);
                 return arrangeFF(container, g2, cc);

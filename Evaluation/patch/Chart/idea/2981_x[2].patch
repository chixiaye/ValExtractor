diff --git a/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java b/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java
index bdc095b..5f96f98 100644
--- a/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java
+++ b/source/org/jfree/chart/renderer/xy/CyclicXYItemRenderer.java
@@ -201,6 +201,7 @@
             }
         }
 
+        double x1 = x[2];
         if (rangeAxis instanceof CyclicNumberAxis) {
             cnay = (CyclicNumberAxis) rangeAxis;
             ycycleBound = cnay.getCycleBound();
@@ -217,7 +218,7 @@
                 nx[1] = (x[1] - x[0]) * (ycycleBound - y[0])
                         / (y[1] - y[0]) + x[0];
                 if (x.length == 3) {
-                    nx[3] = x[2]; ny[3] = y[2];
+                    nx[3] = x1; ny[3] = y[2];
                 }
                 x = nx; y = ny;
             }
@@ -226,10 +227,10 @@
                     || (ycycleBound >= y[2]) && (ycycleBound <= y[1]))) {
                 double[] nx = new double[4];
                 double[] ny = new double[4];
-                nx[0] = x[0]; nx[1] = x[1]; nx[3] = x[2];
+                nx[0] = x[0]; nx[1] = x[1]; nx[3] = x1;
                 ny[0] = y[0]; ny[1] = y[1]; ny[3] = y[2];
                 ny[2] = ycycleBound;
-                nx[2] = (x[2] - x[1]) * (ycycleBound - y[1])
+                nx[2] = (x1 - x[1]) * (ycycleBound - y[1])
                         / (y[2] - y[1]) + x[1];
                 x = nx; y = ny;
             }
@@ -265,9 +266,9 @@
 
         if (cnax != null) {
             if (xcycleBound == x[1]) {
-                cnax.setBoundMappedToLastCycle(x[2] <= xcycleBound);
+                cnax.setBoundMappedToLastCycle(x1 <= xcycleBound);
             }
-            if (xcycleBound == x[2]) {
+            if (xcycleBound == x1) {
                 cnax.setBoundMappedToLastCycle(x[1] <= xcycleBound);
             }
         }
@@ -284,11 +285,11 @@
 
         if (x.length == 4) {
             if (cnax != null) {
-                if (xcycleBound == x[2]) {
+                if (xcycleBound == x1) {
                     cnax.setBoundMappedToLastCycle(x[3] <= xcycleBound);
                 }
                 if (xcycleBound == x[3]) {
-                    cnax.setBoundMappedToLastCycle(x[2] <= xcycleBound);
+                    cnax.setBoundMappedToLastCycle(x1 <= xcycleBound);
                 }
             }
             if (cnay != null) {

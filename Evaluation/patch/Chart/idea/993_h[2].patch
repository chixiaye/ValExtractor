diff --git a/source/org/jfree/chart/block/BorderArrangement.java b/source/org/jfree/chart/block/BorderArrangement.java
index b3ae54b..30d1b80 100644
--- a/source/org/jfree/chart/block/BorderArrangement.java
+++ b/source/org/jfree/chart/block/BorderArrangement.java
@@ -441,24 +441,25 @@
             h[1] = size.height;
         }
         h[2] = constraint.getHeight() - h[1] - h[0];
+        double v = h[2];
         if (this.leftBlock != null) {
             RectangleConstraint c3 = new RectangleConstraint(0.0,
                     new Range(0.0, constraint.getWidth()),
-                    LengthConstraintType.RANGE, h[2], null,
+                    LengthConstraintType.RANGE, v, null,
                     LengthConstraintType.FIXED);
             Size2D size = this.leftBlock.arrange(g2, c3);
             w[2] = size.width;
         }
-        h[3] = h[2];
+        h[3] = v;
         if (this.rightBlock != null) {
             RectangleConstraint c4 = new RectangleConstraint(0.0,
                     new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
-                    LengthConstraintType.RANGE, h[2], null,
+                    LengthConstraintType.RANGE, v, null,
                     LengthConstraintType.FIXED);
             Size2D size = this.rightBlock.arrange(g2, c4);
             w[3] = size.width;
         }
-        h[4] = h[2];
+        h[4] = v;
         w[4] = constraint.getWidth() - w[3] - w[2];
         RectangleConstraint c5 = new RectangleConstraint(w[4], h[4]);
         if (this.centerBlock != null) {
@@ -470,12 +471,12 @@
                     h[0]));
         }
         if (this.bottomBlock != null) {
-            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + h[2],
+            this.bottomBlock.setBounds(new Rectangle2D.Double(0.0, h[0] + v,
                     w[1], h[1]));
         }
         if (this.leftBlock != null) {
             this.leftBlock.setBounds(new Rectangle2D.Double(0.0, h[0], w[2],
-                    h[2]));
+                    v));
         }
         if (this.rightBlock != null) {
             this.rightBlock.setBounds(new Rectangle2D.Double(w[2] + w[4], h[0],

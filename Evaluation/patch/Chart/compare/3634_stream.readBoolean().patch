==> /tmp/ours.java <==
diff --git a/source/org/jfree/chart/util/SerialUtilities.java b/source/org/jfree/chart/util/SerialUtilities.java
index 90edcc1..d5fe2d9 100644
--- a/source/org/jfree/chart/util/SerialUtilities.java
+++ b/source/org/jfree/chart/util/SerialUtilities.java
@@ -119,7 +119,8 @@
             throw new IllegalArgumentException("Null 'stream' argument.");
         }
         Paint result = null;
-        boolean isNull = stream.readBoolean();
+        boolean var_3634 = stream.readBoolean();
+		boolean isNull = var_3634;
         if (!isNull) {
             Class c = (Class) stream.readObject();
             if (isSerializable(c)) {

==> /tmp/eclipse.java <==
diff --git a/source/org/jfree/chart/util/SerialUtilities.java b/source/org/jfree/chart/util/SerialUtilities.java
index 90edcc1..c809471 100644
--- a/source/org/jfree/chart/util/SerialUtilities.java
+++ b/source/org/jfree/chart/util/SerialUtilities.java
@@ -119,7 +119,8 @@
             throw new IllegalArgumentException("Null 'stream' argument.");
         }
         Paint result = null;
-        boolean isNull = stream.readBoolean();
+        boolean var_3634 = stream.readBoolean();
+		boolean isNull = var_3634;
         if (!isNull) {
             Class c = (Class) stream.readObject();
             if (isSerializable(c)) {
@@ -132,7 +133,7 @@
                 float x2 = stream.readFloat();
                 float y2 = stream.readFloat();
                 Color c2 = (Color) stream.readObject();
-                boolean isCyclic = stream.readBoolean();
+                boolean isCyclic = var_3634;
                 result = new GradientPaint(x1, y1, c1, x2, y2, c2, isCyclic);
             }
         }

==> /tmp/idea.java <==
diff --git a/source/org/jfree/chart/util/SerialUtilities.java b/source/org/jfree/chart/util/SerialUtilities.java
index 90edcc1..bca9ba7 100644
--- a/source/org/jfree/chart/util/SerialUtilities.java
+++ b/source/org/jfree/chart/util/SerialUtilities.java
@@ -119,7 +119,8 @@
             throw new IllegalArgumentException("Null 'stream' argument.");
         }
         Paint result = null;
-        boolean isNull = stream.readBoolean();
+        boolean b = stream.readBoolean();
+        boolean isNull = b;
         if (!isNull) {
             Class c = (Class) stream.readObject();
             if (isSerializable(c)) {
@@ -132,7 +133,7 @@
                 float x2 = stream.readFloat();
                 float y2 = stream.readFloat();
                 Color c2 = (Color) stream.readObject();
-                boolean isCyclic = stream.readBoolean();
+                boolean isCyclic = b;
                 result = new GradientPaint(x1, y1, c1, x2, y2, c2, isCyclic);
             }
         }

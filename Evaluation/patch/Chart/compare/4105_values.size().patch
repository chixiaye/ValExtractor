==> /tmp/ours.java <==
diff --git a/source/org/jfree/data/statistics/Statistics.java b/source/org/jfree/data/statistics/Statistics.java
index 1f97438..2c1bf5b 100644
--- a/source/org/jfree/data/statistics/Statistics.java
+++ b/source/org/jfree/data/statistics/Statistics.java
@@ -201,7 +201,8 @@
         double result = Double.NaN;
         if (values != null) {
             if (copyAndSort) {
-                int itemCount = values.size();
+                int var_4105 = values.size();
+				int itemCount = var_4105;
                 List copy = new ArrayList(itemCount);
                 for (int i = 0; i < itemCount; i++) {
                     copy.add(i, values.get(i));

==> /tmp/eclipse.java <==
diff --git a/source/org/jfree/data/statistics/Statistics.java b/source/org/jfree/data/statistics/Statistics.java
index 1f97438..a937884 100644
--- a/source/org/jfree/data/statistics/Statistics.java
+++ b/source/org/jfree/data/statistics/Statistics.java
@@ -200,8 +200,9 @@
 
         double result = Double.NaN;
         if (values != null) {
+            int var_4105 = values.size();
             if (copyAndSort) {
-                int itemCount = values.size();
+                int itemCount = var_4105;
                 List copy = new ArrayList(itemCount);
                 for (int i = 0; i < itemCount; i++) {
                     copy.add(i, values.get(i));
@@ -209,7 +210,7 @@
                 Collections.sort(copy);
                 values = copy;
             }
-            int count = values.size();
+            int count = var_4105;
             if (count > 0) {
                 if (count % 2 == 1) {
                     if (count > 1) {

==> /tmp/idea.java <==
diff --git a/source/org/jfree/data/statistics/Statistics.java b/source/org/jfree/data/statistics/Statistics.java
index 1f97438..9c99c9b 100644
--- a/source/org/jfree/data/statistics/Statistics.java
+++ b/source/org/jfree/data/statistics/Statistics.java
@@ -200,8 +200,9 @@
 
         double result = Double.NaN;
         if (values != null) {
+            int size = values.size();
             if (copyAndSort) {
-                int itemCount = values.size();
+                int itemCount = size;
                 List copy = new ArrayList(itemCount);
                 for (int i = 0; i < itemCount; i++) {
                     copy.add(i, values.get(i));
@@ -209,7 +210,7 @@
                 Collections.sort(copy);
                 values = copy;
             }
-            int count = values.size();
+            int count = size;
             if (count > 0) {
                 if (count % 2 == 1) {
                     if (count > 1) {

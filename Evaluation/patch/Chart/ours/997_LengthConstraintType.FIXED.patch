diff --git a/source/org/jfree/chart/block/BorderArrangement.java b/source/org/jfree/chart/block/BorderArrangement.java
index b3ae54b..9645213 100644
--- a/source/org/jfree/chart/block/BorderArrangement.java
+++ b/source/org/jfree/chart/block/BorderArrangement.java
@@ -424,9 +424,10 @@
         double[] w = new double[5];
         double[] h = new double[5];
         w[0] = constraint.getWidth();
-        if (this.topBlock != null) {
+        LengthConstraintType var_997 = LengthConstraintType.FIXED;
+		if (this.topBlock != null) {
             RectangleConstraint c1 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0,
+                    var_997, 0.0,
                     new Range(0.0, constraint.getHeight()),
                     LengthConstraintType.RANGE);
             Size2D size = this.topBlock.arrange(g2, c1);
@@ -435,7 +436,7 @@
         w[1] = w[0];
         if (this.bottomBlock != null) {
             RectangleConstraint c2 = new RectangleConstraint(w[0], null,
-                    LengthConstraintType.FIXED, 0.0, new Range(0.0,
+                    var_997, 0.0, new Range(0.0,
                     constraint.getHeight() - h[0]), LengthConstraintType.RANGE);
             Size2D size = this.bottomBlock.arrange(g2, c2);
             h[1] = size.height;
@@ -445,7 +446,7 @@
             RectangleConstraint c3 = new RectangleConstraint(0.0,
                     new Range(0.0, constraint.getWidth()),
                     LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
+                    var_997);
             Size2D size = this.leftBlock.arrange(g2, c3);
             w[2] = size.width;
         }
@@ -454,7 +455,7 @@
             RectangleConstraint c4 = new RectangleConstraint(0.0,
                     new Range(0.0, Math.max(constraint.getWidth() - w[2], 0.0)),
                     LengthConstraintType.RANGE, h[2], null,
-                    LengthConstraintType.FIXED);
+                    var_997);
             Size2D size = this.rightBlock.arrange(g2, c4);
             w[3] = size.width;
         }

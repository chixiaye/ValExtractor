diff --git a/source/org/jfree/chart/axis/Axis.java b/source/org/jfree/chart/axis/Axis.java
index cabb331..ec63bbc 100644
--- a/source/org/jfree/chart/axis/Axis.java
+++ b/source/org/jfree/chart/axis/Axis.java
@@ -1304,9 +1304,10 @@
         Rectangle2D labelBounds = TextUtilities.getTextBounds(label, g2, fm);
         Shape hotspot = null;
 
-        if (edge == RectangleEdge.TOP) {
+        double var_298 = getLabelAngle();
+		if (edge == RectangleEdge.TOP) {
             AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle(), labelBounds.getCenterX(),
+                    var_298, labelBounds.getCenterX(),
                     labelBounds.getCenterY());
             Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
             labelBounds = rotatedLabelBounds.getBounds2D();
@@ -1316,7 +1317,7 @@
             float labely = (float) (state.getCursor() - insets.getBottom()
                     - h / 2.0);
             TextUtilities.drawRotatedString(label, g2, labelx, labely,
-                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
+                    TextAnchor.CENTER, var_298, TextAnchor.CENTER);
             hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
                     labely - h / 2.0f, w, h);
             state.cursorUp(insets.getTop() + labelBounds.getHeight()
@@ -1324,7 +1325,7 @@
         }
         else if (edge == RectangleEdge.BOTTOM) {
             AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle(), labelBounds.getCenterX(),
+                    var_298, labelBounds.getCenterX(),
                     labelBounds.getCenterY());
             Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
             labelBounds = rotatedLabelBounds.getBounds2D();
@@ -1334,7 +1335,7 @@
             float labely = (float) (state.getCursor() + insets.getTop()
                     + h / 2.0);
             TextUtilities.drawRotatedString(label, g2, labelx, labely,
-                    TextAnchor.CENTER, getLabelAngle(), TextAnchor.CENTER);
+                    TextAnchor.CENTER, var_298, TextAnchor.CENTER);
             hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
                     labely - h / 2.0f, w, h);
             state.cursorDown(insets.getTop() + labelBounds.getHeight()
@@ -1342,7 +1343,7 @@
         }
         else if (edge == RectangleEdge.LEFT) {
             AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(),
+                    var_298 - Math.PI / 2.0, labelBounds.getCenterX(),
                     labelBounds.getCenterY());
             Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
             labelBounds = rotatedLabelBounds.getBounds2D();
@@ -1352,7 +1353,7 @@
                     - w / 2.0);
             float labely = (float) dataArea.getCenterY();
             TextUtilities.drawRotatedString(label, g2, labelx, labely,
-                    TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0,
+                    TextAnchor.CENTER, var_298 - Math.PI / 2.0,
                     TextAnchor.CENTER);
             hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
                     labely - h / 2.0f, w, h);
@@ -1362,7 +1363,7 @@
         else if (edge == RectangleEdge.RIGHT) {
 
             AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle() + Math.PI / 2.0,
+                    var_298 + Math.PI / 2.0,
                     labelBounds.getCenterX(), labelBounds.getCenterY());
             Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
             labelBounds = rotatedLabelBounds.getBounds2D();
@@ -1373,7 +1374,7 @@
             float labely = (float) (dataArea.getY() + dataArea.getHeight()
                     / 2.0);
             TextUtilities.drawRotatedString(label, g2, labelx, labely,
-                    TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0,
+                    TextAnchor.CENTER, var_298 + Math.PI / 2.0,
                     TextAnchor.CENTER);
             hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
                     labely - h / 2.0f, w, h);

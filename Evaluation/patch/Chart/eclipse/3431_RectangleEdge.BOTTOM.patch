diff --git a/source/org/jfree/chart/title/PaintScaleLegend.java b/source/org/jfree/chart/title/PaintScaleLegend.java
index c489277..b185ebf 100644
--- a/source/org/jfree/chart/title/PaintScaleLegend.java
+++ b/source/org/jfree/chart/title/PaintScaleLegend.java
@@ -574,32 +574,34 @@
                 this.axis.draw(g2, target.getMaxY() - this.stripWidth
                         - this.axisOffset, target, target, RectangleEdge.TOP,
                         null);
-            }
-            else if (axisEdge == RectangleEdge.BOTTOM) {
-                for (int i = 0; i < this.subdivisions; i++) {
-                    double v = base + (i * increment);
-                    Paint p = this.scale.getPaint(v);
-                    double vv0 = this.axis.valueToJava2D(v, target,
-                            RectangleEdge.BOTTOM);
-                    double vv1 = this.axis.valueToJava2D(v + increment, target,
-                            RectangleEdge.BOTTOM);
-                    double ww = Math.abs(vv1 - vv0) + 1.0;
-                    r.setRect(Math.min(vv0, vv1), target.getMinY(), ww,
-                            this.stripWidth);
-                    g2.setPaint(p);
-                    g2.fill(r);
-                }
-                if (isStripOutlineVisible()) {
-                    g2.setPaint(this.stripOutlinePaint);
-                    g2.setStroke(this.stripOutlineStroke);
-                    g2.draw(new Rectangle2D.Double(target.getMinX(),
-                            target.getMinY(), target.getWidth(),
-                            this.stripWidth));
-                }
-                this.axis.draw(g2, target.getMinY() + this.stripWidth
-                        + this.axisOffset, target, target,
-                        RectangleEdge.BOTTOM, null);
-            }
+            } else {
+				RectangleEdge var_3431 = RectangleEdge.BOTTOM;
+				if (axisEdge == var_3431) {
+				    for (int i = 0; i < this.subdivisions; i++) {
+				        double v = base + (i * increment);
+				        Paint p = this.scale.getPaint(v);
+				        double vv0 = this.axis.valueToJava2D(v, target,
+				                var_3431);
+				        double vv1 = this.axis.valueToJava2D(v + increment, target,
+				                var_3431);
+				        double ww = Math.abs(vv1 - vv0) + 1.0;
+				        r.setRect(Math.min(vv0, vv1), target.getMinY(), ww,
+				                this.stripWidth);
+				        g2.setPaint(p);
+				        g2.fill(r);
+				    }
+				    if (isStripOutlineVisible()) {
+				        g2.setPaint(this.stripOutlinePaint);
+				        g2.setStroke(this.stripOutlineStroke);
+				        g2.draw(new Rectangle2D.Double(target.getMinX(),
+				                target.getMinY(), target.getWidth(),
+				                this.stripWidth));
+				    }
+				    this.axis.draw(g2, target.getMinY() + this.stripWidth
+				            + this.axisOffset, target, target,
+				            var_3431, null);
+				}
+			}
         }
         else {
             RectangleEdge axisEdge = Plot.resolveRangeAxisLocation(

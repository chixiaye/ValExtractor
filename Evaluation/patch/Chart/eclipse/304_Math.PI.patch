diff --git a/source/org/jfree/chart/axis/Axis.java b/source/org/jfree/chart/axis/Axis.java
index cabb331..c349e39 100644
--- a/source/org/jfree/chart/axis/Axis.java
+++ b/source/org/jfree/chart/axis/Axis.java
@@ -1339,48 +1339,50 @@
                     labely - h / 2.0f, w, h);
             state.cursorDown(insets.getTop() + labelBounds.getHeight()
                     + insets.getBottom());
-        }
-        else if (edge == RectangleEdge.LEFT) {
-            AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle() - Math.PI / 2.0, labelBounds.getCenterX(),
-                    labelBounds.getCenterY());
-            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-            labelBounds = rotatedLabelBounds.getBounds2D();
-            float w = (float) labelBounds.getWidth();
-            float h = (float) labelBounds.getHeight();
-            float labelx = (float) (state.getCursor() - insets.getRight()
-                    - w / 2.0);
-            float labely = (float) dataArea.getCenterY();
-            TextUtilities.drawRotatedString(label, g2, labelx, labely,
-                    TextAnchor.CENTER, getLabelAngle() - Math.PI / 2.0,
-                    TextAnchor.CENTER);
-            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
-                    labely - h / 2.0f, w, h);
-            state.cursorLeft(insets.getLeft() + labelBounds.getWidth()
-                    + insets.getRight());
-        }
-        else if (edge == RectangleEdge.RIGHT) {
+        } else {
+			double var_304 = Math.PI;
+			if (edge == RectangleEdge.LEFT) {
+			    AffineTransform t = AffineTransform.getRotateInstance(
+			            getLabelAngle() - var_304 / 2.0, labelBounds.getCenterX(),
+			            labelBounds.getCenterY());
+			    Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
+			    labelBounds = rotatedLabelBounds.getBounds2D();
+			    float w = (float) labelBounds.getWidth();
+			    float h = (float) labelBounds.getHeight();
+			    float labelx = (float) (state.getCursor() - insets.getRight()
+			            - w / 2.0);
+			    float labely = (float) dataArea.getCenterY();
+			    TextUtilities.drawRotatedString(label, g2, labelx, labely,
+			            TextAnchor.CENTER, getLabelAngle() - var_304 / 2.0,
+			            TextAnchor.CENTER);
+			    hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
+			            labely - h / 2.0f, w, h);
+			    state.cursorLeft(insets.getLeft() + labelBounds.getWidth()
+			            + insets.getRight());
+			}
+			else if (edge == RectangleEdge.RIGHT) {
 
-            AffineTransform t = AffineTransform.getRotateInstance(
-                    getLabelAngle() + Math.PI / 2.0,
-                    labelBounds.getCenterX(), labelBounds.getCenterY());
-            Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
-            labelBounds = rotatedLabelBounds.getBounds2D();
-            float w = (float) labelBounds.getWidth();
-            float h = (float) labelBounds.getHeight();
-            float labelx = (float) (state.getCursor()
-                            + insets.getLeft() + w / 2.0);
-            float labely = (float) (dataArea.getY() + dataArea.getHeight()
-                    / 2.0);
-            TextUtilities.drawRotatedString(label, g2, labelx, labely,
-                    TextAnchor.CENTER, getLabelAngle() + Math.PI / 2.0,
-                    TextAnchor.CENTER);
-            hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
-                    labely - h / 2.0f, w, h);
-            state.cursorRight(insets.getLeft() + labelBounds.getWidth()
-                    + insets.getRight());
+			    AffineTransform t = AffineTransform.getRotateInstance(
+			            getLabelAngle() + var_304 / 2.0,
+			            labelBounds.getCenterX(), labelBounds.getCenterY());
+			    Shape rotatedLabelBounds = t.createTransformedShape(labelBounds);
+			    labelBounds = rotatedLabelBounds.getBounds2D();
+			    float w = (float) labelBounds.getWidth();
+			    float h = (float) labelBounds.getHeight();
+			    float labelx = (float) (state.getCursor()
+			                    + insets.getLeft() + w / 2.0);
+			    float labely = (float) (dataArea.getY() + dataArea.getHeight()
+			            / 2.0);
+			    TextUtilities.drawRotatedString(label, g2, labelx, labely,
+			            TextAnchor.CENTER, getLabelAngle() + var_304 / 2.0,
+			            TextAnchor.CENTER);
+			    hotspot = new Rectangle2D.Float(labelx - w / 2.0f,
+			            labely - h / 2.0f, w, h);
+			    state.cursorRight(insets.getLeft() + labelBounds.getWidth()
+			            + insets.getRight());
 
-        }
+			}
+		}
         if (plotState != null && hotspot != null) {
             ChartRenderingInfo owner = plotState.getOwner();
             if (owner != null) {

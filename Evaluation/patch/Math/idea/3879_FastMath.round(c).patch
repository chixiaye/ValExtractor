diff --git a/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java b/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
index 7fd7850..c456f90 100644
--- a/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
+++ b/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
@@ -339,6 +339,7 @@
         // length of sequence of tied ranks
         final int length = tiesTrace.size();
 
+        long round = FastMath.round(c);
         switch (tiesStrategy) {
             case  AVERAGE:  // Replace ranks with average
                 fill(ranks, tiesTrace, (2 * c + length - 1) / 2d);
@@ -351,7 +352,7 @@
                 break;
             case RANDOM:    // Fill with random integral values in [c, c + length - 1]
                 Iterator<Integer> iterator = tiesTrace.iterator();
-                long f = FastMath.round(c);
+                long f = round;
                 while (iterator.hasNext()) {
                     // No advertised exception because args are guaranteed valid
                     ranks[iterator.next()] =
@@ -361,7 +362,7 @@
             case SEQUENTIAL:  // Fill sequentially from c to c + length - 1
                 // walk and fill
                 iterator = tiesTrace.iterator();
-                f = FastMath.round(c);
+                f = round;
                 int i = 0;
                 while (iterator.hasNext()) {
                     ranks[iterator.next()] = f + i++;

diff --git a/src/main/java/org/apache/commons/math3/primes/PollardRho.java b/src/main/java/org/apache/commons/math3/primes/PollardRho.java
index fc2df20..90b37d3 100644
--- a/src/main/java/org/apache/commons/math3/primes/PollardRho.java
+++ b/src/main/java/org/apache/commons/math3/primes/PollardRho.java
@@ -140,7 +140,8 @@
         }
 
         // make a and b odd, keep in mind the common power of twos
-        final int aTwos = Integer.numberOfTrailingZeros(a);
+        int a1 = Integer.numberOfTrailingZeros(a);
+        final int aTwos = a1;
         a >>= aTwos;
         final int bTwos = Integer.numberOfTrailingZeros(b);
         b >>= bTwos;
@@ -156,7 +157,7 @@
             a = FastMath.abs(delta);
             // for speed optimization:
             // remove any power of two in a as b is guaranteed to be odd throughout all iterations
-            a >>= Integer.numberOfTrailingZeros(a);
+            a >>= a1;
         }
 
         // gcd(a,a) = a, just "add" the common power of twos

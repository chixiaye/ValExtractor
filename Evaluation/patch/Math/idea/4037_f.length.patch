diff --git a/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java b/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
index 2eb36b9..b0c2808 100644
--- a/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
+++ b/src/main/java/org/apache/commons/math3/transform/FastSineTransformer.java
@@ -136,19 +136,20 @@
      */
     protected double[] fst(double[] f) throws MathIllegalArgumentException {
 
-        final double[] transformed = new double[f.length];
+        int length = f.length;
+        final double[] transformed = new double[length];
 
-        if (!ArithmeticUtils.isPowerOfTwo(f.length)) {
+        if (!ArithmeticUtils.isPowerOfTwo(length)) {
             throw new MathIllegalArgumentException(
                     LocalizedFormats.NOT_POWER_OF_TWO_CONSIDER_PADDING,
-                    Integer.valueOf(f.length));
+                    Integer.valueOf(length));
         }
         if (f[0] != 0.0) {
             throw new MathIllegalArgumentException(
                     LocalizedFormats.FIRST_ELEMENT_NOT_ZERO,
                     Double.valueOf(f[0]));
         }
-        final int n = f.length;
+        final int n = length;
         if (n == 1) {       // trivial case
             transformed[0] = 0.0;
             return transformed;

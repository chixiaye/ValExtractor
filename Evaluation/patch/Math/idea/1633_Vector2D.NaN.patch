diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
index 5d8a992..233ed3d 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet.java
@@ -522,12 +522,13 @@
 
         final Vector2D[][] v = getVertices();
 
+        Vector2D naN = Vector2D.NaN;
         if (v.length == 0) {
             final BSPTree<Euclidean2D> tree = getTree(false);
             if (tree.getCut() == null && (Boolean) tree.getAttribute()) {
                 // the instance covers the whole space
                 setSize(Double.POSITIVE_INFINITY);
-                setBarycenter(Vector2D.NaN);
+                setBarycenter(naN);
             } else {
                 setSize(0);
                 setBarycenter(new Vector2D(0, 0));
@@ -535,7 +536,7 @@
         } else if (v[0][0] == null) {
             // there is at least one open-loop: the polygon is infinite
             setSize(Double.POSITIVE_INFINITY);
-            setBarycenter(Vector2D.NaN);
+            setBarycenter(naN);
         } else {
             // all loops are closed, we compute some integrals around the shape
 
@@ -561,7 +562,7 @@
             if (sum < 0) {
                 // the polygon as a finite outside surrounded by an infinite inside
                 setSize(Double.POSITIVE_INFINITY);
-                setBarycenter(Vector2D.NaN);
+                setBarycenter(naN);
             } else {
                 setSize(sum / 2);
                 setBarycenter(new Vector2D(sumX / (3 * sum), sumY / (3 * sum)));

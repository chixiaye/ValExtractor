diff --git a/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
index edf07d5..014fe8e 100644
--- a/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/general/LevenbergMarquardtOptimizer.java
@@ -337,6 +337,7 @@
                 weightedJacobian[k][pk] = diagR[pk];
             }
 
+            double sqrt = FastMath.sqrt(xNorm);
             if (firstIteration) {
                 // scale the point according to the norms of the columns
                 // of the initial jacobian
@@ -350,7 +351,7 @@
                     xNorm  += xk * xk;
                     diag[k] = dk;
                 }
-                xNorm = FastMath.sqrt(xNorm);
+                xNorm = sqrt;
 
                 // initialize the step bound delta
                 delta = (xNorm == 0) ? initialStepBoundFactor : (initialStepBoundFactor * xNorm);
@@ -477,7 +478,7 @@
                         double xK = diag[k] * currentPoint[k];
                         xNorm += xK * xK;
                     }
-                    xNorm = FastMath.sqrt(xNorm);
+                    xNorm = sqrt;
 
                     // tests for convergence.
                     if (checker != null && checker.converged(iter, previous, current)) {

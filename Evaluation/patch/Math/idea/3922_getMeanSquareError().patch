diff --git a/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java b/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
index c1a681a..7e4dfe6 100644
--- a/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
+++ b/src/main/java/org/apache/commons/math3/stat/regression/SimpleRegression.java
@@ -769,13 +769,14 @@
      * estimate the regression parameters
      */
     public RegressionResults regress() throws ModelSpecificationException, NoDataException {
+        double meanSquareError = getMeanSquareError();
         if (hasIntercept) {
           if( n < 3 ){
               throw new NoDataException(LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION);
           }
           if( FastMath.abs( sumXX ) > Precision.SAFE_MIN ){
               final double[] params = new double[]{ getIntercept(), getSlope() };
-              final double mse = getMeanSquareError();
+              final double mse = meanSquareError;
               final double _syy = sumYY + sumY * sumY / n;
               final double[] vcv = new double[]{
                 mse * (xbar *xbar /sumXX + 1.0 / n),
@@ -800,7 +801,7 @@
               throw new NoDataException(LocalizedFormats.NOT_ENOUGH_DATA_REGRESSION);
           }
           if( !Double.isNaN(sumXX) ){
-          final double[] vcv = new double[]{ getMeanSquareError() / sumXX };
+          final double[] vcv = new double[]{ meanSquareError / sumXX };
           final double[] params = new double[]{ sumXY/sumXX };
           return new RegressionResults(
                       params, new double[][]{vcv}, true, n, 1,

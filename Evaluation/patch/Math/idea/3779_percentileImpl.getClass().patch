diff --git a/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java b/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
index b08deba..e51b5b7 100644
--- a/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
+++ b/src/main/java/org/apache/commons/math3/stat/descriptive/DescriptiveStatistics.java
@@ -427,18 +427,19 @@
         if (percentileImpl instanceof Percentile) {
             ((Percentile) percentileImpl).setQuantile(p);
         } else {
+            Class<? extends UnivariateStatistic> aClass = percentileImpl.getClass();
             try {
-                percentileImpl.getClass().getMethod(SET_QUANTILE_METHOD_NAME,
+                aClass.getMethod(SET_QUANTILE_METHOD_NAME,
                         new Class[] {Double.TYPE}).invoke(percentileImpl,
                                 new Object[] {Double.valueOf(p)});
             } catch (NoSuchMethodException e1) { // Setter guard should prevent
                 throw new MathIllegalStateException(
                       LocalizedFormats.PERCENTILE_IMPLEMENTATION_UNSUPPORTED_METHOD,
-                      percentileImpl.getClass().getName(), SET_QUANTILE_METHOD_NAME);
+                      aClass.getName(), SET_QUANTILE_METHOD_NAME);
             } catch (IllegalAccessException e2) {
                 throw new MathIllegalStateException(
                       LocalizedFormats.PERCENTILE_IMPLEMENTATION_CANNOT_ACCESS_METHOD,
-                      SET_QUANTILE_METHOD_NAME, percentileImpl.getClass().getName());
+                      SET_QUANTILE_METHOD_NAME, aClass.getName());
             } catch (InvocationTargetException e3) {
                 throw new IllegalStateException(e3.getCause());
             }

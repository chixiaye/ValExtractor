diff --git a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
index d33ceab..f8e7ba8 100644
--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
@@ -604,15 +604,16 @@
         }
 
         final Hyperplane<S> hyperplane = node.getCut().getHyperplane();
+        BSPTree<S> minus1 = node.getMinus();
         switch (sub.side(hyperplane)) {
         case PLUS :
             return recurseIntersection(node.getPlus(), sub);
         case MINUS :
-            return recurseIntersection(node.getMinus(), sub);
+            return recurseIntersection(minus1, sub);
         case BOTH :
             final SubHyperplane.SplitSubHyperplane<S> split = sub.split(hyperplane);
             final SubHyperplane<S> plus  = recurseIntersection(node.getPlus(),  split.getPlus());
-            final SubHyperplane<S> minus = recurseIntersection(node.getMinus(), split.getMinus());
+            final SubHyperplane<S> minus = recurseIntersection(minus1, split.getMinus());
             if (plus == null) {
                 return minus;
             } else if (minus == null) {
@@ -622,7 +623,7 @@
             }
         default :
             return recurseIntersection(node.getPlus(),
-                                       recurseIntersection(node.getMinus(), sub));
+                                       recurseIntersection(minus1, sub));
         }
 
     }

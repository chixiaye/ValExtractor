diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..7ff73f8 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -2245,10 +2245,11 @@
     public Dfp dotrap(int type, String what, Dfp oper, Dfp result) {
         Dfp def = result;
 
+        byte sign1 = result.sign;
         switch (type) {
             case DfpField.FLAG_INVALID:
                 def = newInstance(getZero());
-                def.sign = result.sign;
+                def.sign = sign1;
                 def.nans = QNAN;
                 break;
 
@@ -2280,7 +2281,7 @@
             case DfpField.FLAG_UNDERFLOW:
                 if ( (result.exp+mant.length) < MIN_EXP) {
                     def = newInstance(getZero());
-                    def.sign = result.sign;
+                    def.sign = sign1;
                 } else {
                     def = newInstance(result);  // gradual underflow
                 }
@@ -2290,7 +2291,7 @@
             case DfpField.FLAG_OVERFLOW:
                 result.exp = result.exp - ERR_SCALE;
                 def = newInstance(getZero());
-                def.sign = result.sign;
+                def.sign = sign1;
                 def.nans = INFINITE;
                 break;
 

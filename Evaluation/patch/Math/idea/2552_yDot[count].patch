diff --git a/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java b/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
index a729441..694ea11 100644
--- a/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/MultistepIntegrator.java
@@ -370,6 +370,7 @@
             final double prev = interpolator.getPreviousTime();
             final double curr = interpolator.getCurrentTime();
 
+            double[] complete = yDot[count];
             if (count == 0) {
                 // first step, we need to store also the beginning of the step
                 interpolator.setInterpolatedTime(prev);
@@ -377,11 +378,11 @@
                 final ExpandableStatefulODE expandable = getExpandable();
                 final EquationsMapper primary = expandable.getPrimaryMapper();
                 primary.insertEquationData(interpolator.getInterpolatedState(), y[count]);
-                primary.insertEquationData(interpolator.getInterpolatedDerivatives(), yDot[count]);
+                primary.insertEquationData(interpolator.getInterpolatedDerivatives(), complete);
                 int index = 0;
                 for (final EquationsMapper secondary : expandable.getSecondaryMappers()) {
                     secondary.insertEquationData(interpolator.getInterpolatedSecondaryState(index), y[count]);
-                    secondary.insertEquationData(interpolator.getInterpolatedSecondaryDerivatives(index), yDot[count]);
+                    secondary.insertEquationData(interpolator.getInterpolatedSecondaryDerivatives(index), complete);
                     ++index;
                 }
             }
@@ -394,11 +395,11 @@
             final ExpandableStatefulODE expandable = getExpandable();
             final EquationsMapper primary = expandable.getPrimaryMapper();
             primary.insertEquationData(interpolator.getInterpolatedState(), y[count]);
-            primary.insertEquationData(interpolator.getInterpolatedDerivatives(), yDot[count]);
+            primary.insertEquationData(interpolator.getInterpolatedDerivatives(), complete);
             int index = 0;
             for (final EquationsMapper secondary : expandable.getSecondaryMappers()) {
                 secondary.insertEquationData(interpolator.getInterpolatedSecondaryState(index), y[count]);
-                secondary.insertEquationData(interpolator.getInterpolatedSecondaryDerivatives(index), yDot[count]);
+                secondary.insertEquationData(interpolator.getInterpolatedSecondaryDerivatives(index), complete);
                 ++index;
             }
 

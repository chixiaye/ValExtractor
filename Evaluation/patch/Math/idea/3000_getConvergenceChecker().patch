diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
index c837709..df612a1 100644
--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer.java
@@ -434,13 +434,14 @@
             sigma *= Math.exp(Math.min(1, (normps/chiN - 1) * cs / damps));
             final double bestFitness = fitness[arindex[0]];
             final double worstFitness = fitness[arindex[arindex.length - 1]];
+            ConvergenceChecker<PointValuePair> convergenceChecker = getConvergenceChecker();
             if (bestValue > bestFitness) {
                 bestValue = bestFitness;
                 lastResult = optimum;
                 optimum = new PointValuePair(fitfun.repair(bestArx.getColumn(0)),
                                              isMinimize ? bestFitness : -bestFitness);
-                if (getConvergenceChecker() != null && lastResult != null &&
-                    getConvergenceChecker().converged(iterations, optimum, lastResult)) {
+                if (convergenceChecker != null && lastResult != null &&
+                    convergenceChecker.converged(iterations, optimum, lastResult)) {
                     break generationLoop;
                 }
             }
@@ -480,12 +481,12 @@
                 break generationLoop;
             }
             // user defined termination
-            if (getConvergenceChecker() != null) {
+            if (convergenceChecker != null) {
                 final PointValuePair current
                     = new PointValuePair(bestArx.getColumn(0),
                                          isMinimize ? bestFitness : -bestFitness);
                 if (lastResult != null &&
-                    getConvergenceChecker().converged(iterations, current, lastResult)) {
+                    convergenceChecker.converged(iterations, current, lastResult)) {
                     break generationLoop;
                     }
                 lastResult = current;

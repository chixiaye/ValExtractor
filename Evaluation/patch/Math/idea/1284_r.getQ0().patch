diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
index c5c8ecf..324545a 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
@@ -973,10 +973,11 @@
      * @return a new rotation which is the composition of r by the instance
      */
     public FieldRotation<T> applyTo(final Rotation r) {
-        return new FieldRotation<T>(q0.multiply(r.getQ0()).subtract(q1.multiply(r.getQ1()).add(q2.multiply(r.getQ2())).add(q3.multiply(r.getQ3()))),
-                                    q0.multiply(r.getQ1()).add(q1.multiply(r.getQ0())).add(q3.multiply(r.getQ2()).subtract(q2.multiply(r.getQ3()))),
-                                    q0.multiply(r.getQ2()).add(q2.multiply(r.getQ0())).add(q1.multiply(r.getQ3()).subtract(q3.multiply(r.getQ1()))),
-                                    q0.multiply(r.getQ3()).add(q3.multiply(r.getQ0())).add(q2.multiply(r.getQ1()).subtract(q1.multiply(r.getQ2()))),
+        double q01 = r.getQ0();
+        return new FieldRotation<T>(q0.multiply(q01).subtract(q1.multiply(r.getQ1()).add(q2.multiply(r.getQ2())).add(q3.multiply(r.getQ3()))),
+                                    q0.multiply(r.getQ1()).add(q1.multiply(q01)).add(q3.multiply(r.getQ2()).subtract(q2.multiply(r.getQ3()))),
+                                    q0.multiply(r.getQ2()).add(q2.multiply(q01)).add(q1.multiply(r.getQ3()).subtract(q3.multiply(r.getQ1()))),
+                                    q0.multiply(r.getQ3()).add(q3.multiply(q01)).add(q2.multiply(r.getQ1()).subtract(q1.multiply(r.getQ2()))),
                                     false);
     }
 

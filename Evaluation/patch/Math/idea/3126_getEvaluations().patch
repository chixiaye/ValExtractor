diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
index efc0110..a252c62 100644
--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
@@ -1615,8 +1615,9 @@
         int ipt = 0;
         int jpt = 0;
         double fbeg = Double.NaN;
+        int evaluations1 = getEvaluations();
         do {
-            final int nfm = getEvaluations();
+            final int nfm = evaluations1;
             final int nfx = nfm - n;
             final int nfmm = nfm - 1;
             final int nfxm = nfx - 1;
@@ -1677,7 +1678,7 @@
 
             final double objectiveValue = computeObjectiveValue(currentBest.toArray());
             final double f = isMinimize ? objectiveValue : -objectiveValue;
-            final int numEval = getEvaluations(); // nfm + 1
+            final int numEval = evaluations1; // nfm + 1
             fAtInterpolationPoints.setEntry(nfm, f);
 
             if (numEval == 1) {
@@ -1744,7 +1745,7 @@
                 modelSecondDerivativesValues.setEntry(ih, (fbeg - fAtInterpolationPoints.getEntry(ipt) - fAtInterpolationPoints.getEntry(jpt) + f) / tmp);
 //                 throw new PathIsExploredException(); // XXX
             }
-        } while (getEvaluations() < npt);
+        } while (evaluations1 < npt);
     } // prelim
 
 

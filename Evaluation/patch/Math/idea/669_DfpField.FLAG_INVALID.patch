diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..2b170ec 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -1695,11 +1695,12 @@
         int excp;       // exceptions
 
         // make sure we don't mix number with different precision
+        int flagInvalid = DfpField.FLAG_INVALID;
         if (field.getRadixDigits() != divisor.field.getRadixDigits()) {
-            field.setIEEEFlagsBits(DfpField.FLAG_INVALID);
+            field.setIEEEFlagsBits(flagInvalid);
             final Dfp result = newInstance(getZero());
             result.nans = QNAN;
-            return dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, divisor, result);
+            return dotrap(flagInvalid, DIVIDE_TRAP, divisor, result);
         }
 
         Dfp result = newInstance(getZero());
@@ -1727,10 +1728,10 @@
             }
 
             if (divisor.nans == INFINITE && nans == INFINITE) {
-                field.setIEEEFlagsBits(DfpField.FLAG_INVALID);
+                field.setIEEEFlagsBits(flagInvalid);
                 result = newInstance(getZero());
                 result.nans = QNAN;
-                result = dotrap(DfpField.FLAG_INVALID, DIVIDE_TRAP, divisor, result);
+                result = dotrap(flagInvalid, DIVIDE_TRAP, divisor, result);
                 return result;
             }
         }

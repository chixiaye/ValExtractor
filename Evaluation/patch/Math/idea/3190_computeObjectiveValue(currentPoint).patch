diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
index 8d6a50b..07ab15a 100644
--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer.java
@@ -318,7 +318,8 @@
         final RealMatrix weightMatrixSqrt = getWeightSquareRoot();
 
         // Evaluate the function at the starting point and calculate its norm.
-        double[] currentObjective = computeObjectiveValue(currentPoint);
+        double[] doubles = computeObjectiveValue(currentPoint);
+        double[] currentObjective = doubles;
         double[] currentResiduals = computeResiduals(currentObjective);
         PointVectorValuePair current = new PointVectorValuePair(currentPoint, currentObjective);
         double currentCost = computeCost(currentResiduals);
@@ -430,7 +431,7 @@
                 }
 
                 // Evaluate the function at x + p and calculate its norm.
-                currentObjective = computeObjectiveValue(currentPoint);
+                currentObjective = doubles;
                 currentResiduals = computeResiduals(currentObjective);
                 current = new PointVectorValuePair(currentPoint, currentObjective);
                 currentCost = computeCost(currentResiduals);

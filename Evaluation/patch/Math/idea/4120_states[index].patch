diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
index 2b007b2..21afef8 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
@@ -268,29 +268,30 @@
                                           final int key, final int mask) {
         final int hash = hashOf(key);
         int index = hash & mask;
-        if (states[index] == FREE) {
+        byte state = states[index];
+        if (state == FREE) {
             return index;
-        } else if (states[index] == FULL && keys[index] == key) {
+        } else if (state == FULL && keys[index] == key) {
             return changeIndexSign(index);
         }
 
         int perturb = perturb(hash);
         int j = index;
-        if (states[index] == FULL) {
+        if (state == FULL) {
             while (true) {
                 j = probe(perturb, j);
                 index = j & mask;
                 perturb >>= PERTURB_SHIFT;
 
-                if (states[index] != FULL || keys[index] == key) {
+                if (state != FULL || keys[index] == key) {
                     break;
                 }
             }
         }
 
-        if (states[index] == FREE) {
+        if (state == FREE) {
             return index;
-        } else if (states[index] == FULL) {
+        } else if (state == FULL) {
             // due to the loop exit condition,
             // if (states[index] == FULL) then keys[index] == key
             return changeIndexSign(index);
@@ -301,9 +302,9 @@
             j = probe(perturb, j);
             index = j & mask;
 
-            if (states[index] == FREE) {
+            if (state == FREE) {
                 return firstRemoved;
-            } else if (states[index] == FULL && keys[index] == key) {
+            } else if (state == FULL && keys[index] == key) {
                 return changeIndexSign(index);
             }
 

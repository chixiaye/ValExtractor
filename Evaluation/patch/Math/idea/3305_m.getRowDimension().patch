diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
index 104bdf5..bf8a61b 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer.java
@@ -1226,14 +1226,15 @@
      * matrix representing the diagonal if m is a n-by-n matrix.
      */
     private static RealMatrix diag(final RealMatrix m) {
+        int rowDimension = m.getRowDimension();
         if (m.getColumnDimension() == 1) {
-            final double[][] d = new double[m.getRowDimension()][m.getRowDimension()];
-            for (int i = 0; i < m.getRowDimension(); i++) {
+            final double[][] d = new double[rowDimension][rowDimension];
+            for (int i = 0; i < rowDimension; i++) {
                 d[i][i] = m.getEntry(i, 0);
             }
             return new Array2DRowRealMatrix(d, false);
         } else {
-            final double[][] d = new double[m.getRowDimension()][1];
+            final double[][] d = new double[rowDimension][1];
             for (int i = 0; i < m.getColumnDimension(); i++) {
                 d[i][0] = m.getEntry(i, i);
             }

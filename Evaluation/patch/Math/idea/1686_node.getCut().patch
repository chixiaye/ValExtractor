diff --git a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
index d33ceab..e657ab3 100644
--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
@@ -468,7 +468,8 @@
      */
     private void recurseSides(final BSPTree<S> node, final SubHyperplane<S> sub, final Sides sides) {
 
-        if (node.getCut() == null) {
+        SubHyperplane<S> cut = node.getCut();
+        if (cut == null) {
             if ((Boolean) node.getAttribute()) {
                 // this is an inside cell expanding across the hyperplane
                 sides.rememberPlusFound();
@@ -477,11 +478,11 @@
             return;
         }
 
-        final Hyperplane<S> hyperplane = node.getCut().getHyperplane();
+        final Hyperplane<S> hyperplane = cut.getHyperplane();
         switch (sub.side(hyperplane)) {
         case PLUS :
             // the sub-hyperplane is entirely in the plus sub-tree
-            if (node.getCut().side(sub.getHyperplane()) == Side.PLUS) {
+            if (cut.side(sub.getHyperplane()) == Side.PLUS) {
                 if (!isEmpty(node.getMinus())) {
                     sides.rememberPlusFound();
                 }
@@ -496,7 +497,7 @@
             break;
         case MINUS :
             // the sub-hyperplane is entirely in the minus sub-tree
-            if (node.getCut().side(sub.getHyperplane()) == Side.PLUS) {
+            if (cut.side(sub.getHyperplane()) == Side.PLUS) {
                 if (!isEmpty(node.getPlus())) {
                     sides.rememberPlusFound();
                 }
@@ -523,7 +524,7 @@
             break;
         default :
             // the sub-hyperplane and the cut sub-hyperplane share the same hyperplane
-            if (node.getCut().getHyperplane().sameOrientationAs(sub.getHyperplane())) {
+            if (cut.getHyperplane().sameOrientationAs(sub.getHyperplane())) {
                 if ((node.getPlus().getCut() != null) || ((Boolean) node.getPlus().getAttribute())) {
                     sides.rememberPlusFound();
                 }

diff --git a/src/main/java/org/apache/commons/math3/analysis/function/Logit.java b/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
index a791e52..50c4322 100644
--- a/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
+++ b/src/main/java/org/apache/commons/math3/analysis/function/Logit.java
@@ -180,9 +180,10 @@
         // function value
         f[0] = FastMath.log((x - lo) / (hi - x));
 
+        int length = f.length;
         if (Double.isInfinite(f[0])) {
 
-            if (f.length > 1) {
+            if (length > 1) {
                 f[1] = Double.POSITIVE_INFINITY;
             }
             // fill the array with infinities
@@ -190,7 +191,7 @@
             //  for x close to hi the signs will always be +inf)
             // this is probably overkill, since the call to compose at the end
             // of the method will transform most infinities into NaN ...
-            for (int i = 2; i < f.length; ++i) {
+            for (int i = 2; i < length; ++i) {
                 f[i] = f[i - 2];
             }
 
@@ -201,7 +202,7 @@
             double xL = invL;
             final double invH = 1.0 / (hi - x);
             double xH = invH;
-            for (int i = 1; i < f.length; ++i) {
+            for (int i = 1; i < length; ++i) {
                 f[i] = xL + xH;
                 xL  *= -i * invL;
                 xH  *=  i * invH;

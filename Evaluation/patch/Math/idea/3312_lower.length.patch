diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java b/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java
index 814be5f..a0af87f 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/MultivariateFunctionPenaltyAdapter.java
@@ -130,13 +130,14 @@
         MathUtils.checkNotNull(lower);
         MathUtils.checkNotNull(upper);
         MathUtils.checkNotNull(scale);
-        if (lower.length != upper.length) {
-            throw new DimensionMismatchException(lower.length, upper.length);
+        int length = lower.length;
+        if (length != upper.length) {
+            throw new DimensionMismatchException(length, upper.length);
         }
-        if (lower.length != scale.length) {
-            throw new DimensionMismatchException(lower.length, scale.length);
+        if (length != scale.length) {
+            throw new DimensionMismatchException(length, scale.length);
         }
-        for (int i = 0; i < lower.length; ++i) {
+        for (int i = 0; i < length; ++i) {
             // note the following test is written in such a way it also fails for NaN
             if (!(upper[i] >= lower[i])) {
                 throw new NumberIsTooSmallException(upper[i], lower[i], true);

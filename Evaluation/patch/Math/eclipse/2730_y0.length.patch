diff --git a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
index ed2ddda..5e88299 100644
--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
@@ -467,7 +467,8 @@
 
     // first substep
     double t = t0 + subStep;
-    for (int i = 0; i < y0.length; ++i) {
+    int var_2730 = y0.length;
+	for (int i = 0; i < var_2730; ++i) {
       yTmp[i] = y0[i];
       yEnd[i] = y0[i] + subStep * f[0][i];
     }
@@ -478,11 +479,11 @@
 
       if (2 * j == n) {
         // save the point at the middle of the step
-        System.arraycopy(yEnd, 0, yMiddle, 0, y0.length);
+        System.arraycopy(yEnd, 0, yMiddle, 0, var_2730);
       }
 
       t += subStep;
-      for (int i = 0; i < y0.length; ++i) {
+      for (int i = 0; i < var_2730; ++i) {
         final double middle = yEnd[i];
         yEnd[i]       = yTmp[i] + subStep2 * f[j][i];
         yTmp[i]       = middle;
@@ -510,7 +511,7 @@
     }
 
     // correction of the last substep (at t0 + step)
-    for (int i = 0; i < y0.length; ++i) {
+    for (int i = 0; i < var_2730; ++i) {
       yEnd[i] = 0.5 * (yTmp[i] + yEnd[i] + subStep * f[n][i]);
     }
 

diff --git a/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java b/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
index 6046954..e27e177 100644
--- a/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
+++ b/src/main/java/org/apache/commons/math3/analysis/polynomials/PolynomialsUtils.java
@@ -53,30 +53,31 @@
         // initialize recurrence for Chebyshev polynomials
         // T0(X) = 1, T1(X) = 0 + 1 * X
         CHEBYSHEV_COEFFICIENTS = new ArrayList<BigFraction>();
-        CHEBYSHEV_COEFFICIENTS.add(BigFraction.ONE);
+        BigFraction var_418 = BigFraction.ONE;
+		CHEBYSHEV_COEFFICIENTS.add(var_418);
         CHEBYSHEV_COEFFICIENTS.add(BigFraction.ZERO);
-        CHEBYSHEV_COEFFICIENTS.add(BigFraction.ONE);
+        CHEBYSHEV_COEFFICIENTS.add(var_418);
 
         // initialize recurrence for Hermite polynomials
         // H0(X) = 1, H1(X) = 0 + 2 * X
         HERMITE_COEFFICIENTS = new ArrayList<BigFraction>();
-        HERMITE_COEFFICIENTS.add(BigFraction.ONE);
+        HERMITE_COEFFICIENTS.add(var_418);
         HERMITE_COEFFICIENTS.add(BigFraction.ZERO);
         HERMITE_COEFFICIENTS.add(BigFraction.TWO);
 
         // initialize recurrence for Laguerre polynomials
         // L0(X) = 1, L1(X) = 1 - 1 * X
         LAGUERRE_COEFFICIENTS = new ArrayList<BigFraction>();
-        LAGUERRE_COEFFICIENTS.add(BigFraction.ONE);
-        LAGUERRE_COEFFICIENTS.add(BigFraction.ONE);
+        LAGUERRE_COEFFICIENTS.add(var_418);
+        LAGUERRE_COEFFICIENTS.add(var_418);
         LAGUERRE_COEFFICIENTS.add(BigFraction.MINUS_ONE);
 
         // initialize recurrence for Legendre polynomials
         // P0(X) = 1, P1(X) = 0 + 1 * X
         LEGENDRE_COEFFICIENTS = new ArrayList<BigFraction>();
-        LEGENDRE_COEFFICIENTS.add(BigFraction.ONE);
+        LEGENDRE_COEFFICIENTS.add(var_418);
         LEGENDRE_COEFFICIENTS.add(BigFraction.ZERO);
-        LEGENDRE_COEFFICIENTS.add(BigFraction.ONE);
+        LEGENDRE_COEFFICIENTS.add(var_418);
 
         // initialize map for Jacobi polynomials
         JACOBI_COEFFICIENTS = new HashMap<JacobiKey, List<BigFraction>>();

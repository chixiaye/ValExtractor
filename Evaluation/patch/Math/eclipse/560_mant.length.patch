diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..d37a096 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -437,13 +437,14 @@
         striped[2] = '0';
         striped[3] = '0';
         int significantDigits=0;
-        for(;;) {
+        int var_560 = mant.length;
+		for(;;) {
             if (p == (fpdecimal.length())) {
                 break;
             }
 
             // Don't want to run pass the end of the array
-            if (q == mant.length*rsize+offset+1) {
+            if (q == var_560*rsize+offset+1) {
                 break;
             }
 
@@ -508,7 +509,7 @@
         decimalPos += i;
 
         // Make the mantissa length right by adding zeros at the end if necessary
-        while ((p - q) < (mant.length * rsize)) {
+        while ((p - q) < (var_560 * rsize)) {
             for (i = 0; i < rsize; i++) {
                 striped[++p] = '0';
             }
@@ -516,7 +517,7 @@
 
         // Ok, now we know how many trailing zeros there are,
         // and where the least significant digit is
-        for (i = mant.length - 1; i >= 0; i--) {
+        for (i = var_560 - 1; i >= 0; i--) {
             mant[i] = (striped[q]   - '0') * 1000 +
                       (striped[q+1] - '0') * 100  +
                       (striped[q+2] - '0') * 10   +

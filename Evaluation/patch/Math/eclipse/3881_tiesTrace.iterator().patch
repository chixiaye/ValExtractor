diff --git a/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java b/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
index 7fd7850..7a5e6b3 100644
--- a/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
+++ b/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
@@ -339,7 +339,8 @@
         // length of sequence of tied ranks
         final int length = tiesTrace.size();
 
-        switch (tiesStrategy) {
+        Iterator<Integer> var_3881 = tiesTrace.iterator();
+		switch (tiesStrategy) {
             case  AVERAGE:  // Replace ranks with average
                 fill(ranks, tiesTrace, (2 * c + length - 1) / 2d);
                 break;
@@ -350,7 +351,7 @@
                 fill(ranks, tiesTrace, c);
                 break;
             case RANDOM:    // Fill with random integral values in [c, c + length - 1]
-                Iterator<Integer> iterator = tiesTrace.iterator();
+                Iterator<Integer> iterator = var_3881;
                 long f = FastMath.round(c);
                 while (iterator.hasNext()) {
                     // No advertised exception because args are guaranteed valid
@@ -360,7 +361,7 @@
                 break;
             case SEQUENTIAL:  // Fill sequentially from c to c + length - 1
                 // walk and fill
-                iterator = tiesTrace.iterator();
+                iterator = var_3881;
                 f = FastMath.round(c);
                 int i = 0;
                 while (iterator.hasNext()) {

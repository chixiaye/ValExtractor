diff --git a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
index ed2ddda..d997ea2 100644
--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
@@ -467,9 +467,10 @@
 
     // first substep
     double t = t0 + subStep;
-    for (int i = 0; i < y0.length; ++i) {
+    double[] var_2734 = f[0];
+	for (int i = 0; i < y0.length; ++i) {
       yTmp[i] = y0[i];
-      yEnd[i] = y0[i] + subStep * f[0][i];
+      yEnd[i] = y0[i] + subStep * var_2734[i];
     }
     computeDerivatives(t, yEnd, f[1]);
 
@@ -494,12 +495,12 @@
       if (performTest && (j <= maxChecks) && (k < maxIter)) {
         double initialNorm = 0.0;
         for (int l = 0; l < scale.length; ++l) {
-          final double ratio = f[0][l] / scale[l];
+          final double ratio = var_2734[l] / scale[l];
           initialNorm += ratio * ratio;
         }
         double deltaNorm = 0.0;
         for (int l = 0; l < scale.length; ++l) {
-          final double ratio = (f[j+1][l] - f[0][l]) / scale[l];
+          final double ratio = (f[j+1][l] - var_2734[l]) / scale[l];
           deltaNorm += ratio * ratio;
         }
         if (deltaNorm > 4 * FastMath.max(1.0e-15, initialNorm)) {

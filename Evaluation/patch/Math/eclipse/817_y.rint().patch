diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
index af670fc..d1aebfc 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpMath.java
@@ -539,7 +539,8 @@
         }
 
         // X == 0
-        if (x.equals(zero)) {
+        Dfp var_817 = y.rint();
+		if (x.equals(zero)) {
             if (Dfp.copysign(one, x).greaterThan(zero)) {
                 // X == +0
                 if (y.greaterThan(zero)) {
@@ -549,7 +550,7 @@
                 }
             } else {
                 // X == -0
-                if (y.classify() == Dfp.FINITE && y.rint().equals(y) && !y.remainder(two).equals(zero)) {
+                if (y.classify() == Dfp.FINITE && var_817.equals(y) && !y.remainder(two).equals(zero)) {
                     // If y is odd integer
                     if (y.greaterThan(zero)) {
                         return x.newInstance(zero.negate());
@@ -598,7 +599,7 @@
             // x = +/- inf
             if (invert) {
                 // negative infinity
-                if (y.classify() == Dfp.FINITE && y.rint().equals(y) && !y.remainder(two).equals(zero)) {
+                if (y.classify() == Dfp.FINITE && var_817.equals(y) && !y.remainder(two).equals(zero)) {
                     // If y is odd integer
                     if (y.greaterThan(zero)) {
                         return x.newInstance(x.newInstance((byte)-1, Dfp.INFINITE));
@@ -623,7 +624,7 @@
             }
         }
 
-        if (invert && !y.rint().equals(y)) {
+        if (invert && !var_817.equals(y)) {
             x.getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
             return x.dotrap(DfpField.FLAG_INVALID, POW_TRAP, x, x.newInstance((byte)1, Dfp.QNAN));
         }
@@ -632,7 +633,7 @@
 
         Dfp r;
         if (y.lessThan(x.newInstance(100000000)) && y.greaterThan(x.newInstance(-100000000))) {
-            final Dfp u = y.rint();
+            final Dfp u = var_817;
             ui = u.intValue();
 
             final Dfp v = y.subtract(u);
@@ -653,7 +654,7 @@
             r = exp(log(x).multiply(y));
         }
 
-        if (invert && y.rint().equals(y) && !y.remainder(two).equals(zero)) {
+        if (invert && var_817.equals(y) && !y.remainder(two).equals(zero)) {
             // if y is odd integer
             r = r.negate();
         }

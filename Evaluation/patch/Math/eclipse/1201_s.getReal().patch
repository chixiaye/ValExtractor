diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
index c5c8ecf..0fa6d93 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
@@ -343,7 +343,8 @@
         // the first one greater than 0.45 is safe (this leads to a simple
         // test since qi = 0.45 implies 4 qi^2 - 1 = -0.19)
         T s = ort[0][0].add(ort[1][1]).add(ort[2][2]);
-        if (s.getReal() > -0.19) {
+        double var_1201 = s.getReal();
+		if (var_1201 > -0.19) {
             // compute q0 and deduce q1, q2 and q3
             quat[0] = s.add(1.0).sqrt().multiply(0.5);
             T inv = quat[0].reciprocal().multiply(0.25);
@@ -352,7 +353,7 @@
             quat[3] = inv.multiply(ort[0][1].subtract(ort[1][0]));
         } else {
             s = ort[0][0].subtract(ort[1][1]).subtract(ort[2][2]);
-            if (s.getReal() > -0.19) {
+            if (var_1201 > -0.19) {
                 // compute q1 and deduce q0, q2 and q3
                 quat[1] = s.add(1.0).sqrt().multiply(0.5);
                 T inv = quat[1].reciprocal().multiply(0.25);
@@ -361,7 +362,7 @@
                 quat[3] = inv.multiply(ort[0][2].add(ort[2][0]));
             } else {
                 s = ort[1][1].subtract(ort[0][0]).subtract(ort[2][2]);
-                if (s.getReal() > -0.19) {
+                if (var_1201 > -0.19) {
                     // compute q2 and deduce q0, q1 and q3
                     quat[2] = s.add(1.0).sqrt().multiply(0.5);
                     T inv = quat[2].reciprocal().multiply(0.25);

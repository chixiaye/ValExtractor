diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
index fbdafa3..650138a 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
@@ -553,14 +553,15 @@
   public double[] getAngles(RotationOrder order)
     throws CardanEulerSingularityException {
 
-    if (order == RotationOrder.XYZ) {
+    Vector3D var_1421 = Vector3D.PLUS_K;
+	if (order == RotationOrder.XYZ) {
 
       // r (Vector3D.plusK) coordinates are :
       //  sin (theta), -cos (theta) sin (phi), cos (theta) cos (phi)
       // (-r) (Vector3D.plusI) coordinates are :
       // cos (psi) cos (theta), -sin (psi) cos (theta), sin (theta)
       // and we can choose to have theta in the interval [-PI/2 ; +PI/2]
-      Vector3D v1 = applyTo(Vector3D.PLUS_K);
+      Vector3D v1 = applyTo(var_1421);
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_I);
       if  ((v2.getZ() < -0.9999999999) || (v2.getZ() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
@@ -596,7 +597,7 @@
       // (-r) (Vector3D.plusJ) coordinates are :
       // sin (psi) cos (phi), cos (psi) cos (phi), -sin (phi)
       // and we can choose to have phi in the interval [-PI/2 ; +PI/2]
-      Vector3D v1 = applyTo(Vector3D.PLUS_K);
+      Vector3D v1 = applyTo(var_1421);
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_J);
       if ((v2.getZ() < -0.9999999999) || (v2.getZ() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
@@ -633,7 +634,7 @@
       // -sin (theta) cos (phi), sin (phi), cos (theta) cos (phi)
       // and we can choose to have phi in the interval [-PI/2 ; +PI/2]
       Vector3D v1 = applyTo(Vector3D.PLUS_J);
-      Vector3D v2 = applyInverseTo(Vector3D.PLUS_K);
+      Vector3D v2 = applyInverseTo(var_1421);
       if ((v2.getY() < -0.9999999999) || (v2.getY() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
       }
@@ -651,7 +652,7 @@
       // -sin (theta), sin (phi) cos (theta), cos (phi) cos (theta)
       // and we can choose to have theta in the interval [-PI/2 ; +PI/2]
       Vector3D v1 = applyTo(Vector3D.PLUS_I);
-      Vector3D v2 = applyInverseTo(Vector3D.PLUS_K);
+      Vector3D v2 = applyInverseTo(var_1421);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
       }
@@ -740,8 +741,8 @@
       // (-r) (Vector3D.plusK) coordinates are :
       // sin (phi) sin (psi2), sin (phi) cos (psi2), cos (phi)
       // and we can choose to have phi in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_K);
-      Vector3D v2 = applyInverseTo(Vector3D.PLUS_K);
+      Vector3D v1 = applyTo(var_1421);
+      Vector3D v2 = applyInverseTo(var_1421);
       if ((v2.getZ() < -0.9999999999) || (v2.getZ() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
       }
@@ -758,8 +759,8 @@
       // (-r) (Vector3D.plusK) coordinates are :
       // -sin (theta) cos (psi2), sin (theta) sin (psi2), cos (theta)
       // and we can choose to have theta in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_K);
-      Vector3D v2 = applyInverseTo(Vector3D.PLUS_K);
+      Vector3D v1 = applyTo(var_1421);
+      Vector3D v2 = applyInverseTo(var_1421);
       if ((v2.getZ() < -0.9999999999) || (v2.getZ() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
       }

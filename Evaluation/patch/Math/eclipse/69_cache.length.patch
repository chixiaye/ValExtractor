diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
index a8877eb..232e4b1 100644
--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
@@ -193,20 +193,21 @@
 
         // get the cached compilers
         final DSCompiler[][] cache = compilers.get();
-        if (cache != null && cache.length > parameters &&
+        int var_69 = cache.length;
+		if (cache != null && var_69 > parameters &&
             cache[parameters].length > order && cache[parameters][order] != null) {
             // the compiler has already been created
             return cache[parameters][order];
         }
 
         // we need to create more compilers
-        final int maxParameters = FastMath.max(parameters, cache == null ? 0 : cache.length);
+        final int maxParameters = FastMath.max(parameters, cache == null ? 0 : var_69);
         final int maxOrder      = FastMath.max(order,     cache == null ? 0 : cache[0].length);
         final DSCompiler[][] newCache = new DSCompiler[maxParameters + 1][maxOrder + 1];
 
         if (cache != null) {
             // preserve the already created compilers
-            for (int i = 0; i < cache.length; ++i) {
+            for (int i = 0; i < var_69; ++i) {
                 System.arraycopy(cache[i], 0, newCache[i], 0, cache[i].length);
             }
         }

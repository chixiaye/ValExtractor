diff --git a/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java b/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
index 7fd7850..27b4153 100644
--- a/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
+++ b/src/main/java/org/apache/commons/math3/stat/ranking/NaturalRanking.java
@@ -233,19 +233,20 @@
         List<Integer> tiesTrace = new ArrayList<Integer>();
         tiesTrace.add(ranks[0].getPosition());
         for (int i = 1; i < ranks.length; i++) {
-            if (Double.compare(ranks[i].getValue(), ranks[i - 1].getValue()) > 0) {
+            IntDoublePair var_3868 = ranks[i];
+			if (Double.compare(var_3868.getValue(), ranks[i - 1].getValue()) > 0) {
                 // tie sequence has ended (or had length 1)
                 pos = i + 1;
                 if (tiesTrace.size() > 1) {  // if seq is nontrivial, resolve
                     resolveTie(out, tiesTrace);
                 }
                 tiesTrace = new ArrayList<Integer>();
-                tiesTrace.add(ranks[i].getPosition());
+                tiesTrace.add(var_3868.getPosition());
             } else {
                 // tie sequence continues
-                tiesTrace.add(ranks[i].getPosition());
+                tiesTrace.add(var_3868.getPosition());
             }
-            out[ranks[i].getPosition()] = pos;
+            out[var_3868.getPosition()] = pos;
         }
         if (tiesTrace.size() > 1) {  // handle tie sequence at end
             resolveTie(out, tiesTrace);

diff --git a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
index d33ceab..a7bd118 100644
--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
@@ -309,13 +309,14 @@
             final SubHyperplane<S>[] plusChar = (SubHyperplane<S>[]) Array.newInstance(SubHyperplane.class, 2);
             characterize(node.getPlus(), node.getCut().copySelf(), plusChar);
 
-            if (plusChar[0] != null && !plusChar[0].isEmpty()) {
+            SubHyperplane<S> var_1668 = plusChar[0];
+			if (var_1668 != null && !var_1668.isEmpty()) {
                 // plusChar[0] corresponds to a subset of the cut sub-hyperplane known to have
                 // outside cells on its plus side, we want to check if parts of this subset
                 // do have inside cells on their minus side
                 @SuppressWarnings("unchecked")
                 final SubHyperplane<S>[] minusChar = (SubHyperplane<S>[]) Array.newInstance(SubHyperplane.class, 2);
-                characterize(node.getMinus(), plusChar[0], minusChar);
+                characterize(node.getMinus(), var_1668, minusChar);
                 if (minusChar[1] != null && !minusChar[1].isEmpty()) {
                     // this part belongs to the boundary,
                     // it has the outside on its plus side and the inside on its minus side

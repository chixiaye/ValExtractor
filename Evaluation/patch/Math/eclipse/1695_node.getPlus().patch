diff --git a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
index d33ceab..a7e6963 100644
--- a/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
+++ b/src/main/java/org/apache/commons/math3/geometry/partitioning/AbstractRegion.java
@@ -604,14 +604,15 @@
         }
 
         final Hyperplane<S> hyperplane = node.getCut().getHyperplane();
-        switch (sub.side(hyperplane)) {
+        BSPTree<S> var_1695 = node.getPlus();
+		switch (sub.side(hyperplane)) {
         case PLUS :
-            return recurseIntersection(node.getPlus(), sub);
+            return recurseIntersection(var_1695, sub);
         case MINUS :
             return recurseIntersection(node.getMinus(), sub);
         case BOTH :
             final SubHyperplane.SplitSubHyperplane<S> split = sub.split(hyperplane);
-            final SubHyperplane<S> plus  = recurseIntersection(node.getPlus(),  split.getPlus());
+            final SubHyperplane<S> plus  = recurseIntersection(var_1695,  split.getPlus());
             final SubHyperplane<S> minus = recurseIntersection(node.getMinus(), split.getMinus());
             if (plus == null) {
                 return minus;
@@ -621,7 +622,7 @@
                 return plus.reunite(minus);
             }
         default :
-            return recurseIntersection(node.getPlus(),
+            return recurseIntersection(var_1695,
                                        recurseIntersection(node.getMinus(), sub));
         }
 

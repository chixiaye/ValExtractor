diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java b/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
index 74f6ff1..067406a 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/AbstractSimplex.java
@@ -132,11 +132,12 @@
      * @throws IllegalArgumentException if one of its vertices is duplicated.
      */
     protected AbstractSimplex(final double[][] referenceSimplex) {
-        if (referenceSimplex.length <= 0) {
+        int var_3439 = referenceSimplex.length;
+		if (var_3439 <= 0) {
             throw new NotStrictlyPositiveException(LocalizedFormats.SIMPLEX_NEED_ONE_POINT,
-                                                   referenceSimplex.length);
+                                                   var_3439);
         }
-        dimension = referenceSimplex.length - 1;
+        dimension = var_3439 - 1;
 
         // Only the relative position of the n final vertices with respect
         // to the first one are stored.
@@ -144,7 +145,7 @@
         final double[] ref0 = referenceSimplex[0];
 
         // Loop over vertices.
-        for (int i = 0; i < referenceSimplex.length; i++) {
+        for (int i = 0; i < var_3439; i++) {
             final double[] refI = referenceSimplex[i];
 
             // Safety checks.

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..32156e8 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -297,7 +297,8 @@
         // make sure we don't mix number with different precision
         if (getField().getRadixDigits() != x.getField().getRadixDigits()) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
-            final Dfp result = newInstance(getZero());
+            Dfp var_766 = newInstance(getZero());
+			final Dfp result = var_766;
             result.nans = QNAN;
             return dotrap(DfpField.FLAG_INVALID, trapName, x, result);
         }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..a9b5d7e 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -295,9 +295,10 @@
         final String trapName = "nextAfter";
 
         // make sure we don't mix number with different precision
+        Dfp var_766 = newInstance(getZero());
         if (getField().getRadixDigits() != x.getField().getRadixDigits()) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
-            final Dfp result = newInstance(getZero());
+            final Dfp result = var_766;
             result.nans = QNAN;
             return dotrap(DfpField.FLAG_INVALID, trapName, x, result);
         }
@@ -328,7 +329,7 @@
             }
 
             if (inc.equals(getZero())) {
-                result = copysign(newInstance(getZero()), this);
+                result = copysign(var_766, this);
             } else {
                 result = add(inc);
             }
@@ -347,7 +348,7 @@
             }
 
             if (inc.equals(getZero())) {
-                result = copysign(newInstance(getZero()), this);
+                result = copysign(var_766, this);
             } else {
                 result = subtract(inc);
             }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..da09091 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -295,9 +295,10 @@
         final String trapName = "nextAfter";
 
         // make sure we don't mix number with different precision
+        Dfp dfp = newInstance(getZero());
         if (getField().getRadixDigits() != x.getField().getRadixDigits()) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
-            final Dfp result = newInstance(getZero());
+            final Dfp result = dfp;
             result.nans = QNAN;
             return dotrap(DfpField.FLAG_INVALID, trapName, x, result);
         }
@@ -328,7 +329,7 @@
             }
 
             if (inc.equals(getZero())) {
-                result = copysign(newInstance(getZero()), this);
+                result = copysign(dfp, this);
             } else {
                 result = add(inc);
             }
@@ -347,7 +348,7 @@
             }
 
             if (inc.equals(getZero())) {
-                result = copysign(newInstance(getZero()), this);
+                result = copysign(dfp, this);
             } else {
                 result = subtract(inc);
             }

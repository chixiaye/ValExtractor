==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java b/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
index c39fc5e..cb5e513 100644
--- a/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
+++ b/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
@@ -124,7 +124,8 @@
                     public double value(double x) {
                         double p = 1;
                         double r = x;
-                        for (int i = f.length - 1; i >= 0; i--) {
+                        int var_6 = f.length;
+						for (int i = var_6 - 1; i >= 0; i--) {
                             p *= f[i].derivative().value(r);
                             r = f[i].value(r);
                         }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java b/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
index c39fc5e..cb5e513 100644
--- a/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
+++ b/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
@@ -124,7 +124,8 @@
                     public double value(double x) {
                         double p = 1;
                         double r = x;
-                        for (int i = f.length - 1; i >= 0; i--) {
+                        int var_6 = f.length;
+						for (int i = var_6 - 1; i >= 0; i--) {
                             p *= f[i].derivative().value(r);
                             r = f[i].value(r);
                         }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java b/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
index c39fc5e..ddaf6fd 100644
--- a/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
+++ b/src/main/java/org/apache/commons/math3/analysis/FunctionUtils.java
@@ -108,10 +108,12 @@
     @Deprecated
     public static DifferentiableUnivariateFunction compose(final DifferentiableUnivariateFunction ... f) {
         return new DifferentiableUnivariateFunction() {
+            private final int length = f.length;
+
             /** {@inheritDoc} */
             public double value(double x) {
                 double r = x;
-                for (int i = f.length - 1; i >= 0; i--) {
+                for (int i = length - 1; i >= 0; i--) {
                     r = f[i].value(r);
                 }
                 return r;
@@ -124,7 +126,7 @@
                     public double value(double x) {
                         double p = 1;
                         double r = x;
-                        for (int i = f.length - 1; i >= 0; i--) {
+                        for (int i = length - 1; i >= 0; i--) {
                             p *= f[i].derivative().value(r);
                             r = f[i].value(r);
                         }

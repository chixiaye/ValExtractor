==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
index ed2ddda..4c43c2e 100644
--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
@@ -728,8 +728,9 @@
                       reject = true;
                       loop   = false;
                       targetIter = k;
+                      double var_2753 = costPerTimeUnit[targetIter-1];
                       if ((targetIter > 1) &&
-                          (costPerTimeUnit[targetIter-1] <
+                          (var_2753 <
                            orderControl1 * costPerTimeUnit[targetIter])) {
                         --targetIter;
                       }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
index ed2ddda..7aa1311 100644
--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
@@ -707,6 +707,7 @@
               costPerTimeUnit[k] = costPerStep[k] / optimalStep[k];
 
               // check convergence
+              double var_2753 = costPerTimeUnit[targetIter-1];
               switch (k - targetIter) {
 
               case -1 :
@@ -729,7 +730,7 @@
                       loop   = false;
                       targetIter = k;
                       if ((targetIter > 1) &&
-                          (costPerTimeUnit[targetIter-1] <
+                          (var_2753 <
                            orderControl1 * costPerTimeUnit[targetIter])) {
                         --targetIter;
                       }
@@ -754,7 +755,7 @@
                     reject = true;
                     loop = false;
                     if ((targetIter > 1) &&
-                        (costPerTimeUnit[targetIter-1] <
+                        (var_2753 <
                          orderControl1 * costPerTimeUnit[targetIter])) {
                       --targetIter;
                     }
@@ -767,7 +768,7 @@
                 if (error > 1.0) {
                   reject = true;
                   if ((targetIter > 1) &&
-                      (costPerTimeUnit[targetIter-1] <
+                      (var_2753 <
                        orderControl1 * costPerTimeUnit[targetIter])) {
                     --targetIter;
                   }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
index ed2ddda..cc93d60 100644
--- a/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/nonstiff/GraggBulirschStoerIntegrator.java
@@ -707,6 +707,7 @@
               costPerTimeUnit[k] = costPerStep[k] / optimalStep[k];
 
               // check convergence
+                double v = costPerTimeUnit[targetIter - 1];
               switch (k - targetIter) {
 
               case -1 :
@@ -729,7 +730,7 @@
                       loop   = false;
                       targetIter = k;
                       if ((targetIter > 1) &&
-                          (costPerTimeUnit[targetIter-1] <
+                          (v <
                            orderControl1 * costPerTimeUnit[targetIter])) {
                         --targetIter;
                       }
@@ -754,7 +755,7 @@
                     reject = true;
                     loop = false;
                     if ((targetIter > 1) &&
-                        (costPerTimeUnit[targetIter-1] <
+                        (v <
                          orderControl1 * costPerTimeUnit[targetIter])) {
                       --targetIter;
                     }
@@ -767,7 +768,7 @@
                 if (error > 1.0) {
                   reject = true;
                   if ((targetIter > 1) &&
-                      (costPerTimeUnit[targetIter-1] <
+                      (v <
                        orderControl1 * costPerTimeUnit[targetIter])) {
                     --targetIter;
                   }

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
index 2b007b2..a34bcd1 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
@@ -177,7 +177,8 @@
         final int hash  = hashOf(key);
         int index = hash & mask;
         if (containsKey(key, index)) {
-            return values[index];
+            double var_4115 = values[index];
+			return var_4115;
         }
 
         if (states[index] == FREE) {

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
index 2b007b2..6768bf5 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
@@ -176,8 +176,9 @@
 
         final int hash  = hashOf(key);
         int index = hash & mask;
+        double var_4115 = values[index];
         if (containsKey(key, index)) {
-            return values[index];
+            return var_4115;
         }
 
         if (states[index] == FREE) {
@@ -189,7 +190,7 @@
             j = probe(perturb, j);
             index = j & mask;
             if (containsKey(key, index)) {
-                return values[index];
+                return var_4115;
             }
         }
 

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
index 2b007b2..3a939bd 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToDoubleHashMap.java
@@ -176,8 +176,9 @@
 
         final int hash  = hashOf(key);
         int index = hash & mask;
+        double value = values[index];
         if (containsKey(key, index)) {
-            return values[index];
+            return value;
         }
 
         if (states[index] == FREE) {
@@ -189,7 +190,7 @@
             j = probe(perturb, j);
             index = j & mask;
             if (containsKey(key, index)) {
-                return values[index];
+                return value;
             }
         }
 

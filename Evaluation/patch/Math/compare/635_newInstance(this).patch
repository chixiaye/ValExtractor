==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..0230bf6 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -1524,7 +1524,8 @@
             }
 
             if (nans == INFINITE && x.nans == FINITE && x.mant[mant.length-1] != 0) {
-                result = newInstance(this);
+                Dfp var_635 = newInstance(this);
+				result = var_635;
                 result.sign = (byte) (sign * x.sign);
                 return result;
             }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..0e4769e 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -1523,8 +1523,9 @@
                 return x;
             }
 
+            Dfp var_635 = newInstance(this);
             if (nans == INFINITE && x.nans == FINITE && x.mant[mant.length-1] != 0) {
-                result = newInstance(this);
+                result = var_635;
                 result.sign = (byte) (sign * x.sign);
                 return result;
             }
@@ -1536,7 +1537,7 @@
             }
 
             if (x.nans == INFINITE && nans == INFINITE) {
-                result = newInstance(this);
+                result = var_635;
                 result.sign = (byte) (sign * x.sign);
                 return result;
             }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/Dfp.java b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
index e6de61f..fee42b3 100644
--- a/src/main/java/org/apache/commons/math3/dfp/Dfp.java
+++ b/src/main/java/org/apache/commons/math3/dfp/Dfp.java
@@ -1523,8 +1523,9 @@
                 return x;
             }
 
+            Dfp result1 = newInstance(this);
             if (nans == INFINITE && x.nans == FINITE && x.mant[mant.length-1] != 0) {
-                result = newInstance(this);
+                result = result1;
                 result.sign = (byte) (sign * x.sign);
                 return result;
             }
@@ -1536,7 +1537,7 @@
             }
 
             if (x.nans == INFINITE && nans == INFINITE) {
-                result = newInstance(this);
+                result = result1;
                 result.sign = (byte) (sign * x.sign);
                 return result;
             }

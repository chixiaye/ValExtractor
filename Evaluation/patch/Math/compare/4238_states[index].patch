==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
index fd55902..8fc630c 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
@@ -223,7 +223,8 @@
             return true;
         }
 
-        if (states[index] == FREE) {
+        byte var_4238 = states[index];
+		if (var_4238 == FREE) {
             return false;
         }
 

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
index fd55902..d9c2be2 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
@@ -223,12 +223,13 @@
             return true;
         }
 
-        if (states[index] == FREE) {
+        byte var_4238 = states[index];
+		if (var_4238 == FREE) {
             return false;
         }
 
         int j = index;
-        for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {
+        for (int perturb = perturb(hash); var_4238 != FREE; perturb >>= PERTURB_SHIFT) {
             j = probe(perturb, j);
             index = j & mask;
             if (containsKey(key, index)) {

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java b/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
index fd55902..f9c698f 100644
--- a/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
+++ b/src/main/java/org/apache/commons/math3/util/OpenIntToFieldHashMap.java
@@ -223,12 +223,13 @@
             return true;
         }
 
-        if (states[index] == FREE) {
+        byte state = states[index];
+        if (state == FREE) {
             return false;
         }
 
         int j = index;
-        for (int perturb = perturb(hash); states[index] != FREE; perturb >>= PERTURB_SHIFT) {
+        for (int perturb = perturb(hash); state != FREE; perturb >>= PERTURB_SHIFT) {
             j = probe(perturb, j);
             index = j & mask;
             if (containsKey(key, index)) {

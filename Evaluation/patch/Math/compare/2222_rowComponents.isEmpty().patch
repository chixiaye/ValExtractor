==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java b/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
index d99277d..69cd9fd 100644
--- a/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
+++ b/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
@@ -320,7 +320,8 @@
         List<Number> rowComponents = new ArrayList<Number>();
         for (boolean loop = true; loop;){
 
-            if (!rowComponents.isEmpty()) {
+            boolean var_2222 = rowComponents.isEmpty();
+			if (!var_2222) {
                 CompositeFormat.parseAndIgnoreWhitespace(source, pos);
                 if (!CompositeFormat.parseFixedstring(source, trimmedColumnSeparator, pos)) {
                     if (trimmedRowSuffix.length() != 0 &&

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java b/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
index d99277d..159d60b 100644
--- a/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
+++ b/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
@@ -318,9 +318,10 @@
         // parse components
         List<List<Number>> matrix = new ArrayList<List<Number>>();
         List<Number> rowComponents = new ArrayList<Number>();
+        boolean var_2222 = rowComponents.isEmpty();
         for (boolean loop = true; loop;){
 
-            if (!rowComponents.isEmpty()) {
+            if (!var_2222) {
                 CompositeFormat.parseAndIgnoreWhitespace(source, pos);
                 if (!CompositeFormat.parseFixedstring(source, trimmedColumnSeparator, pos)) {
                     if (trimmedRowSuffix.length() != 0 &&
@@ -351,7 +352,7 @@
                 if (component != null) {
                     rowComponents.add(component);
                 } else {
-                    if (rowComponents.isEmpty()) {
+                    if (var_2222) {
                         loop = false;
                     } else {
                         // invalid component
@@ -364,7 +365,7 @@
 
         }
 
-        if (!rowComponents.isEmpty()) {
+        if (!var_2222) {
             matrix.add(rowComponents);
         }
 

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java b/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
index d99277d..170d28d 100644
--- a/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
+++ b/src/main/java/org/apache/commons/math3/linear/RealMatrixFormat.java
@@ -318,9 +318,10 @@
         // parse components
         List<List<Number>> matrix = new ArrayList<List<Number>>();
         List<Number> rowComponents = new ArrayList<Number>();
+        boolean empty = rowComponents.isEmpty();
         for (boolean loop = true; loop;){
 
-            if (!rowComponents.isEmpty()) {
+            if (!empty) {
                 CompositeFormat.parseAndIgnoreWhitespace(source, pos);
                 if (!CompositeFormat.parseFixedstring(source, trimmedColumnSeparator, pos)) {
                     if (trimmedRowSuffix.length() != 0 &&
@@ -351,7 +352,7 @@
                 if (component != null) {
                     rowComponents.add(component);
                 } else {
-                    if (rowComponents.isEmpty()) {
+                    if (empty) {
                         loop = false;
                     } else {
                         // invalid component
@@ -364,7 +365,7 @@
 
         }
 
-        if (!rowComponents.isEmpty()) {
+        if (!empty) {
             matrix.add(rowComponents);
         }
 

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
index 670d707..c4487cd 100644
--- a/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
@@ -170,8 +170,9 @@
                 Precision.equals(fb, 0))  {
                 return b;
             }
+            double var_495 = FastMath.abs(fb);
             if (FastMath.abs(e) < tol ||
-                FastMath.abs(fa) <= FastMath.abs(fb)) {
+                FastMath.abs(fa) <= var_495) {
                 // Force bisection.
                 d = m;
                 e = d;

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
index 670d707..95dddbf 100644
--- a/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
@@ -154,7 +154,8 @@
         final double eps = getRelativeAccuracy();
 
         while (true) {
-            if (FastMath.abs(fc) < FastMath.abs(fb)) {
+            double var_495 = FastMath.abs(fb);
+			if (FastMath.abs(fc) < var_495) {
                 a = b;
                 b = c;
                 c = a;
@@ -171,7 +172,7 @@
                 return b;
             }
             if (FastMath.abs(e) < tol ||
-                FastMath.abs(fa) <= FastMath.abs(fb)) {
+                FastMath.abs(fa) <= var_495) {
                 // Force bisection.
                 d = m;
                 e = d;

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java b/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
index 670d707..363d778 100644
--- a/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
+++ b/src/main/java/org/apache/commons/math3/analysis/solvers/BrentSolver.java
@@ -154,7 +154,8 @@
         final double eps = getRelativeAccuracy();
 
         while (true) {
-            if (FastMath.abs(fc) < FastMath.abs(fb)) {
+            double abs = FastMath.abs(fb);
+            if (FastMath.abs(fc) < abs) {
                 a = b;
                 b = c;
                 c = a;
@@ -171,7 +172,7 @@
                 return b;
             }
             if (FastMath.abs(e) < tol ||
-                FastMath.abs(fa) <= FastMath.abs(fb)) {
+                FastMath.abs(fa) <= abs) {
                 // Force bisection.
                 d = m;
                 e = d;

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
index fbdafa3..99c8d83 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
@@ -686,7 +686,8 @@
       // (-r) (Vector3D.plusI) coordinates are :
       // cos (psi), -sin (psi) cos (phi2), sin (psi) sin (phi2)
       // and we can choose to have psi in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+      Vector3D var_1424 = applyTo(Vector3D.PLUS_I);
+	Vector3D v1 = var_1424;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_I);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
index fbdafa3..0357a0e 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
@@ -607,14 +607,16 @@
         FastMath.atan2(v2.getX(), v2.getY())
       };
 
-    } else if (order == RotationOrder.YZX) {
+    } else {
+		Vector3D var_1424 = applyTo(Vector3D.PLUS_I);
+		if (order == RotationOrder.YZX) {
 
       // r (Vector3D.plusI) coordinates are :
       // cos (psi) cos (theta), sin (psi), -cos (psi) sin (theta)
       // (-r) (Vector3D.plusJ) coordinates are :
       // sin (psi), cos (phi) cos (psi), -sin (phi) cos (psi)
       // and we can choose to have psi in the interval [-PI/2 ; +PI/2]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+		  Vector3D v1 = var_1424;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_J);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
@@ -650,7 +652,7 @@
       // (-r) (Vector3D.plusK) coordinates are :
       // -sin (theta), sin (phi) cos (theta), cos (phi) cos (theta)
       // and we can choose to have theta in the interval [-PI/2 ; +PI/2]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+		  Vector3D v1 = var_1424;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_K);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
@@ -668,7 +670,7 @@
       // (-r) (Vector3D.plusI) coordinates are :
       // cos (theta), sin (theta) sin (phi2), sin (theta) cos (phi2)
       // and we can choose to have theta in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+		  Vector3D v1 = var_1424;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_I);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
@@ -686,7 +688,7 @@
       // (-r) (Vector3D.plusI) coordinates are :
       // cos (psi), -sin (psi) cos (phi2), sin (psi) sin (phi2)
       // and we can choose to have psi in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+		  Vector3D v1 = var_1424;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_I);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
@@ -770,6 +772,7 @@
       };
 
     }
+	}
 
   }
 

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
index fbdafa3..c39347e 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
@@ -607,14 +607,16 @@
         FastMath.atan2(v2.getX(), v2.getY())
       };
 
-    } else if (order == RotationOrder.YZX) {
+    } else {
+        Vector3D vector3D = applyTo(Vector3D.PLUS_I);
+        if (order == RotationOrder.YZX) {
 
       // r (Vector3D.plusI) coordinates are :
       // cos (psi) cos (theta), sin (psi), -cos (psi) sin (theta)
       // (-r) (Vector3D.plusJ) coordinates are :
       // sin (psi), cos (phi) cos (psi), -sin (phi) cos (psi)
       // and we can choose to have psi in the interval [-PI/2 ; +PI/2]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+          Vector3D v1 = vector3D;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_J);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
@@ -650,7 +652,7 @@
       // (-r) (Vector3D.plusK) coordinates are :
       // -sin (theta), sin (phi) cos (theta), cos (phi) cos (theta)
       // and we can choose to have theta in the interval [-PI/2 ; +PI/2]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+          Vector3D v1 = vector3D;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_K);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(true);
@@ -668,7 +670,7 @@
       // (-r) (Vector3D.plusI) coordinates are :
       // cos (theta), sin (theta) sin (phi2), sin (theta) cos (phi2)
       // and we can choose to have theta in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+          Vector3D v1 = vector3D;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_I);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
@@ -686,7 +688,7 @@
       // (-r) (Vector3D.plusI) coordinates are :
       // cos (psi), -sin (psi) cos (phi2), sin (psi) sin (phi2)
       // and we can choose to have psi in the interval [0 ; PI]
-      Vector3D v1 = applyTo(Vector3D.PLUS_I);
+          Vector3D v1 = vector3D;
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_I);
       if ((v2.getX() < -0.9999999999) || (v2.getX() > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
@@ -770,6 +772,7 @@
       };
 
     }
+    }
 
   }
 

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
index 3898435..536908e 100644
--- a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
@@ -413,7 +413,8 @@
             // last part of the step, after the last event
             interpolator.setInterpolatedTime(currentT);
             final double[] currentY = new double[y.length];
-            expandable.getPrimaryMapper().insertEquationData(interpolator.getInterpolatedState(),
+            double[] var_2541 = interpolator.getInterpolatedState();
+			expandable.getPrimaryMapper().insertEquationData(var_2541,
                                                              currentY);
             int index = 0;
             for (EquationsMapper secondary : expandable.getSecondaryMappers()) {

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
index 3898435..53662c1 100644
--- a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
@@ -343,6 +343,7 @@
                 }
             }
 
+            double[] var_2541 = interpolator.getInterpolatedState();
             while (!occurringEvents.isEmpty()) {
 
                 // handle the chronologically first event
@@ -358,7 +359,7 @@
                 // get state at event time
                 interpolator.setInterpolatedTime(eventT);
                 final double[] eventYComplete = new double[y.length];
-                expandable.getPrimaryMapper().insertEquationData(interpolator.getInterpolatedState(),
+                expandable.getPrimaryMapper().insertEquationData(var_2541,
                                                                  eventYComplete);
                 int index = 0;
                 for (EquationsMapper secondary : expandable.getSecondaryMappers()) {
@@ -413,7 +414,7 @@
             // last part of the step, after the last event
             interpolator.setInterpolatedTime(currentT);
             final double[] currentY = new double[y.length];
-            expandable.getPrimaryMapper().insertEquationData(interpolator.getInterpolatedState(),
+            expandable.getPrimaryMapper().insertEquationData(var_2541,
                                                              currentY);
             int index = 0;
             for (EquationsMapper secondary : expandable.getSecondaryMappers()) {

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
index 3898435..2152898 100644
--- a/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
+++ b/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator.java
@@ -343,6 +343,7 @@
                 }
             }
 
+        double[] interpolatedState = interpolator.getInterpolatedState();
             while (!occurringEvents.isEmpty()) {
 
                 // handle the chronologically first event
@@ -358,7 +359,7 @@
                 // get state at event time
                 interpolator.setInterpolatedTime(eventT);
                 final double[] eventYComplete = new double[y.length];
-                expandable.getPrimaryMapper().insertEquationData(interpolator.getInterpolatedState(),
+                expandable.getPrimaryMapper().insertEquationData(interpolatedState,
                                                                  eventYComplete);
                 int index = 0;
                 for (EquationsMapper secondary : expandable.getSecondaryMappers()) {
@@ -413,7 +414,7 @@
             // last part of the step, after the last event
             interpolator.setInterpolatedTime(currentT);
             final double[] currentY = new double[y.length];
-            expandable.getPrimaryMapper().insertEquationData(interpolator.getInterpolatedState(),
+            expandable.getPrimaryMapper().insertEquationData(interpolatedState,
                                                              currentY);
             int index = 0;
             for (EquationsMapper secondary : expandable.getSecondaryMappers()) {

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..32f314a 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -360,7 +360,8 @@
 
         if (result.equals(getZero()) && this.equals(getZero()) == false) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
-            result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
+            Dfp var_762 = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
+			result = var_762;
         }
 
         return result;

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..37517a1 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -353,14 +353,15 @@
             }
         }
 
+        Dfp var_762 = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
         if (result.classify() == INFINITE && this.classify() != INFINITE) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
-            result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
+            result = var_762;
         }
 
         if (result.equals(getZero()) && this.equals(getZero()) == false) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
-            result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
+            result = var_762;
         }
 
         return result;

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..fecf4c5 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -353,14 +353,15 @@
             }
         }
 
+        Dfp dotrap = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
         if (result.classify() == INFINITE && this.classify() != INFINITE) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
-            result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
+            result = dotrap;
         }
 
         if (result.equals(getZero()) && this.equals(getZero()) == false) {
             getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
-            result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
+            result = dotrap;
         }
 
         return result;

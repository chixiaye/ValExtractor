==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java b/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
index 2d2df2d..8bc99d1 100644
--- a/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
+++ b/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
@@ -237,7 +237,8 @@
 
             // Move on to the next step.
             nextTime += h;
-            nextInStep = isNextInStep(nextTime, interpolator);
+            boolean var_2916 = isNextInStep(nextTime, interpolator);
+			nextInStep = var_2916;
         }
 
         if (isLast) {

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java b/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
index 2d2df2d..d30c43c 100644
--- a/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
+++ b/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
@@ -227,7 +227,8 @@
         }
 
         // Process normalized steps as long as they are in the current step.
-        boolean nextInStep = isNextInStep(nextTime, interpolator);
+        boolean var_2916 = isNextInStep(nextTime, interpolator);
+		boolean nextInStep = var_2916;
         while (nextInStep) {
             // Output the stored previous step.
             doNormalizedStep(false);
@@ -237,7 +238,7 @@
 
             // Move on to the next step.
             nextTime += h;
-            nextInStep = isNextInStep(nextTime, interpolator);
+            nextInStep = var_2916;
         }
 
         if (isLast) {

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java b/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
index 2d2df2d..9990c39 100644
--- a/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
+++ b/src/main/java/org/apache/commons/math3/ode/sampling/StepNormalizer.java
@@ -227,7 +227,8 @@
         }
 
         // Process normalized steps as long as they are in the current step.
-        boolean nextInStep = isNextInStep(nextTime, interpolator);
+        boolean nextInStep1 = isNextInStep(nextTime, interpolator);
+        boolean nextInStep = nextInStep1;
         while (nextInStep) {
             // Output the stored previous step.
             doNormalizedStep(false);
@@ -237,7 +238,7 @@
 
             // Move on to the next step.
             nextTime += h;
-            nextInStep = isNextInStep(nextTime, interpolator);
+            nextInStep = nextInStep1;
         }
 
         if (isLast) {

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
index 6a7c33a..e56d81f 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
@@ -442,7 +442,9 @@
         // call of RESCUE that makes a call of CALFUN.
 
         int state = 20;
-        for(;;) switch (state) {
+        for(;;) {
+			int var_3360 = getEvaluations();
+			switch (state) {
         case 20: {
             printState(20); // XXX
             if (trustRegionCenterInterpolationPointIndex != kbase) {
@@ -456,7 +458,7 @@
                         ih++;
                     }
                 }
-                if (getEvaluations() > npt) {
+			        if (var_3360 > npt) {
                     for (int k = 0; k < npt; k++) {
                         double temp = ZERO;
                         for (int j = 0; j < n; j++) {
@@ -501,7 +503,7 @@
                 // Computing 2nd power
                 deltaOne = TEN * rho;
                 distsq = deltaOne * deltaOne;
-                if (getEvaluations() <= nfsav + 2) {
+			        if (var_3360 <= nfsav + 2) {
                     state = 650; break;
                 }
 
@@ -862,7 +864,7 @@
             diffb = diffa;
             diffa = Math.abs(diff);
             if (dnorm > rho) {
-                nfsav = getEvaluations();
+			        nfsav = var_3360;
             }
 
             // Pick the next value of DELTA after a trust region step.
@@ -1182,7 +1184,7 @@
                 }
                 delta = Math.max(delta, rho);
                 ntrits = 0;
-                nfsav = getEvaluations();
+			        nfsav = var_3360;
                 state = 60; break;
             }
 
@@ -1218,6 +1220,7 @@
         default: {
             throw new MathIllegalStateException(LocalizedFormats.SIMPLE_MESSAGE, "bobyqb");
         }}
+		}
     } // bobyqb
 
     // ----------------------------------------------------------------------------------------

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
index 6a7c33a..0b0b75e 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
@@ -422,7 +422,8 @@
         int ntrits = 0;
         int itest = 0;
         int knew = 0;
-        int nfsav = getEvaluations();
+        int var_3360 = getEvaluations();
+		int nfsav = var_3360;
         double rho = initialTrustRegionRadius;
         double delta = rho;
         double diffa = ZERO;
@@ -456,7 +457,7 @@
                         ih++;
                     }
                 }
-                if (getEvaluations() > npt) {
+                if (var_3360 > npt) {
                     for (int k = 0; k < npt; k++) {
                         double temp = ZERO;
                         for (int j = 0; j < n; j++) {
@@ -501,7 +502,7 @@
                 // Computing 2nd power
                 deltaOne = TEN * rho;
                 distsq = deltaOne * deltaOne;
-                if (getEvaluations() <= nfsav + 2) {
+                if (var_3360 <= nfsav + 2) {
                     state = 650; break;
                 }
 
@@ -862,7 +863,7 @@
             diffb = diffa;
             diffa = Math.abs(diff);
             if (dnorm > rho) {
-                nfsav = getEvaluations();
+                nfsav = var_3360;
             }
 
             // Pick the next value of DELTA after a trust region step.
@@ -1182,7 +1183,7 @@
                 }
                 delta = Math.max(delta, rho);
                 ntrits = 0;
-                nfsav = getEvaluations();
+                nfsav = var_3360;
                 state = 60; break;
             }
 

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
index 6a7c33a..50ee180 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
@@ -422,7 +422,8 @@
         int ntrits = 0;
         int itest = 0;
         int knew = 0;
-        int nfsav = getEvaluations();
+        int evaluations1 = getEvaluations();
+        int nfsav = evaluations1;
         double rho = initialTrustRegionRadius;
         double delta = rho;
         double diffa = ZERO;
@@ -456,7 +457,7 @@
                         ih++;
                     }
                 }
-                if (getEvaluations() > npt) {
+                if (evaluations1 > npt) {
                     for (int k = 0; k < npt; k++) {
                         double temp = ZERO;
                         for (int j = 0; j < n; j++) {
@@ -501,7 +502,7 @@
                 // Computing 2nd power
                 deltaOne = TEN * rho;
                 distsq = deltaOne * deltaOne;
-                if (getEvaluations() <= nfsav + 2) {
+                if (evaluations1 <= nfsav + 2) {
                     state = 650; break;
                 }
 
@@ -862,7 +863,7 @@
             diffb = diffa;
             diffa = Math.abs(diff);
             if (dnorm > rho) {
-                nfsav = getEvaluations();
+                nfsav = evaluations1;
             }
 
             // Pick the next value of DELTA after a trust region step.
@@ -1182,7 +1183,7 @@
                 }
                 delta = Math.max(delta, rho);
                 ntrits = 0;
-                nfsav = getEvaluations();
+                nfsav = evaluations1;
                 state = 60; break;
             }
 

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java b/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
index 75ed7c6..e72a804 100644
--- a/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
+++ b/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
@@ -535,7 +535,8 @@
     }
 
     if (currentState != null) {
-        for (int i = 0; i < currentState.length; ++i) {
+        int var_2911 = currentState.length;
+		for (int i = 0; i < var_2911; ++i) {
             out.writeDouble(currentState[i]);
         }
     }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java b/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
index 75ed7c6..4d29937 100644
--- a/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
+++ b/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
@@ -517,10 +517,11 @@
   protected void writeBaseExternal(final ObjectOutput out)
     throws IOException {
 
+    int var_2911 = currentState.length;
     if (currentState == null) {
         out.writeInt(-1);
     } else {
-        out.writeInt(currentState.length);
+        out.writeInt(var_2911);
     }
     out.writeDouble(globalPreviousTime);
     out.writeDouble(globalCurrentTime);
@@ -535,7 +536,7 @@
     }
 
     if (currentState != null) {
-        for (int i = 0; i < currentState.length; ++i) {
+        for (int i = 0; i < var_2911; ++i) {
             out.writeDouble(currentState[i]);
         }
     }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java b/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
index 75ed7c6..e811388 100644
--- a/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
+++ b/src/main/java/org/apache/commons/math3/ode/sampling/AbstractStepInterpolator.java
@@ -517,10 +517,11 @@
   protected void writeBaseExternal(final ObjectOutput out)
     throws IOException {
 
+      int length = currentState.length;
     if (currentState == null) {
         out.writeInt(-1);
     } else {
-        out.writeInt(currentState.length);
+        out.writeInt(length);
     }
     out.writeDouble(globalPreviousTime);
     out.writeDouble(globalCurrentTime);
@@ -535,7 +536,7 @@
     }
 
     if (currentState != null) {
-        for (int i = 0; i < currentState.length; ++i) {
+        for (int i = 0; i < length; ++i) {
             out.writeDouble(currentState[i]);
         }
     }

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
index c5c8ecf..db1e81d 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
@@ -367,7 +367,8 @@
                     T inv = quat[2].reciprocal().multiply(0.25);
                     quat[0] = inv.multiply(ort[2][0].subtract(ort[0][2]));
                     quat[1] = inv.multiply(ort[0][1].add(ort[1][0]));
-                    quat[3] = inv.multiply(ort[2][1].add(ort[1][2]));
+                    T var_1216 = ort[2][1].add(ort[1][2]);
+					quat[3] = inv.multiply(var_1216);
                 } else {
                     // compute q3 and deduce q0, q1 and q2
                     s = ort[2][2].subtract(ort[0][0]).subtract(ort[1][1]);

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
index c5c8ecf..db1e81d 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
@@ -367,7 +367,8 @@
                     T inv = quat[2].reciprocal().multiply(0.25);
                     quat[0] = inv.multiply(ort[2][0].subtract(ort[0][2]));
                     quat[1] = inv.multiply(ort[0][1].add(ort[1][0]));
-                    quat[3] = inv.multiply(ort[2][1].add(ort[1][2]));
+                    T var_1216 = ort[2][1].add(ort[1][2]);
+					quat[3] = inv.multiply(var_1216);
                 } else {
                     // compute q3 and deduce q0, q1 and q2
                     s = ort[2][2].subtract(ort[0][0]).subtract(ort[1][1]);

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
index c5c8ecf..5d20e65 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/FieldRotation.java
@@ -361,13 +361,14 @@
                 quat[3] = inv.multiply(ort[0][2].add(ort[2][0]));
             } else {
                 s = ort[1][1].subtract(ort[0][0]).subtract(ort[2][2]);
+                T add = ort[2][1].add(ort[1][2]);
                 if (s.getReal() > -0.19) {
                     // compute q2 and deduce q0, q1 and q3
                     quat[2] = s.add(1.0).sqrt().multiply(0.5);
                     T inv = quat[2].reciprocal().multiply(0.25);
                     quat[0] = inv.multiply(ort[2][0].subtract(ort[0][2]));
                     quat[1] = inv.multiply(ort[0][1].add(ort[1][0]));
-                    quat[3] = inv.multiply(ort[2][1].add(ort[1][2]));
+                    quat[3] = inv.multiply(add);
                 } else {
                     // compute q3 and deduce q0, q1 and q2
                     s = ort[2][2].subtract(ort[0][0]).subtract(ort[1][1]);
@@ -375,7 +376,7 @@
                     T inv = quat[3].reciprocal().multiply(0.25);
                     quat[0] = inv.multiply(ort[0][1].subtract(ort[1][0]));
                     quat[1] = inv.multiply(ort[0][2].add(ort[2][0]));
-                    quat[2] = inv.multiply(ort[2][1].add(ort[1][2]));
+                    quat[2] = inv.multiply(add);
                 }
             }
         }

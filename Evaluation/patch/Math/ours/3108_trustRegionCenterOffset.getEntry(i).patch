diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
index efc0110..026f5d1 100644
--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
@@ -1324,27 +1324,28 @@
             // Revise SLBD and SUBD if necessary because of the bounds in SL and SU.
 
             for (int i = 0; i < n; i++) {
-                final double tmp = interpolationPoints.getEntry(k, i) - trustRegionCenterOffset.getEntry(i);
+                double var_3108 = trustRegionCenterOffset.getEntry(i);
+				final double tmp = interpolationPoints.getEntry(k, i) - var_3108;
                 if (tmp > ZERO) {
-                    if (slbd * tmp < lowerDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) {
-                        slbd = (lowerDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) / tmp;
+                    if (slbd * tmp < lowerDifference.getEntry(i) - var_3108) {
+                        slbd = (lowerDifference.getEntry(i) - var_3108) / tmp;
                         ilbd = -i - 1;
                     }
-                    if (subd * tmp > upperDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) {
+                    if (subd * tmp > upperDifference.getEntry(i) - var_3108) {
                         // Computing MAX
                         subd = Math.max(sumin,
-                                        (upperDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) / tmp);
+                                        (upperDifference.getEntry(i) - var_3108) / tmp);
                         iubd = i + 1;
                     }
                 } else if (tmp < ZERO) {
-                    if (slbd * tmp > upperDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) {
-                        slbd = (upperDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) / tmp;
+                    if (slbd * tmp > upperDifference.getEntry(i) - var_3108) {
+                        slbd = (upperDifference.getEntry(i) - var_3108) / tmp;
                         ilbd = i + 1;
                     }
-                    if (subd * tmp < lowerDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) {
+                    if (subd * tmp < lowerDifference.getEntry(i) - var_3108) {
                         // Computing MAX
                         subd = Math.max(sumin,
-                                        (lowerDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i)) / tmp);
+                                        (lowerDifference.getEntry(i) - var_3108) / tmp);
                         iubd = -i - 1;
                     }
                 }

diff --git a/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java b/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
index 4652f61..f396866 100644
--- a/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
+++ b/src/main/java/org/apache/commons/math3/linear/EigenDecomposition.java
@@ -873,13 +873,14 @@
                     }
                     double w = matrixT[i][i] - p;
 
-                    if (Precision.compareTo(imagEigenvalues[i], 0.0, EPSILON) < 0.0) {
+                    double var_2160 = imagEigenvalues[i];
+					if (Precision.compareTo(var_2160, 0.0, EPSILON) < 0.0) {
                         z = w;
                         r = ra;
                         s = sa;
                     } else {
                         l = i;
-                        if (Precision.equals(imagEigenvalues[i], 0.0)) {
+                        if (Precision.equals(var_2160, 0.0)) {
                             final Complex c = cdiv(-ra, -sa, w, q);
                             matrixT[i][idx - 1] = c.getReal();
                             matrixT[i][idx] = c.getImaginary();
@@ -888,7 +889,7 @@
                             double x = matrixT[i][i + 1];
                             double y = matrixT[i + 1][i];
                             double vr = (realEigenvalues[i] - p) * (realEigenvalues[i] - p) +
-                                        imagEigenvalues[i] * imagEigenvalues[i] - q * q;
+                                        var_2160 * var_2160 - q * q;
                             final double vi = (realEigenvalues[i] - p) * 2.0 * q;
                             if (Precision.equals(vr, 0.0) && Precision.equals(vi, 0.0)) {
                                 vr = Precision.EPSILON * norm *

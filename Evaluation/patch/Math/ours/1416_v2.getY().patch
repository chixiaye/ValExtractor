diff --git a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
index fbdafa3..9875b3c 100644
--- a/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
+++ b/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Rotation.java
@@ -706,12 +706,13 @@
       // and we can choose to have phi in the interval [0 ; PI]
       Vector3D v1 = applyTo(Vector3D.PLUS_J);
       Vector3D v2 = applyInverseTo(Vector3D.PLUS_J);
-      if ((v2.getY() < -0.9999999999) || (v2.getY() > 0.9999999999)) {
+      double var_1416 = v2.getY();
+	if ((var_1416 < -0.9999999999) || (var_1416 > 0.9999999999)) {
         throw new CardanEulerSingularityException(false);
       }
       return new double[] {
         FastMath.atan2(v1.getX(), v1.getZ()),
-        FastMath.acos(v2.getY()),
+        FastMath.acos(var_1416),
         FastMath.atan2(v2.getX(), -v2.getZ())
       };
 

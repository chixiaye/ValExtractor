diff --git a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
index 4c20a64..012f03c 100644
--- a/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
+++ b/src/main/java/org/apache/commons/math3/dfp/DfpDec.java
@@ -295,8 +295,9 @@
         final String trapName = "nextAfter";
 
         // make sure we don't mix number with different precision
-        if (getField().getRadixDigits() != x.getField().getRadixDigits()) {
-            getField().setIEEEFlagsBits(DfpField.FLAG_INVALID);
+        DfpField var_770 = getField();
+		if (var_770.getRadixDigits() != x.getField().getRadixDigits()) {
+            var_770.setIEEEFlagsBits(DfpField.FLAG_INVALID);
             final Dfp result = newInstance(getZero());
             result.nans = QNAN;
             return dotrap(DfpField.FLAG_INVALID, trapName, x, result);
@@ -354,12 +355,12 @@
         }
 
         if (result.classify() == INFINITE && this.classify() != INFINITE) {
-            getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
+            var_770.setIEEEFlagsBits(DfpField.FLAG_INEXACT);
             result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
         }
 
         if (result.equals(getZero()) && this.equals(getZero()) == false) {
-            getField().setIEEEFlagsBits(DfpField.FLAG_INEXACT);
+            var_770.setIEEEFlagsBits(DfpField.FLAG_INEXACT);
             result = dotrap(DfpField.FLAG_INEXACT, trapName, x, result);
         }
 

diff --git a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
index efc0110..6ab1c11 100644
--- a/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/BOBYQAOptimizer.java
@@ -308,20 +308,23 @@
                     final double deltaOne = upperBound[j] - currentBest.getEntry(j);
                     upperDifference.setEntry(j, Math.max(deltaOne, initialTrustRegionRadius));
                 }
-            } else if (upperDifference.getEntry(j) <= initialTrustRegionRadius) {
-                if (upperDifference.getEntry(j) <= ZERO) {
-                    currentBest.setEntry(j, upperBound[j]);
-                    lowerDifference.setEntry(j, -boundDiff);
-                    upperDifference.setEntry(j, ZERO);
-                } else {
-                    currentBest.setEntry(j, upperBound[j] - initialTrustRegionRadius);
-                    // Computing MIN
-                    final double deltaOne = lowerBound[j] - currentBest.getEntry(j);
-                    final double deltaTwo = -initialTrustRegionRadius;
-                    lowerDifference.setEntry(j, Math.min(deltaOne, deltaTwo));
-                    upperDifference.setEntry(j, initialTrustRegionRadius);
-                }
-            }
+            } else {
+				double var_3070 = upperDifference.getEntry(j);
+				if (var_3070 <= initialTrustRegionRadius) {
+				    if (var_3070 <= ZERO) {
+				        currentBest.setEntry(j, upperBound[j]);
+				        lowerDifference.setEntry(j, -boundDiff);
+				        upperDifference.setEntry(j, ZERO);
+				    } else {
+				        currentBest.setEntry(j, upperBound[j] - initialTrustRegionRadius);
+				        // Computing MIN
+				        final double deltaOne = lowerBound[j] - currentBest.getEntry(j);
+				        final double deltaTwo = -initialTrustRegionRadius;
+				        lowerDifference.setEntry(j, Math.min(deltaOne, deltaTwo));
+				        upperDifference.setEntry(j, initialTrustRegionRadius);
+				    }
+				}
+			}
         }
 
         // Make the call of BOBYQB.

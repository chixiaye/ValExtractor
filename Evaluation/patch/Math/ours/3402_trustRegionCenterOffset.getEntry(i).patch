diff --git a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
index 6a7c33a..292f23d 100644
--- a/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
+++ b/src/main/java/org/apache/commons/math3/optimization/direct/BOBYQAOptimizer.java
@@ -2080,8 +2080,9 @@
             iact = -1;
             for (int i = 0; i < n; i++) {
                 if (xbdi.getEntry(i) == ZERO) {
-                    tempa = trustRegionCenterOffset.getEntry(i) + trialStepPoint.getEntry(i) - lowerDifference.getEntry(i);
-                    tempb = upperDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i) - trialStepPoint.getEntry(i);
+                    double var_3402 = trustRegionCenterOffset.getEntry(i);
+					tempa = var_3402 + trialStepPoint.getEntry(i) - lowerDifference.getEntry(i);
+                    tempb = upperDifference.getEntry(i) - var_3402 - trialStepPoint.getEntry(i);
                     if (tempa <= ZERO) {
                         ++nact;
                         xbdi.setEntry(i, MINUS_ONE);
@@ -2097,7 +2098,7 @@
                     double d2 = s.getEntry(i);
                     ssq = d1 * d1 + d2 * d2;
                     // Computing 2nd power
-                    d1 = trustRegionCenterOffset.getEntry(i) - lowerDifference.getEntry(i);
+                    d1 = var_3402 - lowerDifference.getEntry(i);
                     temp = ssq - d1 * d1;
                     if (temp > ZERO) {
                         temp = Math.sqrt(temp) - s.getEntry(i);
@@ -2108,7 +2109,7 @@
                         }
                     }
                     // Computing 2nd power
-                    d1 = upperDifference.getEntry(i) - trustRegionCenterOffset.getEntry(i);
+                    d1 = upperDifference.getEntry(i) - var_3402;
                     temp = ssq - d1 * d1;
                     if (temp > ZERO) {
                         temp = Math.sqrt(temp) + s.getEntry(i);

diff --git a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
index a8877eb..664acf3 100644
--- a/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
+++ b/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler.java
@@ -353,11 +353,12 @@
         }
 
         // this is an implementation of definition 3 in Dan Kalman's paper.
-        final int vSize = valueCompiler.multIndirection.length;
+        int[][][] var_88 = valueCompiler.multIndirection;
+		final int vSize = var_88.length;
         final int dSize = derivativeCompiler.multIndirection.length;
         final int[][][] multIndirection = new int[vSize + dSize][][];
 
-        System.arraycopy(valueCompiler.multIndirection, 0, multIndirection, 0, vSize);
+        System.arraycopy(var_88, 0, multIndirection, 0, vSize);
 
         for (int i = 0; i < dSize; ++i) {
             final int[][] dRow = derivativeCompiler.multIndirection[i];

==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..c8e59d5 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1433,7 +1433,7 @@
             if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
               int numSpaces = stream.getCharno() - lineStartChar;
               for (int i = 0; i < numSpaces; i++) {
-                builder.append(' ');
+                StringBuilder var_2326 = builder.append(' ');
               }
               lineStartChar = -1;
             } else if (builder.length() > 0) {

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..c8e59d5 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1433,7 +1433,7 @@
             if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
               int numSpaces = stream.getCharno() - lineStartChar;
               for (int i = 0; i < numSpaces; i++) {
-                builder.append(' ');
+                StringBuilder var_2326 = builder.append(' ');
               }
               lineStartChar = -1;
             } else if (builder.length() > 0) {

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..e299e61 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1397,6 +1397,7 @@
     int lineStartChar = -1;
 
     do {
+        StringBuilder append = builder.append(' ');
       switch (token) {
         case STAR:
           if (ignoreStar) {
@@ -1405,7 +1406,7 @@
           } else {
             // The star is part of the comment.
             if (builder.length() > 0) {
-              builder.append(' ');
+              append;
             }
 
             builder.append('*');
@@ -1433,12 +1434,12 @@
             if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
               int numSpaces = stream.getCharno() - lineStartChar;
               for (int i = 0; i < numSpaces; i++) {
-                builder.append(' ');
+                append;
               }
               lineStartChar = -1;
             } else if (builder.length() > 0) {
               // All tokens must be separated by a space.
-              builder.append(' ');
+              append;
             }
           }
 

==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index c64c178..66ab12a 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -204,7 +204,8 @@
           typesToSkip.addAll(rootTypesToSkip);
 
           Set<T> newTypesToSkip = Sets.newHashSet();
-          Set<T> allTypes = types.elements();
+          Set<T> var_872 = types.elements();
+		Set<T> allTypes = var_872;
           int originalTypesSize = allTypes.size();
           for (T subType : allTypes) {
             if (!typesToSkip.contains(subType)

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index c64c178..6e7a972 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -204,7 +204,8 @@
           typesToSkip.addAll(rootTypesToSkip);
 
           Set<T> newTypesToSkip = Sets.newHashSet();
-          Set<T> allTypes = types.elements();
+          Set<T> var_872 = types.elements();
+		Set<T> allTypes = var_872;
           int originalTypesSize = allTypes.size();
           for (T subType : allTypes) {
             if (!typesToSkip.contains(subType)
@@ -218,7 +219,7 @@
           }
 
           // If there were not any new types added, we are done here.
-          if (types.elements().size() == originalTypesSize) {
+          if (var_872.size() == originalTypesSize) {
             break;
           }
         }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/DisambiguateProperties.java b/src/com/google/javascript/jscomp/DisambiguateProperties.java
index c64c178..5661adf 100644
--- a/src/com/google/javascript/jscomp/DisambiguateProperties.java
+++ b/src/com/google/javascript/jscomp/DisambiguateProperties.java
@@ -204,7 +204,8 @@
           typesToSkip.addAll(rootTypesToSkip);
 
           Set<T> newTypesToSkip = Sets.newHashSet();
-          Set<T> allTypes = types.elements();
+            Set<T> elements = types.elements();
+            Set<T> allTypes = elements;
           int originalTypesSize = allTypes.size();
           for (T subType : allTypes) {
             if (!typesToSkip.contains(subType)
@@ -218,7 +219,7 @@
           }
 
           // If there were not any new types added, we are done here.
-          if (types.elements().size() == originalTypesSize) {
+          if (elements.size() == originalTypesSize) {
             break;
           }
         }

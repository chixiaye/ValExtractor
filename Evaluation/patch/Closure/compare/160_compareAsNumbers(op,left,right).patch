==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 7378f31..5e0a78a 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -987,7 +987,8 @@
           case Token.LE:
           case Token.GT:
           case Token.LT:
-            return compareAsNumbers(op, left, right);
+            TernaryValue var_160 = compareAsNumbers(op, left, right);
+			return var_160;
         }
         return TernaryValue.UNKNOWN;
 

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 7378f31..3173113 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -949,6 +949,7 @@
     boolean nullRight = right.isNull();
     int lhType = getNormalizedNodeType(left);
     int rhType = getNormalizedNodeType(right);
+    TernaryValue var_160 = compareAsNumbers(op, left, right);
     switch (lhType) {
       case Token.VOID:
         if (!leftLiteral) {
@@ -987,7 +988,7 @@
           case Token.LE:
           case Token.GT:
           case Token.LT:
-            return compareAsNumbers(op, left, right);
+            return var_160;
         }
         return TernaryValue.UNKNOWN;
 
@@ -1044,7 +1045,7 @@
         if (Token.NUMBER != right.getType()) {
           return TernaryValue.UNKNOWN;  // Only eval if they are the same type
         }
-        return compareAsNumbers(op, left, right);
+        return var_160;
 
       case Token.NAME:
         if (leftLiteral && undefinedRight) {

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 7378f31..499282b 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -949,6 +949,7 @@
     boolean nullRight = right.isNull();
     int lhType = getNormalizedNodeType(left);
     int rhType = getNormalizedNodeType(right);
+    TernaryValue ternaryValue = compareAsNumbers(op, left, right);
     switch (lhType) {
       case Token.VOID:
         if (!leftLiteral) {
@@ -987,7 +988,7 @@
           case Token.LE:
           case Token.GT:
           case Token.LT:
-            return compareAsNumbers(op, left, right);
+            return ternaryValue;
         }
         return TernaryValue.UNKNOWN;
 
@@ -1044,7 +1045,7 @@
         if (Token.NUMBER != right.getType()) {
           return TernaryValue.UNKNOWN;  // Only eval if they are the same type
         }
-        return compareAsNumbers(op, left, right);
+        return ternaryValue;
 
       case Token.NAME:
         if (leftLiteral && undefinedRight) {

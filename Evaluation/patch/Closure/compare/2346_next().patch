==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..9f81273 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1676,7 +1676,7 @@
     if (typeExpr != null) {
       // top-level unions are allowed
       if (match(JsDocToken.PIPE)) {
-        next();
+        JsDocToken var_2346 = next();
         if (match(JsDocToken.PIPE)) {
           // We support double pipes for backwards-compatibility.
           next();

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..5b63952 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1676,13 +1676,13 @@
     if (typeExpr != null) {
       // top-level unions are allowed
       if (match(JsDocToken.PIPE)) {
-        next();
+        JsDocToken var_2346 = next();
         if (match(JsDocToken.PIPE)) {
           // We support double pipes for backwards-compatibility.
           next();
         }
         skipEOLs();
-        token = next();
+        token = var_2346;
         return parseUnionTypeWithAlternate(token, typeExpr);
       }
     }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..941c5ce 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1676,13 +1676,13 @@
     if (typeExpr != null) {
       // top-level unions are allowed
       if (match(JsDocToken.PIPE)) {
-        next();
+          JsDocToken next = next();
         if (match(JsDocToken.PIPE)) {
           // We support double pipes for backwards-compatibility.
-          next();
+          next;
         }
         skipEOLs();
-        token = next();
+        token = next;
         return parseUnionTypeWithAlternate(token, typeExpr);
       }
     }

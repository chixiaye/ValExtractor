==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..365d5c8 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -84,7 +84,8 @@
         if (result != node) {
           return result;
         }
-        result = tryReplaceExitWithBreak(node);
+        Node var_1413 = tryReplaceExitWithBreak(node);
+		result = var_1413;
         if (result != node) {
           return result;
         }

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..bf4b84e 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -78,13 +78,14 @@
   @Override
   @SuppressWarnings("fallthrough")
   public Node optimizeSubtree(Node node) {
+    Node var_1413 = tryReplaceExitWithBreak(node);
     switch(node.getType()) {
       case Token.RETURN: {
         Node result = tryRemoveRedundantExit(node);
         if (result != node) {
           return result;
         }
-        result = tryReplaceExitWithBreak(node);
+        result = var_1413;
         if (result != node) {
           return result;
         }
@@ -96,7 +97,7 @@
         if (result != node) {
           return result;
         }
-        return tryReplaceExitWithBreak(node);
+        return var_1413;
       }
 
       // TODO(johnlenz): Maybe remove redundant BREAK and CONTINUE. Overlaps

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..d3533a2 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -78,13 +78,14 @@
   @Override
   @SuppressWarnings("fallthrough")
   public Node optimizeSubtree(Node node) {
+      Node result1 = tryReplaceExitWithBreak(node);
     switch(node.getType()) {
       case Token.RETURN: {
         Node result = tryRemoveRedundantExit(node);
         if (result != node) {
           return result;
         }
-        result = tryReplaceExitWithBreak(node);
+        result = result1;
         if (result != node) {
           return result;
         }
@@ -96,7 +97,7 @@
         if (result != node) {
           return result;
         }
-        return tryReplaceExitWithBreak(node);
+        return result1;
       }
 
       // TODO(johnlenz): Maybe remove redundant BREAK and CONTINUE. Overlaps

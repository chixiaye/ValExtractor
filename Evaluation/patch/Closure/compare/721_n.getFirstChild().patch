==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..a989e5a 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -443,7 +443,8 @@
     Preconditions.checkState(isObjKey || isQName);
     if (isQName) {
       for (int i = 1; i < depth && n.hasChildren(); i++) {
-        n = n.getFirstChild();
+        Node var_721 = n.getFirstChild();
+		n = var_721;
       }
       if (n.hasChildren()) {
         flattenNameRef(alias, n.getFirstChild(), n, originalName);

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..b39ab20 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -442,11 +442,12 @@
     boolean isObjKey = NodeUtil.isObjectLitKey(n, n.getParent());
     Preconditions.checkState(isObjKey || isQName);
     if (isQName) {
+      Node var_721 = n.getFirstChild();
       for (int i = 1; i < depth && n.hasChildren(); i++) {
-        n = n.getFirstChild();
+        n = var_721;
       }
       if (n.hasChildren()) {
-        flattenNameRef(alias, n.getFirstChild(), n, originalName);
+        flattenNameRef(alias, var_721, n, originalName);
       }
     }
   }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..b47ed13 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -442,11 +442,12 @@
     boolean isObjKey = NodeUtil.isObjectLitKey(n, n.getParent());
     Preconditions.checkState(isObjKey || isQName);
     if (isQName) {
+        Node firstChild = n.getFirstChild();
       for (int i = 1; i < depth && n.hasChildren(); i++) {
-        n = n.getFirstChild();
+        n = firstChild;
       }
       if (n.hasChildren()) {
-        flattenNameRef(alias, n.getFirstChild(), n, originalName);
+        flattenNameRef(alias, firstChild, n, originalName);
       }
     }
   }

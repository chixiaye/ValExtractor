==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..036700f 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -897,8 +897,9 @@
       // for the same global name.)
       if (isJsIdentifier && p != null) {
         if (!discardKeys) {
+          Ref var_738 = p.getDeclaration();
           Ref newAlias =
-              p.getDeclaration().cloneAndReclassify(Ref.Type.ALIASING_GET);
+              var_738.cloneAndReclassify(Ref.Type.ALIASING_GET);
           newAlias.node = refNode;
           p.addRef(newAlias);
         }

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..66f5833 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -896,14 +896,15 @@
       // done. (Duplicate keys in an object literal can bring us here twice
       // for the same global name.)
       if (isJsIdentifier && p != null) {
+        Ref var_738 = p.getDeclaration();
         if (!discardKeys) {
           Ref newAlias =
-              p.getDeclaration().cloneAndReclassify(Ref.Type.ALIASING_GET);
+              var_738.cloneAndReclassify(Ref.Type.ALIASING_GET);
           newAlias.node = refNode;
           p.addRef(newAlias);
         }
 
-        p.getDeclaration().node = nameNode;
+        var_738.node = nameNode;
 
         if (value.isFunction()) {
           checkForHosedThisReferences(value, value.getJSDocInfo(), p);

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..3b76a3a 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -896,14 +896,15 @@
       // done. (Duplicate keys in an object literal can bring us here twice
       // for the same global name.)
       if (isJsIdentifier && p != null) {
+          Ref declaration = p.getDeclaration();
         if (!discardKeys) {
           Ref newAlias =
-              p.getDeclaration().cloneAndReclassify(Ref.Type.ALIASING_GET);
+              declaration.cloneAndReclassify(Ref.Type.ALIASING_GET);
           newAlias.node = refNode;
           p.addRef(newAlias);
         }
 
-        p.getDeclaration().node = nameNode;
+        declaration.node = nameNode;
 
         if (value.isFunction()) {
           checkForHosedThisReferences(value, value.getJSDocInfo(), p);

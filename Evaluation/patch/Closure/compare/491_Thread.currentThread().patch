==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java
index 5f6b2c5..e20dc61 100644
--- a/src/com/google/javascript/jscomp/Compiler.java
+++ b/src/com/google/javascript/jscomp/Compiler.java
@@ -655,7 +655,8 @@
       @Override
       public T call() {
         try {
-          compilerThread = Thread.currentThread();
+          Thread var_491 = Thread.currentThread();
+		compilerThread = var_491;
           if (dumpTraceReport) {
             Tracer.initCurrentThreadTrace();
           }

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java
index 5f6b2c5..e20dc61 100644
--- a/src/com/google/javascript/jscomp/Compiler.java
+++ b/src/com/google/javascript/jscomp/Compiler.java
@@ -655,7 +655,8 @@
       @Override
       public T call() {
         try {
-          compilerThread = Thread.currentThread();
+          Thread var_491 = Thread.currentThread();
+		compilerThread = var_491;
           if (dumpTraceReport) {
             Tracer.initCurrentThreadTrace();
           }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/Compiler.java b/src/com/google/javascript/jscomp/Compiler.java
index 5f6b2c5..552109a 100644
--- a/src/com/google/javascript/jscomp/Compiler.java
+++ b/src/com/google/javascript/jscomp/Compiler.java
@@ -651,11 +651,12 @@
     final boolean dumpTraceReport = options != null && options.tracer.isOn();
     T result = null;
     final Throwable[] exception = new Throwable[1];
+      final Thread compilerThread1 = Thread.currentThread();
     Callable<T> bootCompilerThread = new Callable<T>() {
       @Override
       public T call() {
         try {
-          compilerThread = Thread.currentThread();
+          compilerThread = compilerThread1;
           if (dumpTraceReport) {
             Tracer.initCurrentThreadTrace();
           }
@@ -675,7 +676,7 @@
     };
 
     Preconditions.checkState(
-        compilerThread == null || compilerThread == Thread.currentThread(),
+        compilerThread == null || compilerThread == compilerThread1,
         "Please do not share the Compiler across threads");
 
     // If the compiler thread is available, use it.

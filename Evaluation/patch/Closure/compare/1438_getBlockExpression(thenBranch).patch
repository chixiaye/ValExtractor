==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..4e40b62 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -768,7 +768,8 @@
     boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);
 
     if (thenBranchIsExpressionBlock && elseBranchIsExpressionBlock) {
-      Node thenOp = getBlockExpression(thenBranch).getFirstChild();
+      Node var_1438 = getBlockExpression(thenBranch);
+	Node thenOp = var_1438.getFirstChild();
       Node elseOp = getBlockExpression(elseBranch).getFirstChild();
       if (thenOp.getType() == elseOp.getType()) {
         // if(x)a=1;else a=2; -> a=x?1:2;

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..a99b4e3 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -649,9 +649,10 @@
     Node thenBranch = cond.getNext();
     Node elseBranch = thenBranch.getNext();
 
+    Node var_1438 = getBlockExpression(thenBranch);
     if (elseBranch == null) {
       if (isFoldableExpressBlock(thenBranch)) {
-        Node expr = getBlockExpression(thenBranch);
+        Node expr = var_1438;
         if (!late && isPropertyAssignmentInExpression(expr)) {
           // Keep opportunities for CollapseProperties such as
           // a.longIdentifier || a.longIdentifier = ... -> var a = ...;
@@ -768,7 +769,7 @@
     boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);
 
     if (thenBranchIsExpressionBlock && elseBranchIsExpressionBlock) {
-      Node thenOp = getBlockExpression(thenBranch).getFirstChild();
+      Node thenOp = var_1438.getFirstChild();
       Node elseOp = getBlockExpression(elseBranch).getFirstChild();
       if (thenOp.getType() == elseOp.getType()) {
         // if(x)a=1;else a=2; -> a=x?1:2;
@@ -839,10 +840,10 @@
 
     // if(x)y=1;else var y=2  ->  var y=x?1:2
     } else if (elseBranchIsVar && thenBranchIsExpressionBlock &&
-        getBlockExpression(thenBranch).getFirstChild().isAssign()) {
+        var_1438.getFirstChild().isAssign()) {
 
       Node var = getBlockVar(elseBranch);
-      Node thenAssign = getBlockExpression(thenBranch).getFirstChild();
+      Node thenAssign = var_1438.getFirstChild();
 
       Node maybeName1 = thenAssign.getFirstChild();
       Node name2 = var.getFirstChild();

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..29c8488 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -649,9 +649,10 @@
     Node thenBranch = cond.getNext();
     Node elseBranch = thenBranch.getNext();
 
+      Node blockExpression = getBlockExpression(thenBranch);
     if (elseBranch == null) {
       if (isFoldableExpressBlock(thenBranch)) {
-        Node expr = getBlockExpression(thenBranch);
+        Node expr = blockExpression;
         if (!late && isPropertyAssignmentInExpression(expr)) {
           // Keep opportunities for CollapseProperties such as
           // a.longIdentifier || a.longIdentifier = ... -> var a = ...;
@@ -768,7 +769,7 @@
     boolean elseBranchIsExpressionBlock = isFoldableExpressBlock(elseBranch);
 
     if (thenBranchIsExpressionBlock && elseBranchIsExpressionBlock) {
-      Node thenOp = getBlockExpression(thenBranch).getFirstChild();
+      Node thenOp = blockExpression.getFirstChild();
       Node elseOp = getBlockExpression(elseBranch).getFirstChild();
       if (thenOp.getType() == elseOp.getType()) {
         // if(x)a=1;else a=2; -> a=x?1:2;
@@ -839,10 +840,10 @@
 
     // if(x)y=1;else var y=2  ->  var y=x?1:2
     } else if (elseBranchIsVar && thenBranchIsExpressionBlock &&
-        getBlockExpression(thenBranch).getFirstChild().isAssign()) {
+        blockExpression.getFirstChild().isAssign()) {
 
       Node var = getBlockVar(elseBranch);
-      Node thenAssign = getBlockExpression(thenBranch).getFirstChild();
+      Node thenAssign = blockExpression.getFirstChild();
 
       Node maybeName1 = thenAssign.getFirstChild();
       Node name2 = var.getFirstChild();

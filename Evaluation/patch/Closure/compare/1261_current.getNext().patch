==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java
index 98b136e..65fb5e2 100644
--- a/src/com/google/javascript/jscomp/Normalize.java
+++ b/src/com/google/javascript/jscomp/Normalize.java
@@ -650,7 +650,8 @@
       // are already in the right place.
       while (current != null && NodeUtil.isFunctionDeclaration(current)) {
         previous = current;
-        current = current.getNext();
+        Node var_1261 = current.getNext();
+		current = var_1261;
       }
 
       // Find any remaining declarations and move them.

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java
index 98b136e..b834901 100644
--- a/src/com/google/javascript/jscomp/Normalize.java
+++ b/src/com/google/javascript/jscomp/Normalize.java
@@ -648,16 +648,17 @@
       Node current = functionBody.getFirstChild();
       // Skip any declarations at the beginning of the function body, they
       // are already in the right place.
+      Node var_1261 = current.getNext();
       while (current != null && NodeUtil.isFunctionDeclaration(current)) {
         previous = current;
-        current = current.getNext();
+        current = var_1261;
       }
 
       // Find any remaining declarations and move them.
       Node insertAfter = previous;
       while (current != null) {
         // Save off the next node as the current node maybe removed.
-        Node next = current.getNext();
+        Node next = var_1261;
         if (NodeUtil.isFunctionDeclaration(current)) {
           // Remove the declaration from the body.
           Preconditions.checkNotNull(previous);

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java
index 98b136e..1d81b0f 100644
--- a/src/com/google/javascript/jscomp/Normalize.java
+++ b/src/com/google/javascript/jscomp/Normalize.java
@@ -648,16 +648,17 @@
       Node current = functionBody.getFirstChild();
       // Skip any declarations at the beginning of the function body, they
       // are already in the right place.
+        Node next1 = current.getNext();
       while (current != null && NodeUtil.isFunctionDeclaration(current)) {
         previous = current;
-        current = current.getNext();
+        current = next1;
       }
 
       // Find any remaining declarations and move them.
       Node insertAfter = previous;
       while (current != null) {
         // Save off the next node as the current node maybe removed.
-        Node next = current.getNext();
+        Node next = next1;
         if (NodeUtil.isFunctionDeclaration(current)) {
           // Remove the declaration from the body.
           Preconditions.checkNotNull(previous);

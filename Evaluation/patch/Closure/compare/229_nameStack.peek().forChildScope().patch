==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
index 3743287..d38a82c 100644
--- a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
+++ b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
@@ -124,7 +124,8 @@
         break;
 
       case Token.PARAM_LIST: {
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer var_229 = nameStack.peek().forChildScope();
+		Renamer renamer = var_229;
 
           // Add the function parameters
           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
index 3743287..b08bbb3 100644
--- a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
+++ b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
@@ -105,12 +105,13 @@
   @Override
   public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
 
+    Renamer var_229 = nameStack.peek().forChildScope();
     switch (n.getType()) {
       case Token.FUNCTION:
         {
           // Add recursive function name, if needed.
           // NOTE: "enterScope" is called after we need to pick up this name.
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer renamer = var_229;
 
           // If needed, add the function recursive name.
           String name = n.getFirstChild().getString();
@@ -124,7 +125,7 @@
         break;
 
       case Token.PARAM_LIST: {
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer renamer = var_229;
 
           // Add the function parameters
           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
@@ -142,7 +143,7 @@
 
       case Token.CATCH:
         {
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer renamer = var_229;
 
           String name = n.getFirstChild().getString();
           renamer.addDeclaredName(name);

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
index 3743287..5fbb90c 100644
--- a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
+++ b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
@@ -105,12 +105,13 @@
   @Override
   public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
 
+      Renamer renamer1 = nameStack.peek().forChildScope();
     switch (n.getType()) {
       case Token.FUNCTION:
         {
           // Add recursive function name, if needed.
           // NOTE: "enterScope" is called after we need to pick up this name.
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer renamer = renamer1;
 
           // If needed, add the function recursive name.
           String name = n.getFirstChild().getString();
@@ -124,7 +125,7 @@
         break;
 
       case Token.PARAM_LIST: {
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer renamer = renamer1;
 
           // Add the function parameters
           for (Node c = n.getFirstChild(); c != null; c = c.getNext()) {
@@ -142,7 +143,7 @@
 
       case Token.CATCH:
         {
-          Renamer renamer = nameStack.peek().forChildScope();
+          Renamer renamer = renamer1;
 
           String name = n.getFirstChild().getString();
           renamer.addDeclaredName(name);

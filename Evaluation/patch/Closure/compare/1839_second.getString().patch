==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/ReplaceCssNames.java b/src/com/google/javascript/jscomp/ReplaceCssNames.java
index caaaf08..7dabed2 100644
--- a/src/com/google/javascript/jscomp/ReplaceCssNames.java
+++ b/src/com/google/javascript/jscomp/ReplaceCssNames.java
@@ -172,9 +172,10 @@
               compiler.report(t.makeError(n, STRING_LITERAL_EXPECTED_ERROR,
                   Token.name(second.getType())));
             } else if (first.isString()) {
+              String var_1839 = second.getString();
               compiler.report(t.makeError(
                   n, UNEXPECTED_STRING_LITERAL_ERROR,
-                  first.getString(), second.getString()));
+                  first.getString(), var_1839));
             } else {
               processStringNode(t, second);
               n.removeChild(first);

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/ReplaceCssNames.java b/src/com/google/javascript/jscomp/ReplaceCssNames.java
index caaaf08..4a67553 100644
--- a/src/com/google/javascript/jscomp/ReplaceCssNames.java
+++ b/src/com/google/javascript/jscomp/ReplaceCssNames.java
@@ -171,21 +171,24 @@
             if (!second.isString()) {
               compiler.report(t.makeError(n, STRING_LITERAL_EXPECTED_ERROR,
                   Token.name(second.getType())));
-            } else if (first.isString()) {
+            } else {
+				String var_1839 = second.getString();
+				if (first.isString()) {
               compiler.report(t.makeError(
                   n, UNEXPECTED_STRING_LITERAL_ERROR,
-                  first.getString(), second.getString()));
+				      first.getString(), var_1839));
             } else {
               processStringNode(t, second);
               n.removeChild(first);
               Node replacement = IR.add(first,
-                  IR.string("-" + second.getString())
+				      IR.string("-" + var_1839)
                       .copyInformationFrom(second))
                   .copyInformationFrom(n);
               replacement.setJSType(nativeStringType);
               parent.replaceChild(n, replacement);
               compiler.reportCodeChange();
             }
+			}
             break;
 
           default:

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/ReplaceCssNames.java b/src/com/google/javascript/jscomp/ReplaceCssNames.java
index caaaf08..5f97fc0 100644
--- a/src/com/google/javascript/jscomp/ReplaceCssNames.java
+++ b/src/com/google/javascript/jscomp/ReplaceCssNames.java
@@ -171,21 +171,24 @@
             if (!second.isString()) {
               compiler.report(t.makeError(n, STRING_LITERAL_EXPECTED_ERROR,
                   Token.name(second.getType())));
-            } else if (first.isString()) {
+            } else {
+                String string = second.getString();
+                if (first.isString()) {
               compiler.report(t.makeError(
                   n, UNEXPECTED_STRING_LITERAL_ERROR,
-                  first.getString(), second.getString()));
+                      first.getString(), string));
             } else {
               processStringNode(t, second);
               n.removeChild(first);
               Node replacement = IR.add(first,
-                  IR.string("-" + second.getString())
+                      IR.string("-" + string)
                       .copyInformationFrom(second))
                   .copyInformationFrom(n);
               replacement.setJSType(nativeStringType);
               parent.replaceChild(n, replacement);
               compiler.reportCodeChange();
             }
+            }
             break;
 
           default:

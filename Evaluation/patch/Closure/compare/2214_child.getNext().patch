==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/jsonml/Writer.java b/src/com/google/javascript/jscomp/jsonml/Writer.java
index b357eb9..6ab91df 100644
--- a/src/com/google/javascript/jscomp/jsonml/Writer.java
+++ b/src/com/google/javascript/jscomp/jsonml/Writer.java
@@ -466,7 +466,8 @@
     }
 
     // the second child is a wrapper for formal parameters
-    child = child.getNext();
+    Node var_2214 = child.getNext();
+	child = var_2214;
     JsonML params = new JsonML(TagType.ParamDecl);
     element.appendChild(params);
     Iterator<Node> it = child.children().iterator();

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/jsonml/Writer.java b/src/com/google/javascript/jscomp/jsonml/Writer.java
index b357eb9..d2c12e1 100644
--- a/src/com/google/javascript/jscomp/jsonml/Writer.java
+++ b/src/com/google/javascript/jscomp/jsonml/Writer.java
@@ -466,7 +466,8 @@
     }
 
     // the second child is a wrapper for formal parameters
-    child = child.getNext();
+    Node var_2214 = child.getNext();
+	child = var_2214;
     JsonML params = new JsonML(TagType.ParamDecl);
     element.appendChild(params);
     Iterator<Node> it = child.children().iterator();
@@ -478,7 +479,7 @@
     }
 
     // the third child represents function's body
-    child = child.getNext();
+    child = var_2214;
 
     // it can contain some directives
     processDirectives(child, element);

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/jsonml/Writer.java b/src/com/google/javascript/jscomp/jsonml/Writer.java
index b357eb9..24b4af7 100644
--- a/src/com/google/javascript/jscomp/jsonml/Writer.java
+++ b/src/com/google/javascript/jscomp/jsonml/Writer.java
@@ -466,7 +466,8 @@
     }
 
     // the second child is a wrapper for formal parameters
-    child = child.getNext();
+      Node next = child.getNext();
+      child = next;
     JsonML params = new JsonML(TagType.ParamDecl);
     element.appendChild(params);
     Iterator<Node> it = child.children().iterator();
@@ -478,7 +479,7 @@
     }
 
     // the third child represents function's body
-    child = child.getNext();
+    child = next;
 
     // it can contain some directives
     processDirectives(child, element);

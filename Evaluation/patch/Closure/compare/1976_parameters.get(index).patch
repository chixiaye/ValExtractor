==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/OptimizeParameters.java b/src/com/google/javascript/jscomp/OptimizeParameters.java
index 76e12a5..a46eb33 100644
--- a/src/com/google/javascript/jscomp/OptimizeParameters.java
+++ b/src/com/google/javascript/jscomp/OptimizeParameters.java
@@ -287,7 +287,8 @@
         p = new Parameter(cur, false);
         parameters.add(p);
       } else {
-        p = parameters.get(index);
+        Parameter var_1976 = parameters.get(index);
+		p = var_1976;
         if (p.shouldRemove()) {
           Node value = p.getArg();
           if (!cur.isEquivalentTo(value)) {

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/OptimizeParameters.java b/src/com/google/javascript/jscomp/OptimizeParameters.java
index 76e12a5..f288425 100644
--- a/src/com/google/javascript/jscomp/OptimizeParameters.java
+++ b/src/com/google/javascript/jscomp/OptimizeParameters.java
@@ -281,13 +281,14 @@
   private boolean findFixedParameters(List<Parameter> parameters, Node cur) {
     boolean anyMovable = false;
     int index = 0;
+    Parameter var_1976 = parameters.get(index);
     while ((cur = cur.getNext()) != null) {
       Parameter p;
       if (index >= parameters.size()) {
         p = new Parameter(cur, false);
         parameters.add(p);
       } else {
-        p = parameters.get(index);
+        p = var_1976;
         if (p.shouldRemove()) {
           Node value = p.getArg();
           if (!cur.isEquivalentTo(value)) {
@@ -303,7 +304,7 @@
     }
 
     for (;index < parameters.size(); index++) {
-      parameters.get(index).setShouldRemove(false);
+      var_1976.setShouldRemove(false);
     }
 
     return anyMovable;

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/OptimizeParameters.java b/src/com/google/javascript/jscomp/OptimizeParameters.java
index 76e12a5..dc99e1a 100644
--- a/src/com/google/javascript/jscomp/OptimizeParameters.java
+++ b/src/com/google/javascript/jscomp/OptimizeParameters.java
@@ -281,13 +281,14 @@
   private boolean findFixedParameters(List<Parameter> parameters, Node cur) {
     boolean anyMovable = false;
     int index = 0;
+      Parameter p1 = parameters.get(index);
     while ((cur = cur.getNext()) != null) {
       Parameter p;
       if (index >= parameters.size()) {
         p = new Parameter(cur, false);
         parameters.add(p);
       } else {
-        p = parameters.get(index);
+        p = p1;
         if (p.shouldRemove()) {
           Node value = p.getArg();
           if (!cur.isEquivalentTo(value)) {
@@ -303,7 +304,7 @@
     }
 
     for (;index < parameters.size(); index++) {
-      parameters.get(index).setShouldRemove(false);
+      p1.setShouldRemove(false);
     }
 
     return anyMovable;

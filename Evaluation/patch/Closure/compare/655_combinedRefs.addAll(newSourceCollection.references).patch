==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java b/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
index 9b7870d..dc87cfc 100644
--- a/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
+++ b/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
@@ -145,7 +145,7 @@
     ReferenceCollection oldCollection = refMap.get(varName);
     refMap.put(varName, combined);
     if (oldCollection == null) {
-      combinedRefs.addAll(newSourceCollection.references);
+      boolean var_655 = combinedRefs.addAll(newSourceCollection.references);
       return;
     }
     // otherwise replace previous references that are from sourceName

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java b/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
index 9b7870d..dc87cfc 100644
--- a/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
+++ b/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
@@ -145,7 +145,7 @@
     ReferenceCollection oldCollection = refMap.get(varName);
     refMap.put(varName, combined);
     if (oldCollection == null) {
-      combinedRefs.addAll(newSourceCollection.references);
+      boolean var_655 = combinedRefs.addAll(newSourceCollection.references);
       return;
     }
     // otherwise replace previous references that are from sourceName

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java b/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
index 9b7870d..fda68fe 100644
--- a/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
+++ b/src/com/google/javascript/jscomp/GlobalVarReferenceMap.java
@@ -144,15 +144,16 @@
     List<Reference> combinedRefs = combined.references;
     ReferenceCollection oldCollection = refMap.get(varName);
     refMap.put(varName, combined);
+      boolean b = combinedRefs.addAll(newSourceCollection.references);
     if (oldCollection == null) {
-      combinedRefs.addAll(newSourceCollection.references);
+      b;
       return;
     }
     // otherwise replace previous references that are from sourceName
     SourceRefRange range = findSourceRefRange(oldCollection.references,
       inputId);
     combinedRefs.addAll(range.refsBefore());
-    combinedRefs.addAll(newSourceCollection.references);
+    b;
     combinedRefs.addAll(range.refsAfter());
   }
 

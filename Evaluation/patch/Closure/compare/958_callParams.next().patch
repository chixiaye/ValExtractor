==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 3dc8ec6..2400a6b 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1121,9 +1121,10 @@
       Map<TemplateType, JSType> resolvedTypes) {
     while (declParams.hasNext() && callParams.hasNext()) {
       Node declParam = declParams.next();
+      Node var_958 = callParams.next();
       maybeResolveTemplatedType(
           getJSType(declParam),
-          getJSType(callParams.next()),
+          getJSType(var_958),
           resolvedTypes);
       if (declParam.isVarArgs()) {
         while (callParams.hasNext()) {

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 3dc8ec6..d45342a 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1121,15 +1121,16 @@
       Map<TemplateType, JSType> resolvedTypes) {
     while (declParams.hasNext() && callParams.hasNext()) {
       Node declParam = declParams.next();
+      Node var_958 = callParams.next();
       maybeResolveTemplatedType(
           getJSType(declParam),
-          getJSType(callParams.next()),
+          getJSType(var_958),
           resolvedTypes);
       if (declParam.isVarArgs()) {
         while (callParams.hasNext()) {
           maybeResolveTemplatedType(
               getJSType(declParam),
-              getJSType(callParams.next()),
+              getJSType(var_958),
               resolvedTypes);
         }
       }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 3dc8ec6..9cd23a4 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -1121,15 +1121,16 @@
       Map<TemplateType, JSType> resolvedTypes) {
     while (declParams.hasNext() && callParams.hasNext()) {
       Node declParam = declParams.next();
+        Node next = callParams.next();
       maybeResolveTemplatedType(
           getJSType(declParam),
-          getJSType(callParams.next()),
+          getJSType(next),
           resolvedTypes);
       if (declParam.isVarArgs()) {
         while (callParams.hasNext()) {
           maybeResolveTemplatedType(
               getJSType(declParam),
-              getJSType(callParams.next()),
+              getJSType(next),
               resolvedTypes);
         }
       }

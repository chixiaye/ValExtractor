==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/regex/RegExpTree.java b/src/com/google/javascript/jscomp/regex/RegExpTree.java
index c0c470a..3ce95c7 100644
--- a/src/com/google/javascript/jscomp/regex/RegExpTree.java
+++ b/src/com/google/javascript/jscomp/regex/RegExpTree.java
@@ -18,6 +18,7 @@
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableList.Builder;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -232,7 +233,7 @@
             if (alternatives == null) {
               alternatives = ImmutableList.builder();
             }
-            alternatives.add(preceder);
+            Builder<RegExpTree> var_2412 = alternatives.add(preceder);
             preceder = null;
             ++pos;
           }

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/regex/RegExpTree.java b/src/com/google/javascript/jscomp/regex/RegExpTree.java
index c0c470a..3ce95c7 100644
--- a/src/com/google/javascript/jscomp/regex/RegExpTree.java
+++ b/src/com/google/javascript/jscomp/regex/RegExpTree.java
@@ -18,6 +18,7 @@
 
 import com.google.common.base.Preconditions;
 import com.google.common.collect.ImmutableList;
+import com.google.common.collect.ImmutableList.Builder;
 import com.google.common.collect.ImmutableMap;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Sets;
@@ -232,7 +233,7 @@
             if (alternatives == null) {
               alternatives = ImmutableList.builder();
             }
-            alternatives.add(preceder);
+            Builder<RegExpTree> var_2412 = alternatives.add(preceder);
             preceder = null;
             ++pos;
           }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/regex/RegExpTree.java b/src/com/google/javascript/jscomp/regex/RegExpTree.java
index c0c470a..17c3376 100644
--- a/src/com/google/javascript/jscomp/regex/RegExpTree.java
+++ b/src/com/google/javascript/jscomp/regex/RegExpTree.java
@@ -148,6 +148,7 @@
         // The last item parsed within an alternation.
         RegExpTree preceder = null;
 
+          ImmutableList.Builder<RegExpTree> add = alternatives.add(preceder);
         topLoop:
         while (pos < limit) {
           char ch = pattern.charAt(pos);
@@ -232,7 +233,7 @@
             if (alternatives == null) {
               alternatives = ImmutableList.builder();
             }
-            alternatives.add(preceder);
+            add;
             preceder = null;
             ++pos;
           }
@@ -240,7 +241,7 @@
         // An alternative may have no parsed content blank as in /foo|/.
         if (preceder == null) { preceder = Empty.INSTANCE; }
         if (alternatives != null) {
-          alternatives.add(preceder);
+          add;
           return new Alternation(alternatives.build());
         } else {
           return preceder;

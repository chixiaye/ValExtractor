==> /tmp/ours.java <==
diff --git a/src/com/google/javascript/jscomp/GroupVariableDeclarations.java b/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
index 19cc616..92398ea 100644
--- a/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
+++ b/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
@@ -86,7 +86,8 @@
       return;
     }
     Iterator<Node> varNodeIter = varNodes.iterator();
-    Node firstVarNode = varNodeIter.next();
+    Node var_1375 = varNodeIter.next();
+	Node firstVarNode = var_1375;
     while (varNodeIter.hasNext()) {
       Node varNode = varNodeIter.next();
       applyGroupingToVar(firstVarNode, varNode);

==> /tmp/eclipse.java <==
diff --git a/src/com/google/javascript/jscomp/GroupVariableDeclarations.java b/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
index 19cc616..78803e9 100644
--- a/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
+++ b/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
@@ -86,9 +86,10 @@
       return;
     }
     Iterator<Node> varNodeIter = varNodes.iterator();
-    Node firstVarNode = varNodeIter.next();
+    Node var_1375 = varNodeIter.next();
+	Node firstVarNode = var_1375;
     while (varNodeIter.hasNext()) {
-      Node varNode = varNodeIter.next();
+      Node varNode = var_1375;
       applyGroupingToVar(firstVarNode, varNode);
     }
   }

==> /tmp/idea.java <==
diff --git a/src/com/google/javascript/jscomp/GroupVariableDeclarations.java b/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
index 19cc616..7f03968 100644
--- a/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
+++ b/src/com/google/javascript/jscomp/GroupVariableDeclarations.java
@@ -86,9 +86,10 @@
       return;
     }
     Iterator<Node> varNodeIter = varNodes.iterator();
-    Node firstVarNode = varNodeIter.next();
+      Node next = varNodeIter.next();
+      Node firstVarNode = next;
     while (varNodeIter.hasNext()) {
-      Node varNode = varNodeIter.next();
+      Node varNode = next;
       applyGroupingToVar(firstVarNode, varNode);
     }
   }

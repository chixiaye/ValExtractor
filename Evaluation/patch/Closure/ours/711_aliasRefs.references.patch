diff --git a/src/com/google/javascript/jscomp/CollapseProperties.java b/src/com/google/javascript/jscomp/CollapseProperties.java
index 3dc9204..0f5faeb 100644
--- a/src/com/google/javascript/jscomp/CollapseProperties.java
+++ b/src/com/google/javascript/jscomp/CollapseProperties.java
@@ -25,6 +25,7 @@
 import com.google.javascript.jscomp.GlobalNamespace.Ref;
 import com.google.javascript.jscomp.GlobalNamespace.Ref.Type;
 import com.google.javascript.jscomp.ReferenceCollectingCallback;
+import com.google.javascript.jscomp.ReferenceCollectingCallback.Reference;
 import com.google.javascript.jscomp.ReferenceCollectingCallback.ReferenceCollection;
 import com.google.javascript.jscomp.Scope;
 import com.google.javascript.jscomp.Scope.Var;
@@ -217,11 +218,12 @@
           && aliasRefs.firstReferenceIsAssigningDeclaration()
           && aliasRefs.isAssignedOnceInLifetime()) {
         // The alias is well-formed, so do the inlining now.
-        int size = aliasRefs.references.size();
+        List<Reference> var_711 = aliasRefs.references;
+		int size = var_711.size();
         Set<Node> newNodes = Sets.newHashSetWithExpectedSize(size - 1);
         for (int i = 1; i < size; i++) {
           ReferenceCollectingCallback.Reference aliasRef =
-              aliasRefs.references.get(i);
+              var_711.get(i);
 
           Node newNode = alias.node.cloneTree();
           aliasRef.getParent().replaceChild(aliasRef.getNode(), newNode);

diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..5936b4a 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1397,11 +1397,12 @@
     int lineStartChar = -1;
 
     do {
-      switch (token) {
+      int var_2333 = stream.getCharno();
+	switch (token) {
         case STAR:
           if (ignoreStar) {
             // Mark the position after the star as the new start of the line.
-            lineStartChar = stream.getCharno() + 1;
+            lineStartChar = var_2333 + 1;
           } else {
             // The star is part of the comment.
             if (builder.length() > 0) {
@@ -1431,7 +1432,7 @@
           boolean isEOC = token == JsDocToken.EOC;
           if (!isEOC) {
             if (lineStartChar != -1 && option == WhitespaceOption.PRESERVE) {
-              int numSpaces = stream.getCharno() - lineStartChar;
+              int numSpaces = var_2333 - lineStartChar;
               for (int i = 0; i < numSpaces; i++) {
                 builder.append(' ');
               }
@@ -1455,7 +1456,7 @@
             }
 
             int endLineno = stream.getLineno();
-            int endCharno = stream.getCharno();
+            int endCharno = var_2333;
 
             if (multilineText.length() > 0) {
               jsdocBuilder.markText(multilineText, startLineno, startCharno,

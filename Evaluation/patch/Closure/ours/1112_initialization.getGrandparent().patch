diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java
index 5c7408d..3d89d46 100644
--- a/src/com/google/javascript/jscomp/InlineVariables.java
+++ b/src/com/google/javascript/jscomp/InlineVariables.java
@@ -603,19 +603,20 @@
       // Check if declaration can be inlined without passing
       // any side-effect causing nodes.
       Iterator<Node> it;
-      if (initialization.getParent().isVar()) {
+      Node var_1112 = initialization.getGrandparent();
+	if (initialization.getParent().isVar()) {
         it = NodeIterators.LocalVarMotion.forVar(
             initialization.getNode(),     // NAME
             initialization.getParent(),       // VAR
-            initialization.getGrandparent()); // VAR container
+            var_1112); // VAR container
       } else if (initialization.getParent().isAssign()) {
         Preconditions.checkState(
-            initialization.getGrandparent().isExprResult());
+            var_1112.isExprResult());
         it = NodeIterators.LocalVarMotion.forAssign(
             initialization.getNode(),     // NAME
             initialization.getParent(),       // ASSIGN
-            initialization.getGrandparent(),  // EXPR_RESULT
-            initialization.getGrandparent().getParent()); // EXPR container
+            var_1112,  // EXPR_RESULT
+            var_1112.getParent()); // EXPR container
       } else {
         throw new IllegalStateException("Unexpected initialization parent " +
             initialization.getParent().toStringTree());

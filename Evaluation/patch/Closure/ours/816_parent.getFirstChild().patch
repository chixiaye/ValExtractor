diff --git a/src/com/google/javascript/jscomp/DefinitionsRemover.java b/src/com/google/javascript/jscomp/DefinitionsRemover.java
index adf49a7..5189522 100644
--- a/src/com/google/javascript/jscomp/DefinitionsRemover.java
+++ b/src/com/google/javascript/jscomp/DefinitionsRemover.java
@@ -46,21 +46,24 @@
 
     if (NodeUtil.isVarDeclaration(n) && n.hasChildren()) {
       return new VarDefinition(n, isExtern);
-    } else if (parent.isFunction() && parent.getFirstChild() == n) {
-      if (!NodeUtil.isFunctionExpression(parent)) {
-        return new NamedFunctionDefinition(parent, isExtern);
-      } else if (!n.getString().equals("")) {
-        return new FunctionExpressionDefinition(parent, isExtern);
-      }
-    } else if (parent.isAssign() && parent.getFirstChild() == n) {
-      return new AssignmentDefinition(parent, isExtern);
-    } else if (NodeUtil.isObjectLitKey(n, parent)) {
-      return new ObjectLiteralPropertyDefinition(parent, n, n.getFirstChild(),
-          isExtern);
-    } else if (parent.isParamList()) {
-      Node function = parent.getParent();
-      return new FunctionArgumentDefinition(function, n, isExtern);
-    }
+    } else {
+		Node var_816 = parent.getFirstChild();
+		if (parent.isFunction() && var_816 == n) {
+		  if (!NodeUtil.isFunctionExpression(parent)) {
+		    return new NamedFunctionDefinition(parent, isExtern);
+		  } else if (!n.getString().equals("")) {
+		    return new FunctionExpressionDefinition(parent, isExtern);
+		  }
+		} else if (parent.isAssign() && var_816 == n) {
+		  return new AssignmentDefinition(parent, isExtern);
+		} else if (NodeUtil.isObjectLitKey(n, parent)) {
+		  return new ObjectLiteralPropertyDefinition(parent, n, n.getFirstChild(),
+		      isExtern);
+		} else if (parent.isParamList()) {
+		  Node function = parent.getParent();
+		  return new FunctionArgumentDefinition(function, n, isExtern);
+		}
+	}
     return null;
   }
 

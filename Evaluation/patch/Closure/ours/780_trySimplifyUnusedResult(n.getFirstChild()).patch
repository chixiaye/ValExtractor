diff --git a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
index 1e1571d..46d4ce4 100644
--- a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
+++ b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
@@ -171,7 +171,8 @@
     Node result = n;
 
     // Simplify the results of conditional expressions
-    switch (n.getType()) {
+    Node var_780 = trySimplifyUnusedResult(n.getFirstChild());
+	switch (n.getType()) {
       case Token.HOOK:
         Node trueNode = trySimplifyUnusedResult(n.getFirstChild().getNext());
         Node falseNode = trySimplifyUnusedResult(n.getLastChild());
@@ -188,7 +189,7 @@
           n.setType(Token.AND);
           Preconditions.checkState(n.getChildCount() == 2);
         } else if (trueNode == null && falseNode == null) {
-          result = trySimplifyUnusedResult(n.getFirstChild());
+          result = var_780;
         } else {
           // The structure didn't change.
           result = n;
@@ -205,7 +206,7 @@
           Preconditions.checkState(n.hasOneChild());
           // The conditionally executed code was removed, so
           // replace the AND/OR with its LHS or remove it if it isn't useful.
-          result = trySimplifyUnusedResult(n.getFirstChild());
+          result = var_780;
         }
         break;
       case Token.FUNCTION:
@@ -218,7 +219,7 @@
         // get split into individual EXPR_RESULT statement, if possible), so
         // we special case COMMA (we don't want to rewrite COMMAs as new COMMAs
         // nodes.
-        Node left = trySimplifyUnusedResult(n.getFirstChild());
+        Node left = var_780;
         Node right = trySimplifyUnusedResult(n.getLastChild());
         if (left == null && right == null) {
           result = null;

diff --git a/src/com/google/javascript/jscomp/regex/CharRanges.java b/src/com/google/javascript/jscomp/regex/CharRanges.java
index 0736d68..ce1d9aa 100644
--- a/src/com/google/javascript/jscomp/regex/CharRanges.java
+++ b/src/com/google/javascript/jscomp/regex/CharRanges.java
@@ -300,31 +300,34 @@
     while (mIdx < mn) {
       if (pos >= minuend[mIdx + 1]) {
         mIdx += 2;
-      } else if (pos < minuend[mIdx]) {
-        // Skip gaps in the minuend.
-        pos = minuend[mIdx];
-      } else if (sIdx < sn && pos >= subtrahend[sIdx]) {
-        // Skip over a removed part.
-        pos = subtrahend[sIdx + 1];
-        sIdx += 2;
       } else {
-        // Now we know that pos is between [minuend[i], minuend[i + 1])
-        // and outside [subtrahend[j], subtrahend[j + 1]).
-        int end = sIdx < sn
-            ? Math.min(minuend[mIdx + 1], subtrahend[sIdx]) : minuend[mIdx + 1];
-        if (dIdx != 0 && difference[dIdx - 1] == pos) {
-          difference[dIdx - 1] = pos;
-        } else {
-          if (dIdx == difference.length) {
-            int[] newArr = new int[dIdx * 2];
-            System.arraycopy(difference, 0, newArr, 0, dIdx);
-            difference = newArr;
-          }
-          difference[dIdx++] = pos;
-          difference[dIdx++] = end;
-        }
-        pos = end;
-      }
+		int var_2399 = minuend[mIdx];
+		if (pos < var_2399) {
+		    // Skip gaps in the minuend.
+		    pos = var_2399;
+		  } else if (sIdx < sn && pos >= subtrahend[sIdx]) {
+		    // Skip over a removed part.
+		    pos = subtrahend[sIdx + 1];
+		    sIdx += 2;
+		  } else {
+		    // Now we know that pos is between [minuend[i], minuend[i + 1])
+		    // and outside [subtrahend[j], subtrahend[j + 1]).
+		    int end = sIdx < sn
+		        ? Math.min(minuend[mIdx + 1], subtrahend[sIdx]) : minuend[mIdx + 1];
+		    if (dIdx != 0 && difference[dIdx - 1] == pos) {
+		      difference[dIdx - 1] = pos;
+		    } else {
+		      if (dIdx == difference.length) {
+		        int[] newArr = new int[dIdx * 2];
+		        System.arraycopy(difference, 0, newArr, 0, dIdx);
+		        difference = newArr;
+		      }
+		      difference[dIdx++] = pos;
+		      difference[dIdx++] = end;
+		    }
+		    pos = end;
+		  }
+	}
     }
 
     if (dIdx != difference.length) {

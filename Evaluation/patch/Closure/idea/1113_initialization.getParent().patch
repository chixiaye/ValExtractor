diff --git a/src/com/google/javascript/jscomp/InlineVariables.java b/src/com/google/javascript/jscomp/InlineVariables.java
index 5c7408d..d1afa2d 100644
--- a/src/com/google/javascript/jscomp/InlineVariables.java
+++ b/src/com/google/javascript/jscomp/InlineVariables.java
@@ -603,22 +603,23 @@
       // Check if declaration can be inlined without passing
       // any side-effect causing nodes.
       Iterator<Node> it;
-      if (initialization.getParent().isVar()) {
+        Node parent = initialization.getParent();
+        if (parent.isVar()) {
         it = NodeIterators.LocalVarMotion.forVar(
             initialization.getNode(),     // NAME
-            initialization.getParent(),       // VAR
+                parent,       // VAR
             initialization.getGrandparent()); // VAR container
-      } else if (initialization.getParent().isAssign()) {
+      } else if (parent.isAssign()) {
         Preconditions.checkState(
             initialization.getGrandparent().isExprResult());
         it = NodeIterators.LocalVarMotion.forAssign(
             initialization.getNode(),     // NAME
-            initialization.getParent(),       // ASSIGN
+                parent,       // ASSIGN
             initialization.getGrandparent(),  // EXPR_RESULT
             initialization.getGrandparent().getParent()); // EXPR container
       } else {
         throw new IllegalStateException("Unexpected initialization parent " +
-            initialization.getParent().toStringTree());
+            parent.toStringTree());
       }
       Node targetName = reference.getNode();
       while (it.hasNext()) {

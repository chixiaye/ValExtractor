diff --git a/src/com/google/javascript/jscomp/InlineFunctions.java b/src/com/google/javascript/jscomp/InlineFunctions.java
index 008ffe5..8f0c5b6 100644
--- a/src/com/google/javascript/jscomp/InlineFunctions.java
+++ b/src/com/google/javascript/jscomp/InlineFunctions.java
@@ -251,7 +251,8 @@
       fs.setInline(false);
     } else {
       // verify the function hasn't already been marked as "don't inline"
-      if (fs.canInline()) {
+        boolean b = fs.canInline();
+        if (b) {
         // store it for use when inlining.
         fs.setFn(fn);
         if (injector.isDirectCallNodeReplacementPossible(
@@ -268,7 +269,7 @@
         }
 
         // Set the module and gather names that need temporaries.
-        if (fs.canInline()) {
+        if (b) {
           fs.setModule(module);
 
           Node fnNode = fn.getFunctionNode();
@@ -298,7 +299,7 @@
         }
 
         // Check if block inlining is allowed.
-        if (fs.canInline() && !fs.canInlineDirectly()) {
+        if (b && !fs.canInlineDirectly()) {
           if (!blockFunctionInliningEnabled) {
             fs.setInline(false);
           }

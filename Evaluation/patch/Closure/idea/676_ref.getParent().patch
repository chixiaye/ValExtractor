diff --git a/src/com/google/javascript/jscomp/InlineObjectLiterals.java b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
index d03988c..038fdf5 100644
--- a/src/com/google/javascript/jscomp/InlineObjectLiterals.java
+++ b/src/com/google/javascript/jscomp/InlineObjectLiterals.java
@@ -443,26 +443,29 @@
           // Assignments have to be handled specially, since they
           // expand out into multiple assignments.
           replaceAssignmentExpression(v, ref, varmap);
-        } else if (ref.getParent().isVar()) {
-          // The old variable declaration. It didn't have a
-          // value. Remove it entirely as it should now be unused.
-          ref.getGrandparent().removeChild(ref.getParent());
         } else {
-          // Make sure that the reference is a GETPROP as we expect it to be.
-          Node getprop = ref.getParent();
-          Preconditions.checkState(getprop.isGetProp());
-
-          // The key being looked up in the original map.
-          String var = getprop.getChildAtIndex(1).getString();
-
-          // If the variable hasn't already been declared, add an empty
-          // declaration near all the other declarations.
-          Preconditions.checkState(varmap.containsKey(var));
-
-          // Replace the GETPROP node with a NAME.
-          Node replacement = IR.name(varmap.get(var));
-          replacement.copyInformationFrom(getprop);
-          ref.getGrandparent().replaceChild(ref.getParent(), replacement);
+            Node parent = ref.getParent();
+            if (parent.isVar()) {
+              // The old variable declaration. It didn't have a
+              // value. Remove it entirely as it should now be unused.
+              ref.getGrandparent().removeChild(parent);
+            } else {
+              // Make sure that the reference is a GETPROP as we expect it to be.
+              Node getprop = parent;
+              Preconditions.checkState(getprop.isGetProp());
+    
+              // The key being looked up in the original map.
+              String var = getprop.getChildAtIndex(1).getString();
+    
+              // If the variable hasn't already been declared, add an empty
+              // declaration near all the other declarations.
+              Preconditions.checkState(varmap.containsKey(var));
+    
+              // Replace the GETPROP node with a NAME.
+              Node replacement = IR.name(varmap.get(var));
+              replacement.copyInformationFrom(getprop);
+              ref.getGrandparent().replaceChild(parent, replacement);
+            }
         }
       }
 

diff --git a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
index 7378f31..009dbd6 100644
--- a/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
+++ b/src/com/google/javascript/jscomp/PeepholeFoldConstants.java
@@ -949,6 +949,7 @@
     boolean nullRight = right.isNull();
     int lhType = getNormalizedNodeType(left);
     int rhType = getNormalizedNodeType(right);
+    String string = left.getString();
     switch (lhType) {
       case Token.VOID:
         if (!leftLiteral) {
@@ -1025,11 +1026,11 @@
         switch (op) {
           case Token.SHEQ:
           case Token.EQ:
-            return areStringsEqual(left.getString(), right.getString());
+            return areStringsEqual(string, right.getString());
 
           case Token.SHNE:
           case Token.NE:
-            return areStringsEqual(left.getString(), right.getString()).not();
+            return areStringsEqual(string, right.getString()).not();
         }
 
         return TernaryValue.UNKNOWN;
@@ -1052,7 +1053,7 @@
         }
 
         if (rightLiteral) {
-          boolean undefinedLeft = (left.getString().equals("undefined"));
+          boolean undefinedLeft = (string.equals("undefined"));
           if (undefinedLeft) {
             return TernaryValue.forBoolean(compareToUndefined(right, op));
           }
@@ -1064,7 +1065,7 @@
         if (Token.NAME != right.getType()) {
           return TernaryValue.UNKNOWN;  // Only eval if they are the same type
         }
-        String ln = left.getString();
+        String ln = string;
         String rn = right.getString();
         if (!ln.equals(rn)) {
           return TernaryValue.UNKNOWN;  // Not the same value name.

diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..c77afe6 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -313,8 +313,9 @@
         Node elseBranch = thenBranch.getNext();
         Node nextNode = child.getNext();
 
-        if (nextNode != null && elseBranch == null
-            && isReturnBlock(thenBranch)
+          boolean returnBlock = isReturnBlock(thenBranch);
+          if (nextNode != null && elseBranch == null
+            && returnBlock
             && nextNode.isIf()) {
           Node nextCond = nextNode.getFirstChild();
           Node nextThen = nextCond.getNext();
@@ -345,7 +346,7 @@
             reportCodeChange();
           }
         } else if (nextNode != null && elseBranch == null &&
-            isReturnBlock(thenBranch) && isReturnExpression(nextNode)) {
+                  returnBlock && isReturnExpression(nextNode)) {
           Node thenExpr = null;
           // if(x)return; return 1 -> return x?void 0:1
           if (isReturnExpressBlock(thenBranch)) {

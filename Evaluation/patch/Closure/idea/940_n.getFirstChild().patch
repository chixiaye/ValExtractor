diff --git a/src/com/google/javascript/jscomp/TypeInference.java b/src/com/google/javascript/jscomp/TypeInference.java
index 3dc8ec6..5135238 100644
--- a/src/com/google/javascript/jscomp/TypeInference.java
+++ b/src/com/google/javascript/jscomp/TypeInference.java
@@ -301,7 +301,8 @@
   }
 
   private FlowScope traverse(Node n, FlowScope scope) {
-    switch (n.getType()) {
+      Node firstChild = n.getFirstChild();
+      switch (n.getType()) {
       case Token.ASSIGN:
         scope = traverseAssign(n, scope);
         break;
@@ -347,7 +348,7 @@
 
       case Token.POS:
       case Token.NEG:
-        scope = traverse(n.getFirstChild(), scope);  // Find types.
+        scope = traverse(firstChild, scope);  // Find types.
         n.setJSType(getNativeType(NUMBER_TYPE));
         break;
 
@@ -387,8 +388,8 @@
         break;
 
       case Token.PARAM_LIST:
-        scope = traverse(n.getFirstChild(), scope);
-        n.setJSType(getJSType(n.getFirstChild()));
+        scope = traverse(firstChild, scope);
+        n.setJSType(getJSType(firstChild));
         break;
 
       case Token.COMMA:
@@ -423,13 +424,13 @@
 
       case Token.EXPR_RESULT:
         scope = traverseChildren(n, scope);
-        if (n.getFirstChild().isGetProp()) {
-          ensurePropertyDeclared(n.getFirstChild());
+        if (firstChild.isGetProp()) {
+          ensurePropertyDeclared(firstChild);
         }
         break;
 
       case Token.SWITCH:
-        scope = traverse(n.getFirstChild(), scope);
+        scope = traverse(firstChild, scope);
         break;
 
       case Token.RETURN:

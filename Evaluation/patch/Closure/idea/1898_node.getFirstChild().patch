diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 980deff..8da7d50 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -434,18 +434,19 @@
   private void handleSwitch(Node node) {
     // Transfer to the first non-DEFAULT CASE. if there are none, transfer
     // to the DEFAULT or the EMPTY node.
-    Node next = getNextSiblingOfType(
-        node.getFirstChild().getNext(), Token.CASE, Token.EMPTY);
+      Node firstChild = node.getFirstChild();
+      Node next = getNextSiblingOfType(
+        firstChild.getNext(), Token.CASE, Token.EMPTY);
     if (next != null) { // Has at least one CASE or EMPTY
       createEdge(node, Branch.UNCOND, next);
     } else { // Has no CASE but possibly a DEFAULT
-      if (node.getFirstChild().getNext() != null) {
-        createEdge(node, Branch.UNCOND, node.getFirstChild().getNext());
+      if (firstChild.getNext() != null) {
+        createEdge(node, Branch.UNCOND, firstChild.getNext());
       } else { // No CASE, no DEFAULT
         createEdge(node, Branch.UNCOND, computeFollowNode(node, this));
       }
     }
-    connectToPossibleExceptionHandler(node, node.getFirstChild());
+    connectToPossibleExceptionHandler(node, firstChild);
   }
 
   private void handleCase(Node node) {

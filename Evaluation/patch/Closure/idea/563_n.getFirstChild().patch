diff --git a/src/com/google/javascript/jscomp/AnonymousFunctionNamingCallback.java b/src/com/google/javascript/jscomp/AnonymousFunctionNamingCallback.java
index 161ef8d..5dc0b9d 100644
--- a/src/com/google/javascript/jscomp/AnonymousFunctionNamingCallback.java
+++ b/src/com/google/javascript/jscomp/AnonymousFunctionNamingCallback.java
@@ -66,7 +66,8 @@
 
   @Override
   public void visit(NodeTraversal t, Node n, Node parent) {
-    switch (n.getType()) {
+      Node firstChild = n.getFirstChild();
+      switch (n.getType()) {
       case Token.FUNCTION:
         // this handles functions that are assigned to variables or
         // properties
@@ -74,7 +75,7 @@
         // }
 
         // get the function name and see if it's empty
-        Node functionNameNode = n.getFirstChild();
+        Node functionNameNode = firstChild;
         String functionName = functionNameNode.getString();
         if (functionName.length() == 0) {
           if (parent.isAssign()) {
@@ -99,7 +100,7 @@
         // e.g. BuzzApp.prototype = {
         //        Start : function() { }
         //      }
-        Node lhs = n.getFirstChild();
+        Node lhs = firstChild;
         Node rhs = lhs.getNext();
         if (rhs.isObjectLit()) {
           nameObjectLiteralMethods(rhs, namer.getName(lhs));

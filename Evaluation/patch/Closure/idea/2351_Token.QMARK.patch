diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..8e15cd8 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -1721,7 +1721,8 @@
    *     | '?'
    */
   private Node parseTypeExpression(JsDocToken token) {
-    if (token == JsDocToken.QMARK) {
+      int qmark = Token.QMARK;
+      if (token == JsDocToken.QMARK) {
       // A QMARK could mean that a type is nullable, or that it's unknown.
       // We use look-ahead 1 to determine whether it's unknown. Otherwise,
       // we assume it means nullable. There are 5 cases:
@@ -1743,10 +1744,10 @@
           token == JsDocToken.PIPE ||
           token == JsDocToken.GT) {
         restoreLookAhead(token);
-        return newNode(Token.QMARK);
+        return newNode(qmark);
       }
 
-      return wrapNode(Token.QMARK, parseBasicTypeExpression(token));
+      return wrapNode(qmark, parseBasicTypeExpression(token));
     } else if (token == JsDocToken.BANG) {
       return wrapNode(Token.BANG, parseBasicTypeExpression(next()));
     } else {
@@ -1754,7 +1755,7 @@
       if (basicTypeExpr != null) {
         if (match(JsDocToken.QMARK)) {
           next();
-          return wrapNode(Token.QMARK, basicTypeExpr);
+          return wrapNode(qmark, basicTypeExpr);
         } else if (match(JsDocToken.BANG)) {
           next();
           return wrapNode(Token.BANG, basicTypeExpr);

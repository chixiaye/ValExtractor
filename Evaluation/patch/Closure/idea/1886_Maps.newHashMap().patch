diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 980deff..63fbca6 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -26,13 +26,7 @@
 import com.google.javascript.rhino.Node;
 import com.google.javascript.rhino.Token;
 
-import java.util.ArrayDeque;
-import java.util.Comparator;
-import java.util.Deque;
-import java.util.Iterator;
-import java.util.List;
-import java.util.Map;
-import java.util.PriorityQueue;
+import java.util.*;
 
 /**
  * This is a compiler pass that computes a control flow graph.
@@ -149,8 +143,9 @@
   public void process(Node externs, Node root) {
     this.root = root;
     astPositionCounter = 0;
-    astPosition = Maps.newHashMap();
-    nodePriorities = Maps.newHashMap();
+      HashMap<Node, Integer> astPosition1 = Maps.newHashMap();
+      astPosition = astPosition1;
+    nodePriorities = astPosition1;
     cfg = new AstControlFlowGraph(computeFallThrough(root), nodePriorities,
                                   edgeAnnotations);
     NodeTraversal.traverse(compiler, root, this);

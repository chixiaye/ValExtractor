diff --git a/src/com/google/javascript/jscomp/FunctionInjector.java b/src/com/google/javascript/jscomp/FunctionInjector.java
index ddfb4ed..be8fb8a 100644
--- a/src/com/google/javascript/jscomp/FunctionInjector.java
+++ b/src/com/google/javascript/jscomp/FunctionInjector.java
@@ -689,8 +689,9 @@
    */
   private CanInlineResult canInlineReferenceDirectly(
       Node callNode, Node fnNode) {
-    if (!isDirectCallNodeReplacementPossible(fnNode)) {
-      return CanInlineResult.NO;
+      CanInlineResult no = CanInlineResult.NO;
+      if (!isDirectCallNodeReplacementPossible(fnNode)) {
+      return no;
     }
 
     Node block = fnNode.getLastChild();
@@ -705,7 +706,7 @@
       if (NodeUtil.isFunctionObjectCall(callNode)) {
         // TODO(johnlenz): Support replace this with a value.
         if (cArg == null || !cArg.isThis()) {
-          return CanInlineResult.NO;
+          return no;
         }
         cArg = cArg.getNext();
       } else {
@@ -726,7 +727,7 @@
           if (NodeUtil.mayEffectMutableState(cArg, compiler)
               && NodeUtil.getNameReferenceCount(
                   block, fnParam.getString()) > 1) {
-            return CanInlineResult.NO;
+            return no;
           }
         }
 
@@ -738,7 +739,7 @@
       // isn't a named parameter to match.
       if (cArg != null) {
         if (NodeUtil.mayHaveSideEffects(cArg, compiler)) {
-          return CanInlineResult.NO;
+          return no;
         }
         cArg = cArg.getNext();
       }

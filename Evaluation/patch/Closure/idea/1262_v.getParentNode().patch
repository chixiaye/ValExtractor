diff --git a/src/com/google/javascript/jscomp/Normalize.java b/src/com/google/javascript/jscomp/Normalize.java
index 98b136e..7fa8177 100644
--- a/src/com/google/javascript/jscomp/Normalize.java
+++ b/src/com/google/javascript/jscomp/Normalize.java
@@ -733,7 +733,8 @@
       }
 
       // If name is "arguments", Var maybe null.
-      if (v != null && v.getParentNode().isCatch()) {
+        Node parentNode = v.getParentNode();
+        if (v != null && parentNode.isCatch()) {
         // Redeclaration of a catch expression variable is hard to model
         // without support for "with" expressions.
         // The ECMAScript spec (section 12.14), declares that a catch
@@ -756,11 +757,11 @@
                 input.getName(), n,
                 CATCH_BLOCK_VAR_ERROR, name));
       } else if (v != null && parent.isFunction()) {
-        if (v.getParentNode().isVar()) {
+        if (parentNode.isVar()) {
           s.undeclare(v);
           s.declare(name, n, n.getJSType(), v.input);
-          replaceVarWithAssignment(v.getNameNode(), v.getParentNode(),
-              v.getParentNode().getParent());
+          replaceVarWithAssignment(v.getNameNode(), parentNode,
+              parentNode.getParent());
         }
       } else if (parent.isVar()) {
         Preconditions.checkState(parent.hasOneChild());

diff --git a/src/com/google/javascript/jscomp/deps/SortedDependencies.java b/src/com/google/javascript/jscomp/deps/SortedDependencies.java
index 95e2071..ebbdf7f 100644
--- a/src/com/google/javascript/jscomp/deps/SortedDependencies.java
+++ b/src/com/google/javascript/jscomp/deps/SortedDependencies.java
@@ -238,18 +238,19 @@
 
   private static <T> List<T> topologicalStableSort(
       List<T> items, Multimap<T, T> deps) {
-    if (items.size() == 0) {
+      int size = items.size();
+      if (size == 0) {
       // Priority queue blows up if we give it a size of 0. Since we need
       // to special case this either way, just bail out.
       return Lists.newArrayList();
     }
 
     final Map<T, Integer> originalIndex = Maps.newHashMap();
-    for (int i = 0; i < items.size(); i++) {
+    for (int i = 0; i < size; i++) {
       originalIndex.put(items.get(i), i);
     }
 
-    PriorityQueue<T> inDegreeZero = new PriorityQueue<T>(items.size(),
+    PriorityQueue<T> inDegreeZero = new PriorityQueue<T>(size,
         new Comparator<T>() {
       @Override
       public int compare(T a, T b) {

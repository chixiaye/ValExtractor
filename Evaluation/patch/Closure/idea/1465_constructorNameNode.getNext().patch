diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..d44416d 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -1384,14 +1384,15 @@
         // "RegExp("boo", "g")" --> /boo/g
         return tryFoldRegularExpressionConstructor(n);
       } else {
-        boolean constructorHasArgs = constructorNameNode.getNext() != null;
+          Node next = constructorNameNode.getNext();
+          boolean constructorHasArgs = next != null;
 
         if ("Object".equals(className) && !constructorHasArgs) {
           // "Object()" --> "{}"
           newLiteralNode = IR.objectlit();
         } else if ("Array".equals(className)) {
           // "Array(arg0, arg1, ...)" --> "[arg0, arg1, ...]"
-          Node arg0 = constructorNameNode.getNext();
+          Node arg0 = next;
           FoldArrayAction action = isSafeToFoldArrayConstructor(arg0);
 
           if (action == FoldArrayAction.SAFE_TO_FOLD_WITH_ARGS ||

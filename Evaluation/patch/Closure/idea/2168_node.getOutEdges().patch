diff --git a/src/com/google/javascript/jscomp/graph/GraphPruner.java b/src/com/google/javascript/jscomp/graph/GraphPruner.java
index 9e88230..da1230f 100644
--- a/src/com/google/javascript/jscomp/graph/GraphPruner.java
+++ b/src/com/google/javascript/jscomp/graph/GraphPruner.java
@@ -20,6 +20,8 @@
 import com.google.javascript.jscomp.graph.DiGraph.DiGraphEdge;
 import com.google.javascript.jscomp.graph.DiGraph.DiGraphNode;
 
+import java.util.List;
+
 /**
  * Prunes a graph, creating a new graph with nodes removed.
  *
@@ -47,7 +49,8 @@
     // an edge.
     for (DiGraphNode<N, E> node : workGraph.getDirectedGraphNodes()) {
       for (DiGraphEdge<N, E> inEdge : node.getInEdges()) {
-        for (DiGraphEdge<N, E> outEdge : node.getOutEdges()) {
+          List<DiGraphEdge<N, E>> outEdges = node.getOutEdges();
+          for (DiGraphEdge<N, E> outEdge : outEdges) {
           N source = inEdge.getSource().getValue();
           N dest = outEdge.getDestination().getValue();
           if (!workGraph.isConnectedInDirection(source, dest)) {

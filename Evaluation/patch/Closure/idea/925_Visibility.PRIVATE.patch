diff --git a/src/com/google/javascript/jscomp/CheckAccessControls.java b/src/com/google/javascript/jscomp/CheckAccessControls.java
index df50c26..cd04336 100644
--- a/src/com/google/javascript/jscomp/CheckAccessControls.java
+++ b/src/com/google/javascript/jscomp/CheckAccessControls.java
@@ -485,7 +485,8 @@
           && referenceSource.equals(definingSource);
       Visibility visibility = docInfo.getVisibility();
       JSType ownerType = normalizeClassType(objectType);
-      if (isOverride) {
+        Visibility aPrivate = Visibility.PRIVATE;
+        if (isOverride) {
         // Check an ASSIGN statement that's trying to override a property
         // on a superclass.
         JSDocInfo overridingInfo = parent.getJSDocInfo();
@@ -495,7 +496,7 @@
         // Check that (a) the property *can* be overridden, and
         // (b) that the visibility of the override is the same as the
         // visibility of the original property.
-        if (visibility == Visibility.PRIVATE && !sameInput) {
+        if (visibility == aPrivate && !sameInput) {
           compiler.report(
               t.makeError(getprop, PRIVATE_OVERRIDE,
                   objectType.toString()));
@@ -510,7 +511,7 @@
         if (sameInput) {
           // private access is always allowed in the same file.
           return;
-        } else if (visibility == Visibility.PRIVATE &&
+        } else if (visibility == aPrivate &&
             (currentClass == null || !ownerType.isEquivalentTo(currentClass))) {
           if (docInfo.isConstructor() &&
               isValidPrivateConstructorAccess(parent)) {

diff --git a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
index 5ef8850..9499d07 100644
--- a/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
+++ b/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java
@@ -212,7 +212,8 @@
 
     // Parse the actual JsDoc.
     retry: for (;;) {
-      switch (token) {
+        final JsDocToken eol = JsDocToken.EOL;
+        switch (token) {
         case ANNOTATION:
           if (state == State.SEARCHING_ANNOTATION) {
             state = State.SEARCHING_NEWLINE;
@@ -377,7 +378,7 @@
                   charno = stream.getCharno();
 
                   type = null;
-                  if (token != JsDocToken.EOL && token != JsDocToken.EOC) {
+                  if (token != eol && token != JsDocToken.EOC) {
                     type = createJSTypeExpression(
                         parseAndRecordTypeNode(token));
                   }
@@ -465,7 +466,7 @@
                         parser.addTypeWarning("msg.jsdoc.missing.rc",
                             stream.getLineno(), stream.getCharno());
                       }
-                    } else if (token != JsDocToken.EOL &&
+                    } else if (token != eol &&
                         token != JsDocToken.EOF && token != JsDocToken.EOC) {
                       parser.addTypeWarning("msg.end.annotation.expected",
                           stream.getLineno(), stream.getCharno());
@@ -968,7 +969,7 @@
           checkExtendedTypes(extendedTypes);
           return false;
 
-        case EOL:
+        case eol:
           if (state == State.SEARCHING_NEWLINE) {
             state = State.SEARCHING_ANNOTATION;
           }

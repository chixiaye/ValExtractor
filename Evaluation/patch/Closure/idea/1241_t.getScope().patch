diff --git a/src/com/google/javascript/jscomp/TypedScopeCreator.java b/src/com/google/javascript/jscomp/TypedScopeCreator.java
index 461cddc..41b7786 100644
--- a/src/com/google/javascript/jscomp/TypedScopeCreator.java
+++ b/src/com/google/javascript/jscomp/TypedScopeCreator.java
@@ -2042,12 +2042,13 @@
         return;
       }
 
-      if (n.isName() && NodeUtil.isLValue(n) &&
+        Scope scope1 = t.getScope();
+        if (n.isName() && NodeUtil.isLValue(n) &&
           // Be careful of bleeding functions, which create variables
           // in the inner scope, not the scope where the name appears.
           !NodeUtil.isBleedingFunctionName(n)) {
         String name = n.getString();
-        Scope scope = t.getScope();
+        Scope scope = scope1;
         Var var = scope.getVar(name);
         if (var != null) {
           Scope ownerScope = var.getScope();
@@ -2062,7 +2063,7 @@
       } else if (n.isGetProp() && n.isUnscopedQualifiedName() &&
           NodeUtil.isLValue(n)) {
         String name = NodeUtil.getRootOfQualifiedName(n).getString();
-        Scope scope = t.getScope();
+        Scope scope = scope1;
         Var var = scope.getVar(name);
         if (var != null) {
           Scope ownerScope = var.getScope();

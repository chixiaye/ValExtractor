diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..ba490d9 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -1266,17 +1266,18 @@
         Node replacement = null;
         TernaryValue trueNodeVal = NodeUtil.getPureBooleanValue(trueNode);
         TernaryValue falseNodeVal = NodeUtil.getPureBooleanValue(falseNode);
-        if (trueNodeVal == TernaryValue.TRUE
+          TernaryValue aTrue = TernaryValue.TRUE;
+          if (trueNodeVal == aTrue
             && falseNodeVal == TernaryValue.FALSE) {
           // Remove useless conditionals, keep the condition
           condition.detachFromParent();
           replacement = condition;
         } else if (trueNodeVal == TernaryValue.FALSE
-            && falseNodeVal == TernaryValue.TRUE) {
+            && falseNodeVal == aTrue) {
           // Remove useless conditionals, keep the condition
           condition.detachFromParent();
           replacement = IR.not(condition);
-        } else if (trueNodeVal == TernaryValue.TRUE) {
+        } else if (trueNodeVal == aTrue) {
           // Remove useless true case.
           n.detachChildren();
           replacement = IR.or(condition, falseNode);

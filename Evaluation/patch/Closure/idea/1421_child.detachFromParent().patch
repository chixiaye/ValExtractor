diff --git a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
index ae568e8..e9389bf 100644
--- a/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
+++ b/src/com/google/javascript/jscomp/PeepholeSubstituteAlternateSyntax.java
@@ -319,12 +319,13 @@
           Node nextCond = nextNode.getFirstChild();
           Node nextThen = nextCond.getNext();
           Node nextElse = nextThen.getNext();
-          if (thenBranch.isEquivalentToTyped(nextThen)) {
+            Node node = child.detachFromParent();
+            if (thenBranch.isEquivalentToTyped(nextThen)) {
             // Transform
             //   if (x) return 1; if (y) return 1;
             // to
             //   if (x||y) return 1;
-            child.detachFromParent();
+            node;
             child.detachChildren();
             Node newCond = new Node(Token.OR, cond);
             nextNode.replaceChild(nextCond, newCond);
@@ -336,7 +337,7 @@
             //   if (x) return 1; if (y) foo() else return 1;
             // to
             //   if (!x&&y) foo() else return 1;
-            child.detachFromParent();
+            node;
             child.detachChildren();
             Node newCond = new Node(Token.AND,
                 IR.not(cond).srcref(cond));

diff --git a/src/com/google/javascript/jscomp/CheckGlobalNames.java b/src/com/google/javascript/jscomp/CheckGlobalNames.java
index d035d9d..3e85e6a 100644
--- a/src/com/google/javascript/jscomp/CheckGlobalNames.java
+++ b/src/com/google/javascript/jscomp/CheckGlobalNames.java
@@ -159,37 +159,40 @@
         if (!isGlobalExpr) {
           reportRefToUndefinedName(name, ref);
         }
-      } else if (declaration != null &&
-          ref.getModule() != declaration.getModule() &&
-          !moduleGraph.dependsOn(
-              ref.getModule(), declaration.getModule())) {
-        reportBadModuleReference(name, ref);
       } else {
-        // Check for late references.
-        if (ref.scope.isGlobal()) {
-          // Prototype references are special, because in our reference graph,
-          // A.prototype counts as a reference to A.
-          boolean isPrototypeGet = (ref.type == Ref.Type.PROTOTYPE_GET);
-          Name owner = isPrototypeGet ? name : parent;
-          boolean singleGlobalParentDecl =
-              owner != null &&
-              owner.getDeclaration() != null &&
-              owner.localSets == 0;
-
-          if (singleGlobalParentDecl &&
-              owner.getDeclaration().preOrderIndex > ref.preOrderIndex) {
-            String refName = isPrototypeGet
-                ? name.getFullName() + ".prototype"
-                : name.getFullName();
-            compiler.report(
-                JSError.make(ref.source.getName(), ref.node,
-                    NAME_DEFINED_LATE_WARNING,
-                    refName,
-                    owner.getFullName(),
-                    owner.getDeclaration().source.getName(),
-                    String.valueOf(owner.getDeclaration().node.getLineno())));
+          JSModule module = declaration.getModule();
+          if (declaration != null &&
+              ref.getModule() != module &&
+              !moduleGraph.dependsOn(
+                  ref.getModule(), module)) {
+            reportBadModuleReference(name, ref);
+          } else {
+            // Check for late references.
+            if (ref.scope.isGlobal()) {
+              // Prototype references are special, because in our reference graph,
+              // A.prototype counts as a reference to A.
+              boolean isPrototypeGet = (ref.type == Ref.Type.PROTOTYPE_GET);
+              Name owner = isPrototypeGet ? name : parent;
+              boolean singleGlobalParentDecl =
+                  owner != null &&
+                  owner.getDeclaration() != null &&
+                  owner.localSets == 0;
+    
+              if (singleGlobalParentDecl &&
+                  owner.getDeclaration().preOrderIndex > ref.preOrderIndex) {
+                String refName = isPrototypeGet
+                    ? name.getFullName() + ".prototype"
+                    : name.getFullName();
+                compiler.report(
+                    JSError.make(ref.source.getName(), ref.node,
+                        NAME_DEFINED_LATE_WARNING,
+                        refName,
+                        owner.getFullName(),
+                        owner.getDeclaration().source.getName(),
+                        String.valueOf(owner.getDeclaration().node.getLineno())));
+              }
+            }
           }
-        }
       }
     }
   }

diff --git a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
index 1e1571d..90670a7 100644
--- a/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
+++ b/src/com/google/javascript/jscomp/PeepholeRemoveDeadCode.java
@@ -371,10 +371,11 @@
   private Node tryOptimizeDefaultCase(Node n) {
     Preconditions.checkState(n.isSwitch());
 
-    Node lastNonRemovable = n.getFirstChild();  // The switch condition
+    Node var_792 = n.getFirstChild();
+	Node lastNonRemovable = var_792;  // The switch condition
 
     // The first child is the switch conditions skip it when looking for cases.
-    for (Node c = n.getFirstChild().getNext(); c != null; c = c.getNext()) {
+    for (Node c = var_792.getNext(); c != null; c = c.getNext()) {
       if (c.isDefaultCase()) {
         // Remove cases that fall-through to the default case
         Node caseToRemove = lastNonRemovable.getNext();
@@ -384,7 +385,7 @@
         }
 
         // Don't use the switch condition as the previous case.
-        Node prevCase = (lastNonRemovable == n.getFirstChild())
+        Node prevCase = (lastNonRemovable == var_792)
             ? null : lastNonRemovable;
 
         // Remove the default case if we can

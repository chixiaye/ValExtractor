diff --git a/src/com/google/javascript/jscomp/TightenTypes.java b/src/com/google/javascript/jscomp/TightenTypes.java
index 2f1ab6a..4a76dca 100644
--- a/src/com/google/javascript/jscomp/TightenTypes.java
+++ b/src/com/google/javascript/jscomp/TightenTypes.java
@@ -1054,7 +1054,8 @@
     Preconditions.checkNotNull(scope);
     Preconditions.checkNotNull(expr);
     ConcreteType ret;
-    switch (expr.getType()) {
+    ConcreteType var_1072 = inferConcreteType(scope, expr.getLastChild());
+	switch (expr.getType()) {
       case Token.NAME:
         StaticSlot<ConcreteType> slot = scope.getSlot(expr.getString());
 
@@ -1074,28 +1075,28 @@
       case Token.ASSIGN:
         // Using the right-hand side is more specific since the left hand side
         // is a variable of some sort that can be assigned elsewhere.
-        ret = inferConcreteType(scope, expr.getLastChild());
+        ret = var_1072;
         break;
 
       case Token.COMMA:
-        ret = inferConcreteType(scope, expr.getLastChild());
+        ret = var_1072;
         break;
 
       case Token.AND:
         // Since a reference type is always true, only the right hand side could
         // actually be returned.
-        ret = inferConcreteType(scope, expr.getLastChild());
+        ret = var_1072;
         break;
 
       case Token.OR:
         ret = inferConcreteType(scope, expr.getFirstChild()).unionWith(
-                   inferConcreteType(scope, expr.getLastChild()));
+                   var_1072);
         break;
 
       case Token.HOOK:
         ret = inferConcreteType(scope,
                    expr.getFirstChild().getNext()).unionWith(
-                       inferConcreteType(scope, expr.getLastChild()));
+                       var_1072);
         break;
 
       case Token.GETPROP:

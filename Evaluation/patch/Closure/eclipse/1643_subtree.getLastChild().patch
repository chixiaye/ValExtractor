diff --git a/src/com/google/javascript/jscomp/ReorderConstantExpression.java b/src/com/google/javascript/jscomp/ReorderConstantExpression.java
index 394e390..0394746 100644
--- a/src/com/google/javascript/jscomp/ReorderConstantExpression.java
+++ b/src/com/google/javascript/jscomp/ReorderConstantExpression.java
@@ -35,7 +35,8 @@
     if (NodeUtil.isSymmetricOperation(subtree)
         || NodeUtil.isRelationalOperation(subtree)) {
       // right value is immutable and left is not
-      if (NodeUtil.isImmutableValue(subtree.getLastChild())
+      Node var_1643 = subtree.getLastChild();
+	if (NodeUtil.isImmutableValue(var_1643)
           && !NodeUtil.isImmutableValue(subtree.getFirstChild())) {
 
         // if relational, get the inverse operator.
@@ -46,7 +47,7 @@
 
         // swap them
         Node firstNode = subtree.getFirstChild().detachFromParent();
-        Node lastNode = subtree.getLastChild().detachFromParent();
+        Node lastNode = var_1643.detachFromParent();
 
         subtree.addChildrenToFront(lastNode);
         subtree.addChildrenToBack(firstNode);

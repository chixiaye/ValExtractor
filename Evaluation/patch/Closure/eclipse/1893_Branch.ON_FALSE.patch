diff --git a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
index 980deff..6cd38c2 100644
--- a/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
+++ b/src/com/google/javascript/jscomp/ControlFlowAnalysis.java
@@ -393,7 +393,8 @@
   }
 
   private void handleFor(Node forNode) {
-    if (forNode.getChildCount() == 4) {
+    Branch var_1893 = Branch.ON_FALSE;
+	if (forNode.getChildCount() == 4) {
       // We have for (init; cond; iter) { body }
       Node init = forNode.getFirstChild();
       Node cond = init.getNext();
@@ -405,7 +406,7 @@
       // The edge that transfer control to the beginning of the loop body.
       createEdge(forNode, Branch.ON_TRUE, computeFallThrough(body));
       // The edge to end of the loop.
-      createEdge(forNode, Branch.ON_FALSE,
+      createEdge(forNode, var_1893,
           computeFollowNode(forNode, this));
       // The end of the body will have a unconditional branch to our iter
       // (handled by calling computeFollowNode of the last instruction of the
@@ -425,7 +426,7 @@
       // The edge that transfer control to the beginning of the loop body.
       createEdge(forNode, Branch.ON_TRUE, computeFallThrough(body));
       // The edge to end of the loop.
-      createEdge(forNode, Branch.ON_FALSE,
+      createEdge(forNode, var_1893,
           computeFollowNode(forNode, this));
       connectToPossibleExceptionHandler(forNode, collection);
     }

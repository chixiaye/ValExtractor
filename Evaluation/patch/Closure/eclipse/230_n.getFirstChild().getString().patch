diff --git a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
index 3743287..1a19045 100644
--- a/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
+++ b/src/com/google/javascript/jscomp/MakeDeclaredNamesUnique.java
@@ -105,7 +105,8 @@
   @Override
   public boolean shouldTraverse(NodeTraversal t, Node n, Node parent) {
 
-    switch (n.getType()) {
+    String var_230 = n.getFirstChild().getString();
+	switch (n.getType()) {
       case Token.FUNCTION:
         {
           // Add recursive function name, if needed.
@@ -113,7 +114,7 @@
           Renamer renamer = nameStack.peek().forChildScope();
 
           // If needed, add the function recursive name.
-          String name = n.getFirstChild().getString();
+          String name = var_230;
           if (name != null && !name.isEmpty() && parent != null
               && !NodeUtil.isFunctionDeclaration(n)) {
             renamer.addDeclaredName(name);
@@ -144,7 +145,7 @@
         {
           Renamer renamer = nameStack.peek().forChildScope();
 
-          String name = n.getFirstChild().getString();
+          String name = var_230;
           renamer.addDeclaredName(name);
 
           nameStack.push(renamer);

diff --git a/src/com/google/javascript/jscomp/NodeUtil.java b/src/com/google/javascript/jscomp/NodeUtil.java
index e36d1fe..375e5da 100644
--- a/src/com/google/javascript/jscomp/NodeUtil.java
+++ b/src/com/google/javascript/jscomp/NodeUtil.java
@@ -73,28 +73,29 @@
    * for expressions with side-effects.
    */
   static TernaryValue getImpureBooleanValue(Node n) {
-    switch (n.getType()) {
+    TernaryValue var_2032 = getImpureBooleanValue(n.getLastChild());
+	switch (n.getType()) {
       case Token.ASSIGN:
       case Token.COMMA:
         // For ASSIGN and COMMA the value is the value of the RHS.
-        return getImpureBooleanValue(n.getLastChild());
+        return var_2032;
       case Token.NOT:
-        TernaryValue value = getImpureBooleanValue(n.getLastChild());
+        TernaryValue value = var_2032;
         return value.not();
       case Token.AND: {
         TernaryValue lhs = getImpureBooleanValue(n.getFirstChild());
-        TernaryValue rhs = getImpureBooleanValue(n.getLastChild());
+        TernaryValue rhs = var_2032;
         return lhs.and(rhs);
       }
       case Token.OR:  {
         TernaryValue lhs = getImpureBooleanValue(n.getFirstChild());
-        TernaryValue rhs = getImpureBooleanValue(n.getLastChild());
+        TernaryValue rhs = var_2032;
         return lhs.or(rhs);
       }
       case Token.HOOK:  {
         TernaryValue trueValue = getImpureBooleanValue(
             n.getFirstChild().getNext());
-        TernaryValue falseValue = getImpureBooleanValue(n.getLastChild());
+        TernaryValue falseValue = var_2032;
         if (trueValue.equals(falseValue)) {
           return trueValue;
         } else {

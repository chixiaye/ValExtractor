diff --git a/src/com/google/javascript/jscomp/regex/CharRanges.java b/src/com/google/javascript/jscomp/regex/CharRanges.java
index 0736d68..ae8ec3b 100644
--- a/src/com/google/javascript/jscomp/regex/CharRanges.java
+++ b/src/com/google/javascript/jscomp/regex/CharRanges.java
@@ -346,13 +346,14 @@
       if (superIdx == superLen) {
         return false;
       }
-      if (superRanges[superIdx + 1] <= subRanges[subIdx]) {
+      int var_2405 = superRanges[superIdx + 1];
+	if (var_2405 <= subRanges[subIdx]) {
         // Super range ends before subRange starts.
         superIdx += 2;
       } else if (superRanges[superIdx] > subRanges[subIdx]) {
         // Uncontained portion at start of sub range.
         return false;
-      } else if (superRanges[superIdx + 1] >= subRanges[subIdx + 1]) {
+      } else if (var_2405 >= subRanges[subIdx + 1]) {
         // A sub range is completely contained in the super range.
         // We know this because of the above condition and we have already
         // ruled out that subRanges[subIdx] < superRanges[superIdx].

diff --git a/src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java b/src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java
index decfc10..0044c43 100644
--- a/src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java
+++ b/src/com/google/javascript/jscomp/PeepholeCollectPropertyAssignments.java
@@ -201,7 +201,8 @@
     if (maxIndexAssigned + 4 < index) {
       return false;
     }
-    if (index > maxIndexAssigned) {
+    Node var_267 = rhs.detachFromParent();
+	if (index > maxIndexAssigned) {
       while (maxIndexAssigned < index - 1) {
         // Pad the array if it is sparse.
         // So if array is [0] and integer 3 is assigned at index is 2, then
@@ -210,7 +211,7 @@
         arrayLiteral.addChildToBack(emptyNode);
         ++maxIndexAssigned;
       }
-      arrayLiteral.addChildToBack(rhs.detachFromParent());
+      arrayLiteral.addChildToBack(var_267);
     } else {
       // An out of order assignment.  Allow it if it's a hole.
       Node currentValue = arrayLiteral.getChildAtIndex(index);
@@ -218,7 +219,7 @@
         // We've already collected a value for this index.
         return false;
       }
-      arrayLiteral.replaceChild(currentValue, rhs.detachFromParent());
+      arrayLiteral.replaceChild(currentValue, var_267);
     }
 
     propertyCandidate.detachFromParent();

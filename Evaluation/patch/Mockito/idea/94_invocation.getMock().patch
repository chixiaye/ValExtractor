diff --git a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
index 11304af..a2bc323 100644
--- a/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
+++ b/src/org/mockito/internal/stubbing/defaultanswers/ReturnsEmptyValues.java
@@ -60,8 +60,9 @@
      * @see org.mockito.stubbing.Answer#answer(org.mockito.invocation.InvocationOnMock)
      */
     public Object answer(InvocationOnMock invocation) {
+        Object mock1 = invocation.getMock();
         if (methodsGuru.isToString(invocation.getMethod())) {
-            Object mock = invocation.getMock();
+            Object mock = mock1;
             MockName name = mockUtil.getMockName(mock);
             if (name.isDefault()) {
                 return "Mock for " + mockUtil.getMockSettings(mock).getTypeToMock().getSimpleName() + ", hashCode: " + mock.hashCode();
@@ -72,7 +73,7 @@
             //see issue 184.
             //mocks by default should return 0 if references are the same, otherwise some other value because they are not the same. Hence we return 1 (anything but 0 is good).
             //Only for compareTo() method by the Comparable interface
-            return invocation.getMock() == invocation.getArguments()[0] ? 0 : 1;
+            return mock1 == invocation.getArguments()[0] ? 0 : 1;
         }
         
         Class<?> returnType = invocation.getMethod().getReturnType();

==> /tmp/ours.java <==

==> /tmp/eclipse.java <==
diff --git a/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java b/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
index 76704f9..a53cd60 100644
--- a/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
+++ b/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
@@ -252,8 +252,9 @@
         EqualsBuilder equalsBuilder = new EqualsBuilder();
         try {
             reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);
-            while (testClass.getSuperclass() != null && testClass != reflectUpToClass) {
-                testClass = testClass.getSuperclass();
+            Class var_66 = testClass.getSuperclass();
+			while (var_66 != null && testClass != reflectUpToClass) {
+                testClass = var_66;
                 reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);
             }
         } catch (IllegalArgumentException e) {

==> /tmp/idea.java <==
diff --git a/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java b/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
index 76704f9..db3dd27 100644
--- a/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
+++ b/src/org/mockito/internal/matchers/apachecommons/EqualsBuilder.java
@@ -252,8 +252,10 @@
         EqualsBuilder equalsBuilder = new EqualsBuilder();
         try {
             reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);
-            while (testClass.getSuperclass() != null && testClass != reflectUpToClass) {
-                testClass = testClass.getSuperclass();
+            while (true) {
+                Class superclass = testClass.getSuperclass();
+                if (!(superclass != null && testClass != reflectUpToClass)) break;
+                testClass = superclass;
                 reflectionAppend(lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields);
             }
         } catch (IllegalArgumentException e) {

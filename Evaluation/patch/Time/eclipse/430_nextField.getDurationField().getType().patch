diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..7676ec0 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -20,6 +20,7 @@
 import org.joda.time.DateTimeField;
 import org.joda.time.DateTimeFieldType;
 import org.joda.time.DurationField;
+import org.joda.time.DurationFieldType;
 import org.joda.time.IllegalFieldValueException;
 import org.joda.time.ReadablePartial;
 
@@ -303,7 +304,8 @@
         // adding/removing one from the larger field at a time
         DateTimeField nextField = null;
         
-        while (valueToAdd > 0) {
+        DurationFieldType var_430 = nextField.getDurationField().getType();
+		while (valueToAdd > 0) {
             int max = getMaximumValue(instant, values);
             long proposed = values[fieldIndex] + valueToAdd;
             if (proposed <= max) {
@@ -316,7 +318,7 @@
                 }
                 nextField = instant.getField(fieldIndex - 1);
                 // test only works if this field is UTC (ie. local)
-                if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
+                if (getRangeDurationField().getType() != var_430) {
                     throw new IllegalArgumentException("Fields invalid for add");
                 }
             }
@@ -336,7 +338,7 @@
                     throw new IllegalArgumentException("Maximum value exceeded for add");
                 }
                 nextField = instant.getField(fieldIndex - 1);
-                if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
+                if (getRangeDurationField().getType() != var_430) {
                     throw new IllegalArgumentException("Fields invalid for add");
                 }
             }

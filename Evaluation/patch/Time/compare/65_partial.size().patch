==> /tmp/ours.java <==
diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java
index 6ff2771..53d321f 100644
--- a/src/main/java/org/joda/time/Partial.java
+++ b/src/main/java/org/joda/time/Partial.java
@@ -271,8 +271,9 @@
             throw new IllegalArgumentException("The partial must not be null");
         }
         iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();
-        iTypes = new DateTimeFieldType[partial.size()];
-        iValues = new int[partial.size()];
+        int var_65 = partial.size();
+		iTypes = new DateTimeFieldType[var_65];
+        iValues = new int[var_65];
         for (int i = 0; i < partial.size(); i++) {
             iTypes[i] = partial.getFieldType(i);
             iValues[i] = partial.getValue(i);

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java
index 6ff2771..c524cd9 100644
--- a/src/main/java/org/joda/time/Partial.java
+++ b/src/main/java/org/joda/time/Partial.java
@@ -271,9 +271,10 @@
             throw new IllegalArgumentException("The partial must not be null");
         }
         iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();
-        iTypes = new DateTimeFieldType[partial.size()];
-        iValues = new int[partial.size()];
-        for (int i = 0; i < partial.size(); i++) {
+        int var_65 = partial.size();
+		iTypes = new DateTimeFieldType[var_65];
+        iValues = new int[var_65];
+        for (int i = 0; i < var_65; i++) {
             iTypes[i] = partial.getFieldType(i);
             iValues[i] = partial.getValue(i);
         }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/joda/time/Partial.java b/src/main/java/org/joda/time/Partial.java
index 6ff2771..547b04a 100644
--- a/src/main/java/org/joda/time/Partial.java
+++ b/src/main/java/org/joda/time/Partial.java
@@ -271,9 +271,10 @@
             throw new IllegalArgumentException("The partial must not be null");
         }
         iChronology = DateTimeUtils.getChronology(partial.getChronology()).withUTC();
-        iTypes = new DateTimeFieldType[partial.size()];
-        iValues = new int[partial.size()];
-        for (int i = 0; i < partial.size(); i++) {
+        int size = partial.size();
+        iTypes = new DateTimeFieldType[size];
+        iValues = new int[size];
+        for (int i = 0; i < size; i++) {
             iTypes[i] = partial.getFieldType(i);
             iValues[i] = partial.getValue(i);
         }

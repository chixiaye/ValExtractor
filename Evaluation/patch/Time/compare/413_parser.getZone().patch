==> /tmp/ours.java <==
diff --git a/src/main/java/org/joda/time/convert/StringConverter.java b/src/main/java/org/joda/time/convert/StringConverter.java
index ea4553e..efc20c8 100644
--- a/src/main/java/org/joda/time/convert/StringConverter.java
+++ b/src/main/java/org/joda/time/convert/StringConverter.java
@@ -17,6 +17,7 @@
 
 import org.joda.time.Chronology;
 import org.joda.time.DateTime;
+import org.joda.time.DateTimeZone;
 import org.joda.time.Period;
 import org.joda.time.ReadWritableInterval;
 import org.joda.time.ReadWritablePeriod;
@@ -81,8 +82,9 @@
      * @since 1.3
      */
     public int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono, DateTimeFormatter parser) {
-        if (parser.getZone() != null) {
-            chrono = chrono.withZone(parser.getZone());
+        DateTimeZone var_413 = parser.getZone();
+		if (var_413 != null) {
+            chrono = chrono.withZone(var_413);
         }
         long millis = parser.withChronology(chrono).parseMillis((String) object);
         return chrono.get(fieldSource, millis);

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/joda/time/convert/StringConverter.java b/src/main/java/org/joda/time/convert/StringConverter.java
index ea4553e..efc20c8 100644
--- a/src/main/java/org/joda/time/convert/StringConverter.java
+++ b/src/main/java/org/joda/time/convert/StringConverter.java
@@ -17,6 +17,7 @@
 
 import org.joda.time.Chronology;
 import org.joda.time.DateTime;
+import org.joda.time.DateTimeZone;
 import org.joda.time.Period;
 import org.joda.time.ReadWritableInterval;
 import org.joda.time.ReadWritablePeriod;
@@ -81,8 +82,9 @@
      * @since 1.3
      */
     public int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono, DateTimeFormatter parser) {
-        if (parser.getZone() != null) {
-            chrono = chrono.withZone(parser.getZone());
+        DateTimeZone var_413 = parser.getZone();
+		if (var_413 != null) {
+            chrono = chrono.withZone(var_413);
         }
         long millis = parser.withChronology(chrono).parseMillis((String) object);
         return chrono.get(fieldSource, millis);

==> /tmp/idea.java <==
diff --git a/src/main/java/org/joda/time/convert/StringConverter.java b/src/main/java/org/joda/time/convert/StringConverter.java
index ea4553e..833d820 100644
--- a/src/main/java/org/joda/time/convert/StringConverter.java
+++ b/src/main/java/org/joda/time/convert/StringConverter.java
@@ -15,12 +15,7 @@
  */
 package org.joda.time.convert;
 
-import org.joda.time.Chronology;
-import org.joda.time.DateTime;
-import org.joda.time.Period;
-import org.joda.time.ReadWritableInterval;
-import org.joda.time.ReadWritablePeriod;
-import org.joda.time.ReadablePartial;
+import org.joda.time.*;
 import org.joda.time.field.FieldUtils;
 import org.joda.time.format.DateTimeFormatter;
 import org.joda.time.format.ISODateTimeFormat;
@@ -81,8 +76,9 @@
      * @since 1.3
      */
     public int[] getPartialValues(ReadablePartial fieldSource, Object object, Chronology chrono, DateTimeFormatter parser) {
-        if (parser.getZone() != null) {
-            chrono = chrono.withZone(parser.getZone());
+        DateTimeZone zone = parser.getZone();
+        if (zone != null) {
+            chrono = chrono.withZone(zone);
         }
         long millis = parser.withChronology(chrono).parseMillis((String) object);
         return chrono.get(fieldSource, millis);

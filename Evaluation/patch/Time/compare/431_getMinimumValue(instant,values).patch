==> /tmp/ours.java <==
diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..5c38dea 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -322,7 +322,8 @@
             }
             valueToAdd -= (max + 1) - values[fieldIndex];  // reduce the amount to add
             values = nextField.add(instant, fieldIndex - 1, values, 1);  // add 1 to next bigger field
-            values[fieldIndex] = getMinimumValue(instant, values);  // reset this field to zero
+            int var_431 = getMinimumValue(instant, values);
+			values[fieldIndex] = var_431;  // reset this field to zero
         }
         while (valueToAdd < 0) {
             int min = getMinimumValue(instant, values);

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..9524fd3 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -303,6 +303,7 @@
         // adding/removing one from the larger field at a time
         DateTimeField nextField = null;
         
+        int var_431 = getMinimumValue(instant, values);
         while (valueToAdd > 0) {
             int max = getMaximumValue(instant, values);
             long proposed = values[fieldIndex] + valueToAdd;
@@ -322,10 +323,10 @@
             }
             valueToAdd -= (max + 1) - values[fieldIndex];  // reduce the amount to add
             values = nextField.add(instant, fieldIndex - 1, values, 1);  // add 1 to next bigger field
-            values[fieldIndex] = getMinimumValue(instant, values);  // reset this field to zero
+            values[fieldIndex] = var_431;  // reset this field to zero
         }
         while (valueToAdd < 0) {
-            int min = getMinimumValue(instant, values);
+            int min = var_431;
             long proposed = values[fieldIndex] + valueToAdd;
             if (proposed >= min) {
                 values[fieldIndex] = (int) proposed;

==> /tmp/idea.java <==
diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..f663972 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -303,6 +303,7 @@
         // adding/removing one from the larger field at a time
         DateTimeField nextField = null;
         
+        int minimumValue = getMinimumValue(instant, values);
         while (valueToAdd > 0) {
             int max = getMaximumValue(instant, values);
             long proposed = values[fieldIndex] + valueToAdd;
@@ -322,10 +323,10 @@
             }
             valueToAdd -= (max + 1) - values[fieldIndex];  // reduce the amount to add
             values = nextField.add(instant, fieldIndex - 1, values, 1);  // add 1 to next bigger field
-            values[fieldIndex] = getMinimumValue(instant, values);  // reset this field to zero
+            values[fieldIndex] = minimumValue;  // reset this field to zero
         }
         while (valueToAdd < 0) {
-            int min = getMinimumValue(instant, values);
+            int min = minimumValue;
             long proposed = values[fieldIndex] + valueToAdd;
             if (proposed >= min) {
                 values[fieldIndex] = (int) proposed;

==> /tmp/ours.java <==
diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..fdbfd38 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -314,7 +314,8 @@
                 if (fieldIndex == 0) {
                     throw new IllegalArgumentException("Maximum value exceeded for add");
                 }
-                nextField = instant.getField(fieldIndex - 1);
+                DateTimeField var_427 = instant.getField(fieldIndex - 1);
+				nextField = var_427;
                 // test only works if this field is UTC (ie. local)
                 if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
                     throw new IllegalArgumentException("Fields invalid for add");

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..293a99c 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -303,6 +303,7 @@
         // adding/removing one from the larger field at a time
         DateTimeField nextField = null;
         
+        DateTimeField var_427 = instant.getField(fieldIndex - 1);
         while (valueToAdd > 0) {
             int max = getMaximumValue(instant, values);
             long proposed = values[fieldIndex] + valueToAdd;
@@ -314,7 +315,7 @@
                 if (fieldIndex == 0) {
                     throw new IllegalArgumentException("Maximum value exceeded for add");
                 }
-                nextField = instant.getField(fieldIndex - 1);
+                nextField = var_427;
                 // test only works if this field is UTC (ie. local)
                 if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
                     throw new IllegalArgumentException("Fields invalid for add");
@@ -335,7 +336,7 @@
                 if (fieldIndex == 0) {
                     throw new IllegalArgumentException("Maximum value exceeded for add");
                 }
-                nextField = instant.getField(fieldIndex - 1);
+                nextField = var_427;
                 if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
                     throw new IllegalArgumentException("Fields invalid for add");
                 }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/joda/time/field/BaseDateTimeField.java b/src/main/java/org/joda/time/field/BaseDateTimeField.java
index c86bf1c..e7a532c 100644
--- a/src/main/java/org/joda/time/field/BaseDateTimeField.java
+++ b/src/main/java/org/joda/time/field/BaseDateTimeField.java
@@ -303,6 +303,7 @@
         // adding/removing one from the larger field at a time
         DateTimeField nextField = null;
         
+        DateTimeField field = instant.getField(fieldIndex - 1);
         while (valueToAdd > 0) {
             int max = getMaximumValue(instant, values);
             long proposed = values[fieldIndex] + valueToAdd;
@@ -314,7 +315,7 @@
                 if (fieldIndex == 0) {
                     throw new IllegalArgumentException("Maximum value exceeded for add");
                 }
-                nextField = instant.getField(fieldIndex - 1);
+                nextField = field;
                 // test only works if this field is UTC (ie. local)
                 if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
                     throw new IllegalArgumentException("Fields invalid for add");
@@ -335,7 +336,7 @@
                 if (fieldIndex == 0) {
                     throw new IllegalArgumentException("Maximum value exceeded for add");
                 }
-                nextField = instant.getField(fieldIndex - 1);
+                nextField = field;
                 if (getRangeDurationField().getType() != nextField.getDurationField().getType()) {
                     throw new IllegalArgumentException("Fields invalid for add");
                 }

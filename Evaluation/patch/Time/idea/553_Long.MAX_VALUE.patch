diff --git a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
index c3dd8cc..e1e9e0d 100644
--- a/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
+++ b/src/main/java/org/joda/time/format/PeriodFormatterBuilder.java
@@ -1388,15 +1388,16 @@
             } else {
                 type = period.getPeriodType();
             }
+            long maxValue = Long.MAX_VALUE;
             if (type != null && isSupported(type, iFieldType) == false) {
-                return Long.MAX_VALUE;
+                return maxValue;
             }
 
             long value;
 
             switch (iFieldType) {
             default:
-                return Long.MAX_VALUE;
+                return maxValue;
             case YEARS:
                 value = period.get(DurationFieldType.years());
                 break;
@@ -1433,16 +1434,16 @@
             if (value == 0) {
                 switch (iPrintZeroSetting) {
                 case PRINT_ZERO_NEVER:
-                    return Long.MAX_VALUE;
+                    return maxValue;
                 case PRINT_ZERO_RARELY_LAST:
                     if (isZero(period) && iFieldFormatters[iFieldType] == this) {
                         for (int i = iFieldType + 1; i <= MAX_FIELD; i++) {
                             if (isSupported(type, i) && iFieldFormatters[i] != null) {
-                                return Long.MAX_VALUE;
+                                return maxValue;
                             }
                         }
                     } else {
-                        return Long.MAX_VALUE;
+                        return maxValue;
                     }
                     break;
                 case PRINT_ZERO_RARELY_FIRST:
@@ -1451,11 +1452,11 @@
                         i--;                              // see bug 1660490
                         for (; i >= 0 && i <= MAX_FIELD; i--) {
                             if (isSupported(type, i) && iFieldFormatters[i] != null) {
-                                return Long.MAX_VALUE;
+                                return maxValue;
                             }
                         }
                     } else {
-                        return Long.MAX_VALUE;
+                        return maxValue;
                     }
                     break;
                 }

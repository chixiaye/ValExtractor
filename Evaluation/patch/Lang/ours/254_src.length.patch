diff --git a/src/main/java/org/apache/commons/lang3/Conversion.java b/src/main/java/org/apache/commons/lang3/Conversion.java
index 91131ad..b14baf3 100644
--- a/src/main/java/org/apache/commons/lang3/Conversion.java
+++ b/src/main/java/org/apache/commons/lang3/Conversion.java
@@ -298,12 +298,13 @@
      * @throws NullPointerException if {@code src} is {@code null}
      */
     public static char binaryToHexDigit(final boolean[] src, final int srcPos) {
-        if (src.length == 0) {
+        int var_254 = src.length;
+		if (var_254 == 0) {
             throw new IllegalArgumentException("Cannot convert an empty array.");
         }
-        if (src.length > srcPos + 3 && src[srcPos + 3]) {
-            if (src.length > srcPos + 2 && src[srcPos + 2]) {
-                if (src.length > srcPos + 1 && src[srcPos + 1]) {
+        if (var_254 > srcPos + 3 && src[srcPos + 3]) {
+            if (var_254 > srcPos + 2 && src[srcPos + 2]) {
+                if (var_254 > srcPos + 1 && src[srcPos + 1]) {
                     if (src[srcPos]) {
                         return 'f';
                     } else {
@@ -317,7 +318,7 @@
                     }
                 }
             } else {
-                if (src.length > srcPos + 1 && src[srcPos + 1]) {
+                if (var_254 > srcPos + 1 && src[srcPos + 1]) {
                     if (src[srcPos]) {
                         return 'b';
                     } else {
@@ -332,8 +333,8 @@
                 }
             }
         } else {
-            if (src.length > srcPos + 2 && src[srcPos + 2]) {
-                if (src.length > srcPos + 1 && src[srcPos + 1]) {
+            if (var_254 > srcPos + 2 && src[srcPos + 2]) {
+                if (var_254 > srcPos + 1 && src[srcPos + 1]) {
                     if (src[srcPos]) {
                         return '7';
                     } else {
@@ -347,7 +348,7 @@
                     }
                 }
             } else {
-                if (src.length > srcPos + 1 && src[srcPos + 1]) {
+                if (var_254 > srcPos + 1 && src[srcPos + 1]) {
                     if (src[srcPos]) {
                         return '3';
                     } else {

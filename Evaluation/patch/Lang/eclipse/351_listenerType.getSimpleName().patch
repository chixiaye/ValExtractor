diff --git a/src/main/java/org/apache/commons/lang3/event/EventUtils.java b/src/main/java/org/apache/commons/lang3/event/EventUtils.java
index cf07adc..5505d38 100644
--- a/src/main/java/org/apache/commons/lang3/event/EventUtils.java
+++ b/src/main/java/org/apache/commons/lang3/event/EventUtils.java
@@ -46,15 +46,16 @@
      * @throws IllegalArgumentException if the object doesn't support the listener type
      */
     public static <L> void addEventListener(final Object eventSource, final Class<L> listenerType, final L listener) {
-        try {
-            MethodUtils.invokeMethod(eventSource, "add" + listenerType.getSimpleName(), listener);
+        String var_351 = listenerType.getSimpleName();
+		try {
+            MethodUtils.invokeMethod(eventSource, "add" + var_351, listener);
         } catch (final NoSuchMethodException e) {
             throw new IllegalArgumentException("Class " + eventSource.getClass().getName()
-                    + " does not have a public add" + listenerType.getSimpleName()
+                    + " does not have a public add" + var_351
                     + " method which takes a parameter of type " + listenerType.getName() + ".");
         } catch (final IllegalAccessException e) {
             throw new IllegalArgumentException("Class " + eventSource.getClass().getName()
-                    + " does not have an accessible add" + listenerType.getSimpleName ()
+                    + " does not have an accessible add" + var_351
                     + " method which takes a parameter of type " + listenerType.getName() + ".");
         } catch (final InvocationTargetException e) {
             throw new RuntimeException("Unable to add listener.", e.getCause());

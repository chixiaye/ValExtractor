diff --git a/src/main/java/org/apache/commons/lang3/Conversion.java b/src/main/java/org/apache/commons/lang3/Conversion.java
index 91131ad..f6d0185 100644
--- a/src/main/java/org/apache/commons/lang3/Conversion.java
+++ b/src/main/java/org/apache/commons/lang3/Conversion.java
@@ -509,39 +509,40 @@
      * @throws NullPointerException if {@code src} is {@code null}
      */
     public static char binaryBeMsb0ToHexDigit(boolean[] src, int srcPos) {
-        if (src.length == 0) {
+        int var_261 = src.length;
+		if (var_261 == 0) {
             throw new IllegalArgumentException("Cannot convert an empty array.");
         }
-        final int beSrcPos = src.length - 1 - srcPos;
+        final int beSrcPos = var_261 - 1 - srcPos;
         final int srcLen = Math.min(4, beSrcPos + 1);
         final boolean[] paddedSrc = new boolean[4];
         System.arraycopy(src, beSrcPos + 1 - srcLen, paddedSrc, 4 - srcLen, srcLen);
         src = paddedSrc;
         srcPos = 0;
         if (src[srcPos]) {
-            if (src.length > srcPos + 1 && src[srcPos + 1]) {
-                if (src.length > srcPos + 2 && src[srcPos + 2]) {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+            if (var_261 > srcPos + 1 && src[srcPos + 1]) {
+                if (var_261 > srcPos + 2 && src[srcPos + 2]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return 'f';
                     } else {
                         return 'e';
                     }
                 } else {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return 'd';
                     } else {
                         return 'c';
                     }
                 }
             } else {
-                if (src.length > srcPos + 2 && src[srcPos + 2]) {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+                if (var_261 > srcPos + 2 && src[srcPos + 2]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return 'b';
                     } else {
                         return 'a';
                     }
                 } else {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return '9';
                     } else {
                         return '8';
@@ -549,29 +550,29 @@
                 }
             }
         } else {
-            if (src.length > srcPos + 1 && src[srcPos + 1]) {
-                if (src.length > srcPos + 2 && src[srcPos + 2]) {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+            if (var_261 > srcPos + 1 && src[srcPos + 1]) {
+                if (var_261 > srcPos + 2 && src[srcPos + 2]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return '7';
                     } else {
                         return '6';
                     }
                 } else {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return '5';
                     } else {
                         return '4';
                     }
                 }
             } else {
-                if (src.length > srcPos + 2 && src[srcPos + 2]) {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+                if (var_261 > srcPos + 2 && src[srcPos + 2]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return '3';
                     } else {
                         return '2';
                     }
                 } else {
-                    if (src.length > srcPos + 3 && src[srcPos + 3]) {
+                    if (var_261 > srcPos + 3 && src[srcPos + 3]) {
                         return '1';
                     } else {
                         return '0';

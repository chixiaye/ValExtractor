diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..f514ce8 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -935,25 +935,28 @@
                 toProperString = "1";
             } else if (numerator == -1 * denominator) {
                 toProperString = "-1";
-            } else if ((numerator>0?-numerator:numerator) < -denominator) {
-                // note that we do the magnitude comparison test above with
-                // NEGATIVE (not positive) numbers, since negative numbers
-                // have a larger range.  otherwise numerator==Integer.MIN_VALUE
-                // is handled incorrectly.
-                final int properNumerator = getProperNumerator();
-                if (properNumerator == 0) {
-                    toProperString = Integer.toString(getProperWhole());
-                } else {
-                    toProperString = new StringBuilder(32)
-                        .append(getProperWhole()).append(' ')
-                        .append(properNumerator).append('/')
-                        .append(getDenominator()).toString();
-                }
             } else {
-                toProperString = new StringBuilder(32)
-                    .append(getNumerator()).append('/')
-                    .append(getDenominator()).toString();
-            }
+				int var_404 = getDenominator();
+				if ((numerator>0?-numerator:numerator) < -denominator) {
+				    // note that we do the magnitude comparison test above with
+				    // NEGATIVE (not positive) numbers, since negative numbers
+				    // have a larger range.  otherwise numerator==Integer.MIN_VALUE
+				    // is handled incorrectly.
+				    final int properNumerator = getProperNumerator();
+				    if (properNumerator == 0) {
+				        toProperString = Integer.toString(getProperWhole());
+				    } else {
+				        toProperString = new StringBuilder(32)
+				            .append(getProperWhole()).append(' ')
+				            .append(properNumerator).append('/')
+				            .append(var_404).toString();
+				    }
+				} else {
+				    toProperString = new StringBuilder(32)
+				        .append(getNumerator()).append('/')
+				        .append(var_404).toString();
+				}
+			}
         }
         return toProperString;
     }

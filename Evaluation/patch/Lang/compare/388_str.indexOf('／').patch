==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..fb8eddc 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -331,7 +331,8 @@
         if (pos > 0) {
             final int whole = Integer.parseInt(str.substring(0, pos));
             str = str.substring(pos + 1);
-            pos = str.indexOf('/');
+            int var_388 = str.indexOf('/');
+			pos = var_388;
             if (pos < 0) {
                 throw new NumberFormatException("The fraction could not be parsed as the format X Y/Z");
             } else {

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..f3ea1da 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -328,10 +328,11 @@
 
         // parse X Y/Z format
         pos = str.indexOf(' ');
+        int var_388 = str.indexOf('/');
         if (pos > 0) {
             final int whole = Integer.parseInt(str.substring(0, pos));
             str = str.substring(pos + 1);
-            pos = str.indexOf('/');
+            pos = var_388;
             if (pos < 0) {
                 throw new NumberFormatException("The fraction could not be parsed as the format X Y/Z");
             } else {
@@ -342,7 +343,7 @@
         }
 
         // parse Y/Z format
-        pos = str.indexOf('/');
+        pos = var_388;
         if (pos < 0) {
             // simple whole number
             return getFraction(Integer.parseInt(str), 1);

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..cc4e2d8 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -328,10 +328,11 @@
 
         // parse X Y/Z format
         pos = str.indexOf(' ');
+        int pos1 = str.indexOf('/');
         if (pos > 0) {
             final int whole = Integer.parseInt(str.substring(0, pos));
             str = str.substring(pos + 1);
-            pos = str.indexOf('/');
+            pos = pos1;
             if (pos < 0) {
                 throw new NumberFormatException("The fraction could not be parsed as the format X Y/Z");
             } else {
@@ -342,7 +343,7 @@
         }
 
         // parse Y/Z format
-        pos = str.indexOf('/');
+        pos = pos1;
         if (pos < 0) {
             // simple whole number
             return getFraction(Integer.parseInt(str), 1);

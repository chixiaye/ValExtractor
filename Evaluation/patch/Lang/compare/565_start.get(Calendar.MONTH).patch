==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 09e636b..18882bd 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -343,8 +343,9 @@
                     days += start.getActualMaximum(Calendar.DAY_OF_YEAR) - start.get(Calendar.DAY_OF_YEAR);
                     
                     // Not sure I grok why this is needed, but the brutal tests show it is
+                    int var_565 = start.get(Calendar.MONTH);
                     if (start instanceof GregorianCalendar &&
-                            start.get(Calendar.MONTH) == Calendar.FEBRUARY &&
+                            var_565 == Calendar.FEBRUARY &&
                             start.get(Calendar.DAY_OF_MONTH) == 29) {
                         days += 1;
                     }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 09e636b..a867e73 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -290,7 +290,8 @@
         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
+        int var_565 = start.get(Calendar.MONTH);
+		int months = end.get(Calendar.MONTH) - var_565;
         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
         // each initial estimate is adjusted in case it is under 0
@@ -344,7 +345,7 @@
                     
                     // Not sure I grok why this is needed, but the brutal tests show it is
                     if (start instanceof GregorianCalendar &&
-                            start.get(Calendar.MONTH) == Calendar.FEBRUARY &&
+                            var_565 == Calendar.FEBRUARY &&
                             start.get(Calendar.DAY_OF_MONTH) == 29) {
                         days += 1;
                     }
@@ -357,7 +358,7 @@
                 years = 0;
             }
             
-            while( start.get(Calendar.MONTH) != end.get(Calendar.MONTH) ) {
+            while( var_565 != end.get(Calendar.MONTH) ) {
                 days += start.getActualMaximum(Calendar.DAY_OF_MONTH);
                 start.add(Calendar.MONTH, 1);
             }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 09e636b..b4559af 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -290,7 +290,8 @@
         int minutes = end.get(Calendar.MINUTE) - start.get(Calendar.MINUTE);
         int hours = end.get(Calendar.HOUR_OF_DAY) - start.get(Calendar.HOUR_OF_DAY);
         int days = end.get(Calendar.DAY_OF_MONTH) - start.get(Calendar.DAY_OF_MONTH);
-        int months = end.get(Calendar.MONTH) - start.get(Calendar.MONTH);
+        int i = start.get(Calendar.MONTH);
+        int months = end.get(Calendar.MONTH) - i;
         int years = end.get(Calendar.YEAR) - start.get(Calendar.YEAR);
 
         // each initial estimate is adjusted in case it is under 0
@@ -344,7 +345,7 @@
                     
                     // Not sure I grok why this is needed, but the brutal tests show it is
                     if (start instanceof GregorianCalendar &&
-                            start.get(Calendar.MONTH) == Calendar.FEBRUARY &&
+                            i == Calendar.FEBRUARY &&
                             start.get(Calendar.DAY_OF_MONTH) == 29) {
                         days += 1;
                     }
@@ -357,7 +358,7 @@
                 years = 0;
             }
             
-            while( start.get(Calendar.MONTH) != end.get(Calendar.MONTH) ) {
+            while( i != end.get(Calendar.MONTH) ) {
                 days += start.getActualMaximum(Calendar.DAY_OF_MONTH);
                 start.add(Calendar.MONTH, 1);
             }

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
index a0a499a..7d455a1 100644
--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java
+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
@@ -2988,8 +2988,9 @@
         } else if (array.length == 0) {
             return EMPTY_BYTE_ARRAY;
         }
-        final byte[] result = new byte[array.length];
-        for (int i = 0; i < array.length; i++) {
+        int var_186 = array.length;
+		final byte[] result = new byte[var_186];
+        for (int i = 0; i < var_186; i++) {
             final Byte b = array[i];
             result[i] = (b == null ? valueForNull : b.byteValue());
         }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
index a0a499a..97f95cc 100644
--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java
+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
@@ -2983,13 +2983,14 @@
      * @return a {@code byte} array, {@code null} if null array input
      */
     public static byte[] toPrimitive(final Byte[] array, final byte valueForNull) {
+        int var_186 = array.length;
         if (array == null) {
             return null;
-        } else if (array.length == 0) {
+        } else if (var_186 == 0) {
             return EMPTY_BYTE_ARRAY;
         }
-        final byte[] result = new byte[array.length];
-        for (int i = 0; i < array.length; i++) {
+        final byte[] result = new byte[var_186];
+        for (int i = 0; i < var_186; i++) {
             final Byte b = array[i];
             result[i] = (b == null ? valueForNull : b.byteValue());
         }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/ArrayUtils.java b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
index a0a499a..a17016a 100644
--- a/src/main/java/org/apache/commons/lang3/ArrayUtils.java
+++ b/src/main/java/org/apache/commons/lang3/ArrayUtils.java
@@ -2983,13 +2983,14 @@
      * @return a {@code byte} array, {@code null} if null array input
      */
     public static byte[] toPrimitive(final Byte[] array, final byte valueForNull) {
+        int length = array.length;
         if (array == null) {
             return null;
-        } else if (array.length == 0) {
+        } else if (length == 0) {
             return EMPTY_BYTE_ARRAY;
         }
-        final byte[] result = new byte[array.length];
-        for (int i = 0; i < array.length; i++) {
+        final byte[] result = new byte[length];
+        for (int i = 0; i < length; i++) {
             final Byte b = array[i];
             result[i] = (b == null ? valueForNull : b.byteValue());
         }

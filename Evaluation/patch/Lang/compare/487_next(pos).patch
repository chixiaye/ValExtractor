==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java b/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
index 722d3b5..aed836e 100644
--- a/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
+++ b/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
@@ -493,7 +493,7 @@
             }
             switch (c[pos.getIndex()]) {
             case QUOTE:
-                next(pos);
+                ParsePosition var_487 = next(pos);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java b/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
index 722d3b5..aed836e 100644
--- a/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
+++ b/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
@@ -493,7 +493,7 @@
             }
             switch (c[pos.getIndex()]) {
             case QUOTE:
-                next(pos);
+                ParsePosition var_487 = next(pos);
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java b/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
index 722d3b5..421e2bf 100644
--- a/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
+++ b/src/main/java/org/apache/commons/lang3/text/ExtendedMessageFormat.java
@@ -478,8 +478,9 @@
             final StringBuilder appendTo, final boolean escapingOn) {
         final int start = pos.getIndex();
         final char[] c = pattern.toCharArray();
+        ParsePosition next = next(pos);
         if (escapingOn && c[start] == QUOTE) {
-            next(pos);
+            next;
             return appendTo == null ? null : appendTo.append(QUOTE);
         }
         int lastHold = start;
@@ -493,11 +494,11 @@
             }
             switch (c[pos.getIndex()]) {
             case QUOTE:
-                next(pos);
+                next;
                 return appendTo == null ? null : appendTo.append(c, lastHold,
                         pos.getIndex() - lastHold);
             default:
-                next(pos);
+                next;
             }
         }
         throw new IllegalArgumentException(

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..e1782d5 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -336,7 +336,8 @@
                 throw new NumberFormatException("The fraction could not be parsed as the format X Y/Z");
             } else {
                 final int numer = Integer.parseInt(str.substring(0, pos));
-                final int denom = Integer.parseInt(str.substring(pos + 1));
+                int var_387 = Integer.parseInt(str.substring(pos + 1));
+				final int denom = var_387;
                 return getFraction(whole, numer, denom);
             }
         }

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..13afaf0 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -328,6 +328,7 @@
 
         // parse X Y/Z format
         pos = str.indexOf(' ');
+        int var_387 = Integer.parseInt(str.substring(pos + 1));
         if (pos > 0) {
             final int whole = Integer.parseInt(str.substring(0, pos));
             str = str.substring(pos + 1);
@@ -336,7 +337,7 @@
                 throw new NumberFormatException("The fraction could not be parsed as the format X Y/Z");
             } else {
                 final int numer = Integer.parseInt(str.substring(0, pos));
-                final int denom = Integer.parseInt(str.substring(pos + 1));
+                final int denom = var_387;
                 return getFraction(whole, numer, denom);
             }
         }
@@ -348,7 +349,7 @@
             return getFraction(Integer.parseInt(str), 1);
         } else {
             final int numer = Integer.parseInt(str.substring(0, pos));
-            final int denom = Integer.parseInt(str.substring(pos + 1));
+            final int denom = var_387;
             return getFraction(numer, denom);
         }
     }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/Fraction.java b/src/main/java/org/apache/commons/lang3/math/Fraction.java
index a722ffe..3d653e9 100644
--- a/src/main/java/org/apache/commons/lang3/math/Fraction.java
+++ b/src/main/java/org/apache/commons/lang3/math/Fraction.java
@@ -328,6 +328,7 @@
 
         // parse X Y/Z format
         pos = str.indexOf(' ');
+        int i = Integer.parseInt(str.substring(pos + 1));
         if (pos > 0) {
             final int whole = Integer.parseInt(str.substring(0, pos));
             str = str.substring(pos + 1);
@@ -336,7 +337,7 @@
                 throw new NumberFormatException("The fraction could not be parsed as the format X Y/Z");
             } else {
                 final int numer = Integer.parseInt(str.substring(0, pos));
-                final int denom = Integer.parseInt(str.substring(pos + 1));
+                final int denom = i;
                 return getFraction(whole, numer, denom);
             }
         }
@@ -348,7 +349,7 @@
             return getFraction(Integer.parseInt(str), 1);
         } else {
             final int numer = Integer.parseInt(str.substring(0, pos));
-            final int denom = Integer.parseInt(str.substring(pos + 1));
+            final int denom = i;
             return getFraction(numer, denom);
         }
     }

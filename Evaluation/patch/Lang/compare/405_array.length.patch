==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
index d85e91e..52ecbae 100644
--- a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
@@ -38,9 +38,12 @@
         // Validates input
         if (array == null) {
             throw new IllegalArgumentException("The Array must not be null");
-        } else if (array.length == 0) {
+        } else {
+			int var_405 = array.length;
+			if (var_405 == 0) {
             throw new IllegalArgumentException("Array cannot be empty.");
         }
+		}
     
         // Finds and returns min
         double min = array[0];

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
index d85e91e..2eb6984 100644
--- a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
@@ -36,15 +36,16 @@
      */
     public static double min(final double[] array) {
         // Validates input
+        int var_405 = array.length;
         if (array == null) {
             throw new IllegalArgumentException("The Array must not be null");
-        } else if (array.length == 0) {
+        } else if (var_405 == 0) {
             throw new IllegalArgumentException("Array cannot be empty.");
         }
     
         // Finds and returns min
         double min = array[0];
-        for (int i = 1; i < array.length; i++) {
+        for (int i = 1; i < var_405; i++) {
             min = min(array[i], min);
         }
     

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
index d85e91e..e4a4d9a 100644
--- a/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
+++ b/src/main/java/org/apache/commons/lang3/math/IEEE754rUtils.java
@@ -36,15 +36,16 @@
      */
     public static double min(final double[] array) {
         // Validates input
+        int length = array.length;
         if (array == null) {
             throw new IllegalArgumentException("The Array must not be null");
-        } else if (array.length == 0) {
+        } else if (length == 0) {
             throw new IllegalArgumentException("Array cannot be empty.");
         }
     
         // Finds and returns min
         double min = array[0];
-        for (int i = 1; i < array.length; i++) {
+        for (int i = 1; i < length; i++) {
             min = min(array[i], min);
         }
     

==> /tmp/ours.java <==
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 09e636b..1957d0f 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -455,8 +455,9 @@
                                 : Integer.toString(milliseconds);
                         buffer.append(str.substring(1));
                     } else {
+                        String var_570 = Integer.toString(milliseconds);
                         buffer.append(padWithZeros
-                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
+                                ? StringUtils.leftPad(var_570, count, '0')
                                 : Integer.toString(milliseconds));
                     }
                     lastOutputSeconds = false;

==> /tmp/eclipse.java <==
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 09e636b..7642756 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -448,16 +448,17 @@
                             .toString(seconds));
                     lastOutputSeconds = true;
                 } else if (value == S) {
+                    String var_570 = Integer.toString(milliseconds);
                     if (lastOutputSeconds) {
                         milliseconds += 1000;
                         final String str = padWithZeros
-                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
-                                : Integer.toString(milliseconds);
+                                ? StringUtils.leftPad(var_570, count, '0')
+                                : var_570;
                         buffer.append(str.substring(1));
                     } else {
                         buffer.append(padWithZeros
-                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
-                                : Integer.toString(milliseconds));
+                                ? StringUtils.leftPad(var_570, count, '0')
+                                : var_570);
                     }
                     lastOutputSeconds = false;
                 }

==> /tmp/idea.java <==
diff --git a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
index 09e636b..84c191d 100644
--- a/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
+++ b/src/main/java/org/apache/commons/lang3/time/DurationFormatUtils.java
@@ -448,16 +448,17 @@
                             .toString(seconds));
                     lastOutputSeconds = true;
                 } else if (value == S) {
+                    String str1 = Integer.toString(milliseconds);
                     if (lastOutputSeconds) {
                         milliseconds += 1000;
                         final String str = padWithZeros
-                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
-                                : Integer.toString(milliseconds);
+                                ? StringUtils.leftPad(str1, count, '0')
+                                : str1;
                         buffer.append(str.substring(1));
                     } else {
                         buffer.append(padWithZeros
-                                ? StringUtils.leftPad(Integer.toString(milliseconds), count, '0')
-                                : Integer.toString(milliseconds));
+                                ? StringUtils.leftPad(str1, count, '0')
+                                : str1);
                     }
                     lastOutputSeconds = false;
                 }

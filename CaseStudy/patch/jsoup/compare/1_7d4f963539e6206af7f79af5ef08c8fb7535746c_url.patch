diff --git a/Users/chixiaye/paper/CaseStudyPaper/patch/jsoup/eclipse/1_7d4f963539e6206af7f79af5ef08c8fb7535746c_url.patch b/Users/chixiaye/paper/CaseStudyPaper/patch/jsoup/ours/1_7d4f963539e6206af7f79af5ef08c8fb7535746c_url.patch
index 6fff0dae..d1de4cc7 100644
--- a/Users/chixiaye/paper/CaseStudyPaper/patch/jsoup/eclipse/1_7d4f963539e6206af7f79af5ef08c8fb7535746c_url.patch
+++ b/Users/chixiaye/paper/CaseStudyPaper/patch/jsoup/ours/1_7d4f963539e6206af7f79af5ef08c8fb7535746c_url.patch
@@ -1,5 +1,5 @@
 diff --git a/src/main/java/org/jsoup/helper/HttpConnection.java b/src/main/java/org/jsoup/helper/HttpConnection.java
-index b5cf831..0101cde 100644
+index b5cf831..32fdffe 100644
 --- a/src/main/java/org/jsoup/helper/HttpConnection.java
 +++ b/src/main/java/org/jsoup/helper/HttpConnection.java
 @@ -729,8 +729,9 @@
@@ -14,30 +14,3 @@ index b5cf831..0101cde 100644
              if (!protocol.equals("http") && !protocol.equals("https"))
                  throw new MalformedURLException("Only http & https protocols supported");
              final boolean methodHasBody = req.method().hasBody();
-@@ -770,7 +771,7 @@
-                     String location = res.header(LOCATION);
-                     if (location.startsWith("http:/") && location.charAt(6) != '/') // fix broken Location: http:/temp/AAG_New/en/index.php
-                         location = location.substring(6);
--                    URL redir = StringUtil.resolve(req.url(), location);
-+                    URL redir = StringUtil.resolve(url, location);
-                     req.url(encodeUrl(redir));
- 
-                     for (Map.Entry<String, String> cookie : res.cookies.entrySet()) { // add response cookies to request (for e.g. login posts)
-@@ -779,7 +780,7 @@
-                     return execute(req, res);
-                 }
-                 if ((status < 200 || status >= 400) && !req.ignoreHttpErrors())
--                        throw new HttpStatusException("HTTP error fetching URL", status, req.url().toString());
-+                        throw new HttpStatusException("HTTP error fetching URL", status, url.toString());
- 
-                 // check that we can handle the returned content type; if not, abort before fetching it
-                 String contentType = res.contentType();
-@@ -789,7 +790,7 @@
-                         && !xmlContentTypeRxp.matcher(contentType).matches()
-                         )
-                     throw new UnsupportedMimeTypeException("Unhandled content type. Must be text/*, application/xml, or application/*+xml",
--                            contentType, req.url().toString());
-+                            contentType, url.toString());
- 
-                 // switch to the XML parser if content type is xml and not parser not explicitly set
-                 if (contentType != null && xmlContentTypeRxp.matcher(contentType).matches()) {

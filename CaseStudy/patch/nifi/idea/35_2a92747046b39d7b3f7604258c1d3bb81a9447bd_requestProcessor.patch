diff --git a/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java b/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java
index d9055c93b6..8913b5c13d 100644
--- a/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java
+++ b/nifi-nar-bundles/nifi-framework-bundle/nifi-framework/nifi-web/nifi-web-api/src/main/java/org/apache/nifi/web/api/ProcessGroupResource.java
@@ -37,10 +37,7 @@ import org.apache.nifi.controller.Snippet;
 import org.apache.nifi.web.NiFiServiceFacade;
 import org.apache.nifi.web.ResourceNotFoundException;
 import org.apache.nifi.web.Revision;
-import org.apache.nifi.web.api.dto.ConnectionDTO;
-import org.apache.nifi.web.api.dto.ProcessGroupDTO;
-import org.apache.nifi.web.api.dto.RemoteProcessGroupDTO;
-import org.apache.nifi.web.api.dto.TemplateDTO;
+import org.apache.nifi.web.api.dto.*;
 import org.apache.nifi.web.api.dto.flow.FlowDTO;
 import org.apache.nifi.web.api.entity.ConnectionEntity;
 import org.apache.nifi.web.api.entity.ConnectionsEntity;
@@ -577,7 +574,8 @@ public class ProcessGroupResource extends ApplicationResource {
                     required = true
             ) final ProcessorEntity processorEntity) {
 
-        if (processorEntity == null || processorEntity.getComponent() == null) {
+        ProcessorDTO requestProcessor = processorEntity.getComponent();
+        if (processorEntity == null || requestProcessor == null) {
             throw new IllegalArgumentException("Processor details must be specified.");
         }
 
@@ -585,19 +583,19 @@ public class ProcessGroupResource extends ApplicationResource {
             throw new IllegalArgumentException("A revision of 0 must be specified when creating a new Processor.");
         }
 
-        if (processorEntity.getComponent().getId() != null) {
+        if (requestProcessor.getId() != null) {
             throw new IllegalArgumentException("Processor ID cannot be specified.");
         }
 
-        if (StringUtils.isBlank(processorEntity.getComponent().getType())) {
+        if (StringUtils.isBlank(requestProcessor.getType())) {
             throw new IllegalArgumentException("The type of processor to create must be specified.");
         }
 
-        if (processorEntity.getComponent().getParentGroupId() != null && !groupId.equals(processorEntity.getComponent().getParentGroupId())) {
+        if (requestProcessor.getParentGroupId() != null && !groupId.equals(requestProcessor.getParentGroupId())) {
             throw new IllegalArgumentException(String.format("If specified, the parent process group id %s must be the same as specified in the URI %s",
-                    processorEntity.getComponent().getParentGroupId(), groupId));
+                    requestProcessor.getParentGroupId(), groupId));
         }
-        processorEntity.getComponent().setParentGroupId(groupId);
+        requestProcessor.setParentGroupId(groupId);
 
         if (isReplicateRequest()) {
             return replicate(HttpMethod.POST, processorEntity);
@@ -617,11 +615,11 @@ public class ProcessGroupResource extends ApplicationResource {
         }
 
         // set the processor id as appropriate
-        processorEntity.getComponent().setId(generateUuid());
+        requestProcessor.setId(generateUuid());
 
         // create the new processor
-        final Revision revision = getRevision(processorEntity, processorEntity.getComponent().getId());
-        final ProcessorEntity entity = serviceFacade.createProcessor(revision, groupId, processorEntity.getComponent());
+        final Revision revision = getRevision(processorEntity, requestProcessor.getId());
+        final ProcessorEntity entity = serviceFacade.createProcessor(revision, groupId, requestProcessor);
         processorResource.populateRemainingProcessorEntityContent(entity);
 
         // generate a 201 created response

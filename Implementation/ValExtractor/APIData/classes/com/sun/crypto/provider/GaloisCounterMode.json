[
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"increment32",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.increment32([B)V",
		"read list":[
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"getFeedback",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.getFeedback()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"reset",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.reset()V",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"save",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.save()V",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAADSave",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processedSave",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAADSave",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processedSave",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"restore",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.restore()V",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAADSave",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processedSave",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"init",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.init(ZLjava/lang/String;[B[B)V|Ljava/security/InvalidKeyException;",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.FeedbackCipher.embeddedCipher",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.tagLenBytes",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.DEFAULT_TAG_LEN",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"init",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.init(ZLjava/lang/String;[B[BI)V|Ljava/security/InvalidKeyException;",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.FeedbackCipher.embeddedCipher",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.tagLenBytes",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"updateAAD",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.updateAAD([BII)V",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"processAAD",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.processAAD()V",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"doLastBlock",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.doLastBlock([BII[BIZ)V|Ljavax/crypto/IllegalBlockSizeException;",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"gctrPAndC.com.sun.crypto.provider.GCTR.aes",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"encrypt",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.encrypt([BII[BI)I",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"gctrPAndC.com.sun.crypto.provider.GCTR.aes",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"encryptFinal",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.encryptFinal([BII[BI)I|Ljavax/crypto/IllegalBlockSizeException;|Ljavax/crypto/ShortBufferException;",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.tagLenBytes",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.FeedbackCipher.embeddedCipher",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"gctrPAndC.com.sun.crypto.provider.GCTR.aes",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"decrypt",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.decrypt([BII[BI)I",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"decryptFinal",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.decryptFinal([BII[BI)I|Ljavax/crypto/IllegalBlockSizeException;|Ljavax/crypto/AEADBadTagException;|Ljavax/crypto/ShortBufferException;",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.tagLenBytes",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.FeedbackCipher.embeddedCipher",
				"static label":0
			},
			{
				"name":"ibuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"aadBuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ghashAllToS",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"gctrPAndC.com.sun.crypto.provider.GCTR.aes",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GHASH.P128",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.gctrPAndC",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.AESConstants.AES_BLOCK_SIZE",
				"static label":1
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.processed",
				"static label":0
			},
			{
				"name":"ibuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.sizeOfAAD",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.aadBuffer",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			}
		]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"getTagLen",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.getTagLen()I",
		"read list":[
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.tagLenBytes",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.crypto.provider.GaloisCounterMode",
		"method name":"getBufferedLength",
		"method key":"Lcom/sun/crypto/provider/GaloisCounterMode;.getBufferedLength()I",
		"read list":[
			{
				"name":"ibuffer.java.io.ByteArrayOutputStream.count",
				"static label":0
			},
			{
				"name":"com.sun.crypto.provider.GaloisCounterMode.ibuffer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"start",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.start()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"stop",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.stop()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"isActive",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.isActive()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"waitState",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.waitState(IJ)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"getState",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.getState()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"getStateString",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.getStateString()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"getHost",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.getHost()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"getPort",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.getPort()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"setPort",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.setPort(I)V|Ljava/lang/IllegalStateException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"com.sun.jmx.snmp.daemon.CommunicatorServerMBean",
		"method name":"getProtocol",
		"method key":"Lcom/sun/jmx/snmp/daemon/CommunicatorServerMBean;.getProtocol()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
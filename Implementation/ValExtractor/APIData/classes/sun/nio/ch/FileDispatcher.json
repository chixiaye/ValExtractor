[
	{
		"class name":"sun.nio.ch.FileDispatcher",
		"method name":"force",
		"method key":"Lsun/nio/ch/FileDispatcher;.force(Ljava/io/FileDescriptor;Z)I|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.FileDispatcher",
		"method name":"truncate",
		"method key":"Lsun/nio/ch/FileDispatcher;.truncate(Ljava/io/FileDescriptor;J)I|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.FileDispatcher",
		"method name":"size",
		"method key":"Lsun/nio/ch/FileDispatcher;.size(Ljava/io/FileDescriptor;)J|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.FileDispatcher",
		"method name":"lock",
		"method key":"Lsun/nio/ch/FileDispatcher;.lock(Ljava/io/FileDescriptor;ZJJZ)I|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.FileDispatcher",
		"method name":"release",
		"method key":"Lsun/nio/ch/FileDispatcher;.release(Ljava/io/FileDescriptor;JJ)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.FileDispatcher",
		"method name":"duplicateForMapping",
		"method key":"Lsun/nio/ch/FileDispatcher;.duplicateForMapping(Ljava/io/FileDescriptor;)Ljava/io/FileDescriptor;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
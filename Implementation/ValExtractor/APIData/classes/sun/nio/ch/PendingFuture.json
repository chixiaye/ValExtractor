[
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"channel",
		"method key":"Lsun/nio/ch/PendingFuture;.channel()Ljava/nio/channels/AsynchronousChannel;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.channel",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"handler",
		"method key":"Lsun/nio/ch/PendingFuture;.handler()Ljava/nio/channels/CompletionHandler<TV;-TA;>;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.handler",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"attachment",
		"method key":"Lsun/nio/ch/PendingFuture;.attachment()TA;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.attachment",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"setContext",
		"method key":"Lsun/nio/ch/PendingFuture;.setContext(Ljava/lang/Object;)V",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.context",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"getContext",
		"method key":"Lsun/nio/ch/PendingFuture;.getContext()Ljava/lang/Object;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.context",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"setTimeoutTask",
		"method key":"Lsun/nio/ch/PendingFuture;.setTimeoutTask(Ljava/util/concurrent/Future<*>;)V",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.timeoutTask",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"setResult",
		"method key":"Lsun/nio/ch/PendingFuture;.setResult(TV;)V",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.timeoutTask",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"latch.java.util.concurrent.CountDownLatch.sync",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"setFailure",
		"method key":"Lsun/nio/ch/PendingFuture;.setFailure(Ljava/lang/Throwable;)V",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.timeoutTask",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"latch.java.util.concurrent.CountDownLatch.sync",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"setResult",
		"method key":"Lsun/nio/ch/PendingFuture;.setResult(TV;Ljava/lang/Throwable;)V",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.timeoutTask",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"latch.java.util.concurrent.CountDownLatch.sync",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"get",
		"method key":"Lsun/nio/ch/PendingFuture;.get()TV;|Ljava/util/concurrent/ExecutionException;|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"latch.java.util.concurrent.CountDownLatch.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"s.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"get",
		"method key":"Lsun/nio/ch/PendingFuture;.get(JLjava/util/concurrent/TimeUnit;)TV;|Ljava/util/concurrent/ExecutionException;|Ljava/lang/InterruptedException;|Ljava/util/concurrent/TimeoutException;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.spinForTimeoutThreshold",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"latch.java.util.concurrent.CountDownLatch.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"s.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"exception",
		"method key":"Lsun/nio/ch/PendingFuture;.exception()Ljava/lang/Throwable;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.CANCELLED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"value",
		"method key":"Lsun/nio/ch/PendingFuture;.value()TV;",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.result",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"isCancelled",
		"method key":"Lsun/nio/ch/PendingFuture;.isCancelled()Z",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.CANCELLED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"isDone",
		"method key":"Lsun/nio/ch/PendingFuture;.isDone()Z",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.nio.ch.PendingFuture",
		"method name":"cancel",
		"method key":"Lsun/nio/ch/PendingFuture;.cancel(Z)Z",
		"read list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.latch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.timeoutTask",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.channel",
				"static label":0
			},
			{
				"name":"latch.java.util.concurrent.CountDownLatch.sync",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.exc",
				"static label":0
			},
			{
				"name":"sun.nio.ch.PendingFuture<V,A>.haveResult",
				"static label":0
			}
		],
		"native method list":[]
	}
]
[
	{
		"class name":"sun.awt.Symbol",
		"method name":"newEncoder",
		"method key":"Lsun/awt/Symbol;.newEncoder()Ljava/nio/charset/CharsetEncoder;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.awt.Symbol",
		"method name":"newDecoder",
		"method key":"Lsun/awt/Symbol;.newDecoder()Ljava/nio/charset/CharsetDecoder;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.awt.Symbol",
		"method name":"contains",
		"method key":"Lsun/awt/Symbol;.contains(Ljava/nio/charset/Charset;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.awt.Symbol.Encoder",
		"method name":"canEncode",
		"method key":"Lsun/awt/Symbol$Encoder;.canEncode(C)Z",
		"read list":[
			{
				"name":"sun.awt.Symbol.Encoder.table_greek[]",
				"static label":1
			},
			{
				"name":"sun.awt.Symbol.Encoder.table_math[]",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.awt.Symbol.Encoder",
		"method name":"encodeLoop",
		"method key":"Lsun/awt/Symbol$Encoder;.encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;",
		"read list":[
			{
				"name":"java.util.HashMap<K,V>.DEFAULT_LOAD_FACTOR",
				"static label":1
			},
			{
				"name":"java.nio.charset.CoderResult.UNDERFLOW",
				"static label":1
			},
			{
				"name":"java.nio.charset.CoderResult.unmappableCache",
				"static label":1
			},
			{
				"name":"sun.awt.Symbol.Encoder.table_greek[]",
				"static label":1
			},
			{
				"name":"java.nio.charset.CoderResult.OVERFLOW",
				"static label":1
			},
			{
				"name":"sun.awt.Symbol.Encoder.table_math[]",
				"static label":1
			},
			{
				"name":"unmappableCache.java.nio.charset.CoderResult.Cache.cache",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"unmappableCache.java.nio.charset.CoderResult.Cache.cache",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.awt.Symbol.Encoder",
		"method name":"isLegalReplacement",
		"method key":"Lsun/awt/Symbol$Encoder;.isLegalReplacement([B)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"sun.misc.FpUtils",
		"method name":"getExponent",
		"method key":"Lsun/misc/FpUtils;.getExponent(D)I",
		"read list":[
			{
				"name":"sun.misc.DoubleConsts.EXP_BIAS",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.SIGNIFICAND_WIDTH",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.EXP_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.doubleToRawLongBits",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"getExponent",
		"method key":"Lsun/misc/FpUtils;.getExponent(F)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"rawCopySign",
		"method key":"Lsun/misc/FpUtils;.rawCopySign(DD)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"rawCopySign",
		"method key":"Lsun/misc/FpUtils;.rawCopySign(FF)F",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.SIGNIF_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGN_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.EXP_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isFinite",
		"method key":"Lsun/misc/FpUtils;.isFinite(D)Z",
		"read list":[
			{
				"name":"sun.misc.DoubleConsts.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isFinite",
		"method key":"Lsun/misc/FpUtils;.isFinite(F)Z",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isInfinite",
		"method key":"Lsun/misc/FpUtils;.isInfinite(D)Z",
		"read list":[
			{
				"name":"java.lang.Double.NEGATIVE_INFINITY",
				"static label":1
			},
			{
				"name":"java.lang.Double.POSITIVE_INFINITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isInfinite",
		"method key":"Lsun/misc/FpUtils;.isInfinite(F)Z",
		"read list":[
			{
				"name":"java.lang.Float.NEGATIVE_INFINITY",
				"static label":1
			},
			{
				"name":"java.lang.Float.POSITIVE_INFINITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isNaN",
		"method key":"Lsun/misc/FpUtils;.isNaN(D)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isNaN",
		"method key":"Lsun/misc/FpUtils;.isNaN(F)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isUnordered",
		"method key":"Lsun/misc/FpUtils;.isUnordered(DD)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"isUnordered",
		"method key":"Lsun/misc/FpUtils;.isUnordered(FF)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"ilogb",
		"method key":"Lsun/misc/FpUtils;.ilogb(D)I",
		"read list":[
			{
				"name":"sun.misc.DoubleConsts.SIGNIFICAND_WIDTH",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.MAX_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.MIN_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.SIGNIF_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.doubleToRawLongBits",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"ilogb",
		"method key":"Lsun/misc/FpUtils;.ilogb(F)I",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.MIN_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGNIF_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.MAX_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGNIFICAND_WIDTH",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.floatToRawIntBits",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"scalb",
		"method key":"Lsun/misc/FpUtils;.scalb(DI)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"scalb",
		"method key":"Lsun/misc/FpUtils;.scalb(FI)F",
		"read list":[
			{
				"name":"sun.misc.DoubleConsts.EXP_BIAS",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.MIN_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.SIGNIFICAND_WIDTH",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.MAX_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.EXP_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGNIFICAND_WIDTH",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.MAX_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.DoubleConsts.MIN_EXPONENT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"nextAfter",
		"method key":"Lsun/misc/FpUtils;.nextAfter(DD)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"nextAfter",
		"method key":"Lsun/misc/FpUtils;.nextAfter(FD)F",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.SIGN_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.floatToRawIntBits",
				"static label":1
			},
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"nextUp",
		"method key":"Lsun/misc/FpUtils;.nextUp(D)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"nextUp",
		"method key":"Lsun/misc/FpUtils;.nextUp(F)F",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.POSITIVE_INFINITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"nextDown",
		"method key":"Lsun/misc/FpUtils;.nextDown(D)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"nextDown",
		"method key":"Lsun/misc/FpUtils;.nextDown(F)D",
		"read list":[
			{
				"name":"java.lang.Float.NEGATIVE_INFINITY",
				"static label":1
			},
			{
				"name":"java.lang.Float.MIN_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"copySign",
		"method key":"Lsun/misc/FpUtils;.copySign(DD)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"copySign",
		"method key":"Lsun/misc/FpUtils;.copySign(FF)F",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.SIGNIF_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGN_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.EXP_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"ulp",
		"method key":"Lsun/misc/FpUtils;.ulp(D)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"ulp",
		"method key":"Lsun/misc/FpUtils;.ulp(F)F",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.MIN_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.MAX_EXPONENT",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGNIFICAND_WIDTH",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.EXP_BIAS",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.EXP_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"signum",
		"method key":"Lsun/misc/FpUtils;.signum(D)D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.misc.FpUtils",
		"method name":"signum",
		"method key":"Lsun/misc/FpUtils;.signum(F)F",
		"read list":[
			{
				"name":"sun.misc.FloatConsts.SIGNIF_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.SIGN_BIT_MASK",
				"static label":1
			},
			{
				"name":"sun.misc.FloatConsts.EXP_BIT_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Float.intBitsToFloat",
				"static label":1
			}
		]
	}
]
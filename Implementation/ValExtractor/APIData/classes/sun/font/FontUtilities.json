[
	{
		"class name":"sun.font.FontUtilities",
		"method name":"getFont2D",
		"method key":"Lsun/font/FontUtilities;.getFont2D(Ljava/awt/Font;)Lsun/font/Font2D;",
		"read list":[
			{
				"name":"sun.font.FontAccess.access",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"isComplexText",
		"method key":"Lsun/font/FontUtilities;.isComplexText([CII)Z",
		"read list":[
			{
				"name":"sun.font.CharToGlyphMapper.HI_SURROGATE_START",
				"static label":1
			},
			{
				"name":"sun.font.CharToGlyphMapper.LO_SURROGATE_END",
				"static label":1
			},
			{
				"name":"sun.font.FontUtilities.MIN_LAYOUT_CHARCODE",
				"static label":1
			},
			{
				"name":"sun.font.FontUtilities.MAX_LAYOUT_CHARCODE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"isNonSimpleChar",
		"method key":"Lsun/font/FontUtilities;.isNonSimpleChar(C)Z",
		"read list":[
			{
				"name":"sun.font.CharToGlyphMapper.HI_SURROGATE_START",
				"static label":1
			},
			{
				"name":"sun.font.CharToGlyphMapper.LO_SURROGATE_END",
				"static label":1
			},
			{
				"name":"sun.font.FontUtilities.MIN_LAYOUT_CHARCODE",
				"static label":1
			},
			{
				"name":"sun.font.FontUtilities.MAX_LAYOUT_CHARCODE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"isComplexCharCode",
		"method key":"Lsun/font/FontUtilities;.isComplexCharCode(I)Z",
		"read list":[
			{
				"name":"sun.font.FontUtilities.MIN_LAYOUT_CHARCODE",
				"static label":1
			},
			{
				"name":"sun.font.FontUtilities.MAX_LAYOUT_CHARCODE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"getLogger",
		"method key":"Lsun/font/FontUtilities;.getLogger()Lsun/util/logging/PlatformLogger;",
		"read list":[
			{
				"name":"sun.font.FontUtilities.logger",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"isLogging",
		"method key":"Lsun/font/FontUtilities;.isLogging()Z",
		"read list":[
			{
				"name":"sun.font.FontUtilities.logging",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"debugFonts",
		"method key":"Lsun/font/FontUtilities;.debugFonts()Z",
		"read list":[
			{
				"name":"sun.font.FontUtilities.debugFonts",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"fontSupportsDefaultEncoding",
		"method key":"Lsun/font/FontUtilities;.fontSupportsDefaultEncoding(Ljava/awt/Font;)Z",
		"read list":[
			{
				"name":"sun.font.FontAccess.access",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"getCompositeFontUIResource",
		"method key":"Lsun/font/FontUtilities;.getCompositeFontUIResource(Ljava/awt/Font;)Ljavax/swing/plaf/FontUIResource;",
		"read list":[
			{
				"name":"sun.font.FontAccess.access",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MIN_TRANSFER_STRIDE",
				"static label":1
			},
			{
				"name":"r.sun.reflect.generics.visitor.Reifier.resultType",
				"static label":0
			},
			{
				"name":"sun.font.FontManager.NO_FALLBACK",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.RESIZE_STAMP_SHIFT",
				"static label":1
			},
			{
				"name":"java.lang.ref.SoftReference<T>.clock",
				"static label":1
			},
			{
				"name":"sun.reflect.generics.repository.ClassRepository.NONE",
				"static label":1
			},
			{
				"name":"font.java.awt.Font.style",
				"static label":0
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.scope",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.DEFAULT_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.font.FontManagerFactory.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MAXIMUM_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.reflectionDataOffset",
				"static label":1
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.U",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WRITER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.HASH_BITS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.U",
				"static label":1
			},
			{
				"name":"a.getClass().getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.decl",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.CELLSBUSY",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MOVED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.ASHIFT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.UNTREEIFY_THRESHOLD",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MAX_RESIZERS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.BASECOUNT",
				"static label":1
			},
			{
				"name":"sun.font.FontUtilities.compMapRef",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.LOCKSTATE",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TREEBIN",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.ABASE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WAITER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.CELLVALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TREEIFY_THRESHOLD",
				"static label":1
			},
			{
				"name":"Reifier.sun.reflect.generics.visitor.Reifier.factory",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.RESIZE_STAMP_BITS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.NCPU",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TRANSFERINDEX",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.SIZECTL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MIN_TREEIFY_CAPACITY",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.scope",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WAITER",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.decl",
				"static label":0
			},
			{
				"name":"sun.font.FontUtilities.compMapRef",
				"static label":1
			},
			{
				"name":"Reifier.sun.reflect.generics.visitor.Reifier.factory",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Class.getGenericSignature0",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.security.AccessController.doPrivileged",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			},
			{
				"name":"java.lang.System.identityHashCode",
				"static label":1
			},
			{
				"name":"java.lang.Thread.yield",
				"static label":1
			},
			{
				"name":"java.lang.Class.getInterfaces0",
				"static label":0
			},
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			}
		]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"mapFcName",
		"method key":"Lsun/font/FontUtilities;.mapFcName(Ljava/lang/String;)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.font.FontUtilities.nameMap[]",
				"static label":1
			},
			{
				"name":"name.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"getFontConfigFUIR",
		"method key":"Lsun/font/FontUtilities;.getFontConfigFUIR(Ljava/lang/String;II)Ljavax/swing/plaf/FontUIResource;",
		"read list":[
			{
				"name":"sun.font.FontUtilities.nameMap[]",
				"static label":1
			},
			{
				"name":"name.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.font.FontManagerFactory.instance",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.security.AccessController.doPrivileged",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.font.FontUtilities",
		"method name":"textLayoutIsCompatible",
		"method key":"Lsun/font/FontUtilities;.textLayoutIsCompatible(Ljava/awt/Font;)Z",
		"read list":[
			{
				"name":"sun.font.FontAccess.access",
				"static label":1
			},
			{
				"name":"sun.font.TrueTypeFont.GSUBTag",
				"static label":1
			},
			{
				"name":"sun.font.TrueTypeFont.GPOSTag",
				"static label":1
			},
			{
				"name":"ttf.sun.font.TrueTypeFont.numTables",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"selectType",
		"method key":"Lsun/tools/tree/AddExpression;.selectType(Lsun/tools/java/Environment;Lsun/tools/tree/Context;I)V",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tString",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_VOID",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"isNonNull",
		"method key":"Lsun/tools/tree/AddExpression;.isNonNull()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/AddExpression;.eval(II)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/AddExpression;.eval(JJ)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/AddExpression;.eval(FF)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/AddExpression;.eval(DD)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/AddExpression;.eval(Ljava/lang/String;Ljava/lang/String;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"inlineValue",
		"method key":"Lsun/tools/tree/AddExpression;.inlineValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tString",
				"static label":1
			},
			{
				"name":"buffer.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"inlineValueSB",
		"method key":"Lsun/tools/tree/AddExpression;.inlineValueSB(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tString",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"simplify",
		"method key":"Lsun/tools/tree/AddExpression;.simplify()Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.java.Constants.TC_CLASS",
				"static label":1
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TM_INTEGER",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_NULL",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"costInline",
		"method key":"Lsun/tools/tree/AddExpression;.costInline(ILsun/tools/java/Environment;Lsun/tools/tree/Context;)I",
		"read list":[
			{
				"name":"sun.tools.java.Constants.TC_CLASS",
				"static label":1
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"codeOperation",
		"method key":"Lsun/tools/tree/AddExpression;.codeOperation(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_iadd",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"codeAppend",
		"method key":"Lsun/tools/tree/AddExpression;.codeAppend(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;Lsun/tools/java/ClassDeclaration;Z)V|Lsun/tools/java/ClassNotFound;|Lsun/tools/java/AmbiguousMember;",
		"read list":[
			{
				"name":"sun.tools.java.Constants.TC_CLASS",
				"static label":1
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.AddExpression",
		"method name":"codeValue",
		"method key":"Lsun/tools/tree/AddExpression;.codeValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"sun.tools.java.Constants.TC_CLASS",
				"static label":1
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.idToString",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.idJavaLangStringBuffer",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_invokevirtual",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"sun.tools.tree.BitAndExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/BitAndExpression;.eval(ZZ)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BitAndExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/BitAndExpression;.eval(II)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BitAndExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/BitAndExpression;.eval(JJ)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BitAndExpression",
		"method name":"simplify",
		"method key":"Lsun/tools/tree/BitAndExpression;.simplify()Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BitAndExpression",
		"method name":"codeOperation",
		"method key":"Lsun/tools/tree/BitAndExpression;.codeOperation(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_iand",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
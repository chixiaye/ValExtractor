[
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"order",
		"method key":"Lsun/tools/tree/UnaryExpression;.order()Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"selectType",
		"method key":"Lsun/tools/tree/UnaryExpression;.selectType(Lsun/tools/java/Environment;Lsun/tools/tree/Context;I)V",
		"read list":[
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"checkValue",
		"method key":"Lsun/tools/tree/UnaryExpression;.checkValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;)Lsun/tools/tree/Vset;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TC_ERROR",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_ERROR",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"isConstant",
		"method key":"Lsun/tools/tree/UnaryExpression;.isConstant()Z",
		"read list":[
			{
				"name":"sun.tools.java.Constants.NEG",
				"static label":1
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.EXPR",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.NOT",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.BITNOT",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.POS",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.CONVERT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval(I)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval(J)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval(F)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval(D)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval(Z)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval(Ljava/lang/String;)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/UnaryExpression;.eval()Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.CHARVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.INTVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.BYTEVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.SHORTVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.LONGVAL",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.STRINGVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.FLOATVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.DOUBLEVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.BOOLEANVAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"inline",
		"method key":"Lsun/tools/tree/UnaryExpression;.inline(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"inlineValue",
		"method key":"Lsun/tools/tree/UnaryExpression;.inlineValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.CHARVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.INTVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.BYTEVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.SHORTVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.LONGVAL",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.STRINGVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.FLOATVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.DOUBLEVAL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.BOOLEANVAL",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"copyInline",
		"method key":"Lsun/tools/tree/UnaryExpression;.copyInline(Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"costInline",
		"method key":"Lsun/tools/tree/UnaryExpression;.costInline(ILsun/tools/java/Environment;Lsun/tools/tree/Context;)I",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.UnaryExpression",
		"method name":"print",
		"method key":"Lsun/tools/tree/UnaryExpression;.print(Ljava/io/PrintStream;)V",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
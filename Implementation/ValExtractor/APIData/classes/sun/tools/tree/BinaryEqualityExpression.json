[
	{
		"class name":"sun.tools.tree.BinaryEqualityExpression",
		"method name":"selectType",
		"method key":"Lsun/tools/tree/BinaryEqualityExpression;.selectType(Lsun/tools/java/Environment;Lsun/tools/tree/Context;I)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tInt",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_CLASS",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_ARRAY",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_DOUBLE",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_ERROR",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tLong",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_BOOLEAN",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TM_LONG",
				"static label":1
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tFloat",
				"static label":1
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TM_NULL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tDouble",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_FLOAT",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tBoolean",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"native method list":[]
	}
]
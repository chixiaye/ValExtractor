[
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"getImplementation",
		"method key":"Lsun/tools/tree/Expression;.getImplementation()Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"getType",
		"method key":"Lsun/tools/tree/Expression;.getType()Lsun/tools/java/Type;",
		"read list":[
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"precedence",
		"method key":"Lsun/tools/tree/Expression;.precedence()I",
		"read list":[
			{
				"name":"sun.tools.java.Constants.opPrecedence[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"order",
		"method key":"Lsun/tools/tree/Expression;.order()Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"isConstant",
		"method key":"Lsun/tools/tree/Expression;.isConstant()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"getValue",
		"method key":"Lsun/tools/tree/Expression;.getValue()Ljava/lang/Object;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"equals",
		"method key":"Lsun/tools/tree/Expression;.equals(I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"equals",
		"method key":"Lsun/tools/tree/Expression;.equals(Z)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"equals",
		"method key":"Lsun/tools/tree/Expression;.equals(Lsun/tools/java/Identifier;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"equals",
		"method key":"Lsun/tools/tree/Expression;.equals(Ljava/lang/String;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"isNull",
		"method key":"Lsun/tools/tree/Expression;.isNull()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"isNonNull",
		"method key":"Lsun/tools/tree/Expression;.isNonNull()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"equalsDefault",
		"method key":"Lsun/tools/tree/Expression;.equalsDefault()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"toType",
		"method key":"Lsun/tools/tree/Expression;.toType(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/java/Type;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tError",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"fitsType",
		"method key":"Lsun/tools/tree/Expression;.fitsType(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/java/Type;)Z",
		"read list":[
			{
				"name":"sun.tools.java.Constants.TC_INT",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"fitsType",
		"method key":"Lsun/tools/tree/Expression;.fitsType(Lsun/tools/java/Environment;Lsun/tools/java/Type;)Z",
		"read list":[
			{
				"name":"sun.tools.java.Constants.TC_INT",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkValue",
		"method key":"Lsun/tools/tree/Expression;.checkValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;)Lsun/tools/tree/Vset;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkInitializer",
		"method key":"Lsun/tools/tree/Expression;.checkInitializer(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Lsun/tools/java/Type;Ljava/util/Hashtable;)Lsun/tools/tree/Vset;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"check",
		"method key":"Lsun/tools/tree/Expression;.check(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;)Lsun/tools/tree/Vset;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkLHS",
		"method key":"Lsun/tools/tree/Expression;.checkLHS(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;)Lsun/tools/tree/Vset;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tError",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"getAssigner",
		"method key":"Lsun/tools/tree/Expression;.getAssigner(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/FieldUpdater;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"getUpdater",
		"method key":"Lsun/tools/tree/Expression;.getUpdater(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/FieldUpdater;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkAssignOp",
		"method key":"Lsun/tools/tree/Expression;.checkAssignOp(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;Lsun/tools/tree/Expression;)Lsun/tools/tree/Vset;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tError",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkAmbigName",
		"method key":"Lsun/tools/tree/Expression;.checkAmbigName(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;Lsun/tools/tree/UnaryExpression;)Lsun/tools/tree/Vset;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkCondition",
		"method key":"Lsun/tools/tree/Expression;.checkCondition(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;)Lsun/tools/tree/ConditionVars;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"checkCondition",
		"method key":"Lsun/tools/tree/Expression;.checkCondition(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;Lsun/tools/tree/ConditionVars;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"eval",
		"method key":"Lsun/tools/tree/Expression;.eval()Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"simplify",
		"method key":"Lsun/tools/tree/Expression;.simplify()Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"inline",
		"method key":"Lsun/tools/tree/Expression;.inline(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"inlineValue",
		"method key":"Lsun/tools/tree/Expression;.inlineValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"inlineValueSB",
		"method key":"Lsun/tools/tree/Expression;.inlineValueSB(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Ljava/lang/StringBuffer;)Ljava/lang/StringBuffer;",
		"read list":[
			{
				"name":"((Integer)val).java.lang.Integer.value",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tChar",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tBoolean",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"inlineLHS",
		"method key":"Lsun/tools/tree/Expression;.inlineLHS(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"costInline",
		"method key":"Lsun/tools/tree/Expression;.costInline(ILsun/tools/java/Environment;Lsun/tools/tree/Context;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeBranch",
		"method key":"Lsun/tools/tree/Expression;.codeBranch(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;Lsun/tools/asm/Label;Z)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifeq",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_goto",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TC_BOOLEAN",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifne",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ldc",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeValue",
		"method key":"Lsun/tools/tree/Expression;.codeValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifeq",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_goto",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TC_BOOLEAN",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifne",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ldc",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"code",
		"method key":"Lsun/tools/tree/Expression;.code(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifeq",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_pop2",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_goto",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifne",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ldc",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_pop",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_DOUBLE",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TC_LONG",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TC_BOOLEAN",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_VOID",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeLValue",
		"method key":"Lsun/tools/tree/Expression;.codeLValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)I",
		"read list":[
			{
				"name":"java.lang.System.out",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeLoad",
		"method key":"Lsun/tools/tree/Expression;.codeLoad(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"java.lang.System.out",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeStore",
		"method key":"Lsun/tools/tree/Expression;.codeStore(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V",
		"read list":[
			{
				"name":"java.lang.System.out",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"ensureString",
		"method key":"Lsun/tools/tree/Expression;.ensureString(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;)V|Lsun/tools/java/ClassNotFound;|Lsun/tools/java/AmbiguousMember;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tObject",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_NULL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.idValueOf",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tString",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_ARRAY",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_REFERENCE",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_invokestatic",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeAppend",
		"method key":"Lsun/tools/tree/Expression;.codeAppend(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;Lsun/tools/java/ClassDeclaration;Z)V|Lsun/tools/java/ClassNotFound;|Lsun/tools/java/AmbiguousMember;",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifeq",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tObject",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_goto",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.idValueOf",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_invokespecial",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.idAppend",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_ARRAY",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_REFERENCE",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ifne",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_ldc",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Expression.type",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_invokestatic",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TM_NULL",
				"static label":1
			},
			{
				"name":"sun.tools.java.Type.tString",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			},
			{
				"name":"sun.tools.java.Constants.TC_BOOLEAN",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.idInit",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_new",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_invokevirtual",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeDup",
		"method key":"Lsun/tools/tree/Expression;.codeDup(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;II)V",
		"read list":[
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup_x2",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup2_x2",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup_x1",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup2_x1",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_dup2",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"codeConversion",
		"method key":"Lsun/tools/tree/Expression;.codeConversion(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/asm/Assembler;Lsun/tools/java/Type;Lsun/tools/java/Type;)V",
		"read list":[
			{
				"name":"sun.tools.java.RuntimeConstants.opc_l2f",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_INT",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_f2l",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_ARRAY",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_CHAR",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_i2s",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_BYTE",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_SHORT",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_CLASS",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_checkcast",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_i2b",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_d2i",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_f2i",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_i2f",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_i2d",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.where",
				"static label":0
			},
			{
				"name":"sun.tools.java.Type.tInt",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_l2i",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_i2l",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_FLOAT",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_DOUBLE",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_LONG",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_i2c",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_BOOLEAN",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_d2l",
				"static label":1
			},
			{
				"name":"sun.tools.java.Constants.TC_NULL",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_d2f",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_f2d",
				"static label":1
			},
			{
				"name":"sun.tools.java.RuntimeConstants.opc_l2d",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"firstConstructor",
		"method key":"Lsun/tools/tree/Expression;.firstConstructor()Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"copyInline",
		"method key":"Lsun/tools/tree/Expression;.copyInline(Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.Expression",
		"method name":"print",
		"method key":"Lsun/tools/tree/Expression;.print(Ljava/io/PrintStream;)V",
		"read list":[
			{
				"name":"sun.tools.java.Constants.opNames[]",
				"static label":1
			},
			{
				"name":"sun.tools.tree.Node.op",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
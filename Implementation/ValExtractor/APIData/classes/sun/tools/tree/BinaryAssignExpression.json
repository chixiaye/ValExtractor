[
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"getImplementation",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.getImplementation()Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.BinaryAssignExpression.implementation",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"order",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.order()Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"check",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.check(Lsun/tools/java/Environment;Lsun/tools/tree/Context;Lsun/tools/tree/Vset;Ljava/util/Hashtable;)Lsun/tools/tree/Vset;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"inline",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.inline(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.BinaryAssignExpression.implementation",
				"static label":0
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"inlineValue",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.inlineValue(Lsun/tools/java/Environment;Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.BinaryAssignExpression.implementation",
				"static label":0
			},
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.tools.tree.UnaryExpression.right",
				"static label":0
			},
			{
				"name":"sun.tools.tree.BinaryExpression.left",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"copyInline",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.copyInline(Lsun/tools/tree/Context;)Lsun/tools/tree/Expression;",
		"read list":[
			{
				"name":"sun.tools.tree.BinaryAssignExpression.implementation",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.tools.tree.BinaryAssignExpression",
		"method name":"costInline",
		"method key":"Lsun/tools/tree/BinaryAssignExpression;.costInline(ILsun/tools/java/Environment;Lsun/tools/tree/Context;)I",
		"read list":[
			{
				"name":"sun.tools.tree.BinaryAssignExpression.implementation",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
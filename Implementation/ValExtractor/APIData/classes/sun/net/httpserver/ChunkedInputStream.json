[
	{
		"class name":"sun.net.httpserver.ChunkedInputStream",
		"method name":"readImpl",
		"method key":"Lsun/net/httpserver/ChunkedInputStream;.readImpl([BII)I|Ljava/io/IOException;",
		"read list":[
			{
				"name":"sun.net.httpserver.ChunkedInputStream.LF",
				"static label":1
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.needToReadHeader",
				"static label":0
			},
			{
				"name":"connection.sun.net.httpserver.HttpConnection.context",
				"static label":0
			},
			{
				"name":"t.getServerImpl().sun.net.httpserver.ServerImpl.rspConnections",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.HttpConnection.State.RESPONSE",
				"static label":1
			},
			{
				"name":"t.sun.net.httpserver.ExchangeImpl.connection",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.MAX_CHUNK_HEADER_SIZE",
				"static label":1
			},
			{
				"name":"sun.net.httpserver.LeftOverInputStream.t",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.remaining",
				"static label":0
			},
			{
				"name":"java.io.FilterInputStream.in",
				"static label":0
			},
			{
				"name":"getHttpContext().sun.net.httpserver.HttpContextImpl.server",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.CR",
				"static label":1
			},
			{
				"name":"c.sun.net.httpserver.HttpConnection.state",
				"static label":0
			},
			{
				"name":"t.getServerImpl().sun.net.httpserver.ServerImpl.reqConnections",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.LeftOverInputStream.eof",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.HttpConnection.State.REQUEST",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"c.sun.net.httpserver.HttpConnection.state",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.needToReadHeader",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.LeftOverInputStream.eof",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.remaining",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.net.httpserver.ChunkedInputStream",
		"method name":"available",
		"method key":"Lsun/net/httpserver/ChunkedInputStream;.available()I|Ljava/io/IOException;",
		"read list":[
			{
				"name":"sun.net.httpserver.LeftOverInputStream.eof",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.LeftOverInputStream.closed",
				"static label":0
			},
			{
				"name":"sun.net.httpserver.ChunkedInputStream.remaining",
				"static label":0
			},
			{
				"name":"java.io.FilterInputStream.in",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.net.httpserver.ChunkedInputStream",
		"method name":"isDataBuffered",
		"method key":"Lsun/net/httpserver/ChunkedInputStream;.isDataBuffered()Z|Ljava/io/IOException;",
		"read list":[
			{
				"name":"sun.net.httpserver.LeftOverInputStream.eof",
				"static label":0
			},
			{
				"name":"java.io.FilterInputStream.in",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.net.httpserver.ChunkedInputStream",
		"method name":"markSupported",
		"method key":"Lsun/net/httpserver/ChunkedInputStream;.markSupported()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.net.httpserver.ChunkedInputStream",
		"method name":"mark",
		"method key":"Lsun/net/httpserver/ChunkedInputStream;.mark(I)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.net.httpserver.ChunkedInputStream",
		"method name":"reset",
		"method key":"Lsun/net/httpserver/ChunkedInputStream;.reset()V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
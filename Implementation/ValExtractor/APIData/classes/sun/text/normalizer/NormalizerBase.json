[
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.normalize([CII[CIILsun/text/normalizer/UnicodeSet;)I",
		"read list":[],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.normalize([CII[CIII)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.normalize(Ljava/lang/String;I)Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"getMinC",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.getMinC()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"getMask",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.getMask()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"getPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.getPrevBoundary()Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"getNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.getNextBoundary()Lsun/text/normalizer/NormalizerBase$IsNextBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"quickCheck",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.quickCheck([CIIZLsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/NormalizerBase$QuickCheckResult;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.NO",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.MAYBE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.Mode",
		"method name":"isNFSkippable",
		"method key":"Lsun/text/normalizer/NormalizerBase$Mode;.isNFSkippable(I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.normalize([CII[CIILsun/text/normalizer/UnicodeSet;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.normalize(Ljava/lang/String;I)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_DECOMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"getMinC",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.getMinC()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"getPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.getPrevBoundary()Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"getNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.getNextBoundary()Lsun/text/normalizer/NormalizerBase$IsNextBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"getMask",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.getMask()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"quickCheck",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.quickCheck([CIIZLsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/NormalizerBase$QuickCheckResult;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFDMode",
		"method name":"isNFSkippable",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFDMode;.isNFSkippable(I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.normalize([CII[CIILsun/text/normalizer/UnicodeSet;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.normalize(Ljava/lang/String;I)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_DECOMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"getMinC",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.getMinC()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"getPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.getPrevBoundary()Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"getNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.getNextBoundary()Lsun/text/normalizer/NormalizerBase$IsNextBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"getMask",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.getMask()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"quickCheck",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.quickCheck([CIIZLsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/NormalizerBase$QuickCheckResult;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKDMode",
		"method name":"isNFSkippable",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKDMode;.isNFSkippable(I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.normalize([CII[CIILsun/text/normalizer/UnicodeSet;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.normalize(Ljava/lang/String;I)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_COMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"getMinC",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.getMinC()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"getPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.getPrevBoundary()Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"getNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.getNextBoundary()Lsun/text/normalizer/NormalizerBase$IsNextBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"getMask",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.getMask()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"quickCheck",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.quickCheck([CIIZLsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/NormalizerBase$QuickCheckResult;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFCMode",
		"method name":"isNFSkippable",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFCMode;.isNFSkippable(I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.normalize([CII[CIILsun/text/normalizer/UnicodeSet;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.normalize(Ljava/lang/String;I)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_COMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"getMinC",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.getMinC()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"getPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.getPrevBoundary()Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"getNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.getNextBoundary()Lsun/text/normalizer/NormalizerBase$IsNextBoundary;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"getMask",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.getMask()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"quickCheck",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.quickCheck([CIIZLsun/text/normalizer/UnicodeSet;)Lsun/text/normalizer/NormalizerBase$QuickCheckResult;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.NFKCMode",
		"method name":"isNFSkippable",
		"method key":"Lsun/text/normalizer/NormalizerBase$NFKCMode;.isNFSkippable(I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"clone",
		"method key":"Lsun/text/normalizer/NormalizerBase;.clone()Ljava/lang/Object;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"compose",
		"method key":"Lsun/text/normalizer/NormalizerBase;.compose(Ljava/lang/String;ZI)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_COMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"decompose",
		"method key":"Lsun/text/normalizer/NormalizerBase;.decompose(Ljava/lang/String;Z)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_LATEST",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_DECOMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"decompose",
		"method key":"Lsun/text/normalizer/NormalizerBase;.decompose(Ljava/lang/String;ZI)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.MAX_BUF_SIZE_DECOMPOSE",
				"static label":1
			},
			{
				"name":"mappedStr.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_3_2_0_ORIGINAL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase;.normalize([CII[CIILsun/text/normalizer/NormalizerBase$Mode;I)I",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.sizeTable[]",
				"static label":1
			},
			{
				"name":"Integer.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"current",
		"method key":"Lsun/text/normalizer/NormalizerBase;.current()I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.SURROGATE_OFFSET_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.options",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.LEAD_SURROGATE_SHIFT_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.DONE",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"next",
		"method key":"Lsun/text/normalizer/NormalizerBase;.next()I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.SURROGATE_OFFSET_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.options",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.LEAD_SURROGATE_SHIFT_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.DONE",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"previous",
		"method key":"Lsun/text/normalizer/NormalizerBase;.previous()I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.sizeTable[]",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.SURROGATE_OFFSET_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.options",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterIterator.DONE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"Integer.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.LEAD_SURROGATE_SHIFT_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.DONE",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"reset",
		"method key":"Lsun/text/normalizer/NormalizerBase;.reset()V",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"setIndexOnly",
		"method key":"Lsun/text/normalizer/NormalizerBase;.setIndexOnly(I)V",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"setIndex",
		"method key":"Lsun/text/normalizer/NormalizerBase;.setIndex(I)I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.SURROGATE_OFFSET_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.options",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterProperty.LEAD_SURROGATE_SHIFT_",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.DONE",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"getBeginIndex",
		"method key":"Lsun/text/normalizer/NormalizerBase;.getBeginIndex()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"getEndIndex",
		"method key":"Lsun/text/normalizer/NormalizerBase;.getEndIndex()I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"getIndex",
		"method key":"Lsun/text/normalizer/NormalizerBase;.getIndex()I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"endIndex",
		"method key":"Lsun/text/normalizer/NormalizerBase;.endIndex()I",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"setMode",
		"method key":"Lsun/text/normalizer/NormalizerBase;.setMode(Lsun/text/normalizer/NormalizerBase$Mode;)V",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"getMode",
		"method key":"Lsun/text/normalizer/NormalizerBase;.getMode()Lsun/text/normalizer/NormalizerBase$Mode;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.mode",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"setText",
		"method key":"Lsun/text/normalizer/NormalizerBase;.setText(Ljava/lang/String;)V",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"setText",
		"method key":"Lsun/text/normalizer/NormalizerBase;.setText(Ljava/text/CharacterIterator;)V",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.nextIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferStart",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.currentIndex",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferPos",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.bufferLimit",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.text",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.IsPrevBoundary",
		"method name":"isPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$IsPrevBoundary;.isPrevBoundary(Lsun/text/normalizer/UCharacterIterator;II[C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.IsPrevNFDSafe",
		"method name":"isPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$IsPrevNFDSafe;.isPrevBoundary(Lsun/text/normalizer/UCharacterIterator;II[C)Z",
		"read list":[
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterIterator.DONE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.IsPrevTrueStarter",
		"method name":"isPrevBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$IsPrevTrueStarter;.isPrevBoundary(Lsun/text/normalizer/UCharacterIterator;II[C)Z",
		"read list":[
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterIterator.DONE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.IsNextBoundary",
		"method name":"isNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$IsNextBoundary;.isNextBoundary(Lsun/text/normalizer/UCharacterIterator;II[I)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.IsNextNFDSafe",
		"method name":"isNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$IsNextNFDSafe;.isNextBoundary(Lsun/text/normalizer/UCharacterIterator;II[I)Z",
		"read list":[
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterIterator.DONE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase.IsNextTrueStarter",
		"method name":"isNextBoundary",
		"method key":"Lsun/text/normalizer/NormalizerBase$IsNextTrueStarter;.isNextBoundary(Lsun/text/normalizer/UCharacterIterator;II[I)Z",
		"read list":[
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MIN_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.LEAD_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UTF16.TRAIL_SURROGATE_MAX_VALUE",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.UCharacterIterator.DONE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"isNFSkippable",
		"method key":"Lsun/text/normalizer/NormalizerBase;.isNFSkippable(ILsun/text/normalizer/NormalizerBase$Mode;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase;.normalize(Ljava/lang/String;Ljava/text/Normalizer$Form;)Ljava/lang/String;",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_LATEST",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"normalize",
		"method key":"Lsun/text/normalizer/NormalizerBase;.normalize(Ljava/lang/String;Ljava/text/Normalizer$Form;I)Ljava/lang/String;",
		"read list":[
			{
				"name":"java.text.Normalizer.Form.NFC",
				"static label":1
			},
			{
				"name":"str.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFKC",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFKD",
				"static label":1
			},
			{
				"name":"java.text.Normalizer.Form.NFD",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFD",
				"static label":1
			},
			{
				"name":"java.text.Normalizer.Form.NFKC",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFC",
				"static label":1
			},
			{
				"name":"java.text.Normalizer.Form.NFKD",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"isNormalized",
		"method key":"Lsun/text/normalizer/NormalizerBase;.isNormalized(Ljava/lang/String;Ljava/text/Normalizer$Form;)Z",
		"read list":[
			{
				"name":"sun.text.normalizer.NormalizerBase.UNICODE_LATEST",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"sun.text.normalizer.NormalizerBase",
		"method name":"isNormalized",
		"method key":"Lsun/text/normalizer/NormalizerBase;.isNormalized(Ljava/lang/String;Ljava/text/Normalizer$Form;I)Z",
		"read list":[
			{
				"name":"java.text.Normalizer.Form.NFC",
				"static label":1
			},
			{
				"name":"str.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFKC",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFKD",
				"static label":1
			},
			{
				"name":"java.text.Normalizer.Form.NFD",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.YES",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFD",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NO",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.MAYBE",
				"static label":1
			},
			{
				"name":"java.text.Normalizer.Form.NFKC",
				"static label":1
			},
			{
				"name":"sun.text.normalizer.NormalizerBase.NFC",
				"static label":1
			},
			{
				"name":"java.text.Normalizer.Form.NFKD",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	}
]
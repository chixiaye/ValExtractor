[
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"setMask",
		"method key":"Ljavax/swing/text/MaskFormatter;.setMask(Ljava/lang/String;)V|Ljava/text/ParseException;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"mask.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.LITERAL_KEY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.mask",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.ALPHA_NUMERIC_KEY",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.EmptyMaskChars[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.ANYTHING_KEY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.CHARACTER_KEY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.LOWERCASE_KEY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.HEX_KEY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.DIGIT_KEY",
				"static label":1
			},
			{
				"name":"javax.swing.text.MaskFormatter.UPPERCASE_KEY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Array.multiNewArray",
				"static label":1
			}
		]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"getMask",
		"method key":"Ljavax/swing/text/MaskFormatter;.getMask()Ljava/lang/String;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.mask",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"setValidCharacters",
		"method key":"Ljavax/swing/text/MaskFormatter;.setValidCharacters(Ljava/lang/String;)V",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.validCharacters",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"getValidCharacters",
		"method key":"Ljavax/swing/text/MaskFormatter;.getValidCharacters()Ljava/lang/String;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.validCharacters",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"setInvalidCharacters",
		"method key":"Ljavax/swing/text/MaskFormatter;.setInvalidCharacters(Ljava/lang/String;)V",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.invalidCharacters",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"getInvalidCharacters",
		"method key":"Ljavax/swing/text/MaskFormatter;.getInvalidCharacters()Ljava/lang/String;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.invalidCharacters",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"setPlaceholder",
		"method key":"Ljavax/swing/text/MaskFormatter;.setPlaceholder(Ljava/lang/String;)V",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholderString",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"getPlaceholder",
		"method key":"Ljavax/swing/text/MaskFormatter;.getPlaceholder()Ljava/lang/String;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholderString",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"setPlaceholderCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter;.setPlaceholderCharacter(C)V",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"getPlaceholderCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter;.getPlaceholderCharacter()C",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"setValueContainsLiteralCharacters",
		"method key":"Ljavax/swing/text/MaskFormatter;.setValueContainsLiteralCharacters(Z)V",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.containsLiteralChars",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"getValueContainsLiteralCharacters",
		"method key":"Ljavax/swing/text/MaskFormatter;.getValueContainsLiteralCharacters()Z",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.containsLiteralChars",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"stringToValue",
		"method key":"Ljavax/swing/text/MaskFormatter;.stringToValue(Ljava/lang/String;)Ljava/lang/Object;|Ljava/text/ParseException;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.containsLiteralChars",
				"static label":0
			},
			{
				"name":"string.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sb.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"valueToString",
		"method key":"Ljavax/swing/text/MaskFormatter;.valueToString(Ljava/lang/Object;)Ljava/lang/String;|Ljava/text/ParseException;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholderString",
				"static label":0
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"formatting.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.Integer.SIZE",
				"static label":1
			},
			{
				"name":"result.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			}
		]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"install",
		"method key":"Ljavax/swing/text/MaskFormatter;.install(Ljavax/swing/JFormattedTextField;)V",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			},
			{
				"name":"ftf.javax.swing.JFormattedTextField.value",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.containsLiteralChars",
				"static label":0
			},
			{
				"name":"javax.swing.JFormattedTextField.AbstractFormatter.ftf",
				"static label":0
			},
			{
				"name":"ftf.javax.swing.JFormattedTextField.editValid",
				"static label":0
			},
			{
				"name":"string.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.placeholderString",
				"static label":0
			},
			{
				"name":"sb.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.SIZE",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"ftf.javax.swing.JFormattedTextField.editValid",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			}
		]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"isNavigatable",
		"method key":"Ljavax/swing/text/MaskFormatter;.isNavigatable(I)Z",
		"read list":[
			{
				"name":"javax.swing.text.DefaultFormatter.allowsInvalid",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"isValidEdit",
		"method key":"Ljavax/swing/text/MaskFormatter;.isValidEdit(Ljavax/swing/text/DefaultFormatter$ReplaceHolder;)Z",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			},
			{
				"name":"javax.swing.text.DefaultFormatter.allowsInvalid",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.containsLiteralChars",
				"static label":0
			},
			{
				"name":"javax.swing.JFormattedTextField.AbstractFormatter.ftf",
				"static label":0
			},
			{
				"name":"string.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"sb.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter",
		"method name":"canReplace",
		"method key":"Ljavax/swing/text/MaskFormatter;.canReplace(Ljavax/swing/text/DefaultFormatter$ReplaceHolder;)Z",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			},
			{
				"name":"javax.swing.text.DefaultFormatter.allowsInvalid",
				"static label":0
			},
			{
				"name":"getFormattedTextField().javax.swing.text.JTextComponent.caret",
				"static label":0
			},
			{
				"name":"text.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.swing.text.DefaultFormatter.overwriteMode",
				"static label":0
			},
			{
				"name":"javax.swing.JFormattedTextField.AbstractFormatter.ftf",
				"static label":0
			},
			{
				"name":"replace.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.MaskCharacter",
		"method name":"isLiteral",
		"method key":"Ljavax/swing/text/MaskFormatter$MaskCharacter;.isLiteral()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.MaskCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$MaskCharacter;.isValidCharacter(C)Z",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.invalidCharacters",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.validCharacters",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.MaskCharacter",
		"method name":"getChar",
		"method key":"Ljavax/swing/text/MaskFormatter$MaskCharacter;.getChar(C)C",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.MaskCharacter",
		"method name":"append",
		"method key":"Ljavax/swing/text/MaskFormatter$MaskCharacter;.append(Ljava/lang/StringBuilder;Ljava/lang/String;[ILjava/lang/String;)V|Ljava/text/ParseException;",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.invalidCharacters",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.placeholder",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.validCharacters",
				"static label":0
			},
			{
				"name":"javax.swing.text.MaskFormatter.containsLiteralChars",
				"static label":0
			},
			{
				"name":"formatting.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.LiteralCharacter",
		"method name":"isLiteral",
		"method key":"Ljavax/swing/text/MaskFormatter$LiteralCharacter;.isLiteral()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.LiteralCharacter",
		"method name":"getChar",
		"method key":"Ljavax/swing/text/MaskFormatter$LiteralCharacter;.getChar(C)C",
		"read list":[
			{
				"name":"javax.swing.text.MaskFormatter.LiteralCharacter.fixedChar",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.DigitMaskCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$DigitMaskCharacter;.isValidCharacter(C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.UpperCaseCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$UpperCaseCharacter;.isValidCharacter(C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.UpperCaseCharacter",
		"method name":"getChar",
		"method key":"Ljavax/swing/text/MaskFormatter$UpperCaseCharacter;.getChar(C)C",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.LowerCaseCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$LowerCaseCharacter;.isValidCharacter(C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.LowerCaseCharacter",
		"method name":"getChar",
		"method key":"Ljavax/swing/text/MaskFormatter$LowerCaseCharacter;.getChar(C)C",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.AlphaNumericCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$AlphaNumericCharacter;.isValidCharacter(C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.CharCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$CharCharacter;.isValidCharacter(C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.HexCharacter",
		"method name":"isValidCharacter",
		"method key":"Ljavax/swing/text/MaskFormatter$HexCharacter;.isValidCharacter(C)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.MaskFormatter.HexCharacter",
		"method name":"getChar",
		"method key":"Ljavax/swing/text/MaskFormatter$HexCharacter;.getChar(C)C",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"javax.swing.text.html.parser.TagElement",
		"method name":"breaksFlow",
		"method key":"Ljavax/swing/text/html/parser/TagElement;.breaksFlow()Z",
		"read list":[
			{
				"name":"javax.swing.text.html.parser.TagElement.htmlTag",
				"static label":0
			},
			{
				"name":"htmlTag.javax.swing.text.html.HTML.Tag.breakTag",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.html.parser.TagElement",
		"method name":"isPreformatted",
		"method key":"Ljavax/swing/text/html/parser/TagElement;.isPreformatted()Z",
		"read list":[
			{
				"name":"javax.swing.text.html.HTML.Tag.PRE",
				"static label":1
			},
			{
				"name":"javax.swing.text.html.parser.TagElement.htmlTag",
				"static label":0
			},
			{
				"name":"javax.swing.text.html.HTML.Tag.TEXTAREA",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.html.parser.TagElement",
		"method name":"getElement",
		"method key":"Ljavax/swing/text/html/parser/TagElement;.getElement()Ljavax/swing/text/html/parser/Element;",
		"read list":[
			{
				"name":"javax.swing.text.html.parser.TagElement.elem",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.html.parser.TagElement",
		"method name":"getHTMLTag",
		"method key":"Ljavax/swing/text/html/parser/TagElement;.getHTMLTag()Ljavax/swing/text/html/HTML$Tag;",
		"read list":[
			{
				"name":"javax.swing.text.html.parser.TagElement.htmlTag",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.swing.text.html.parser.TagElement",
		"method name":"fictional",
		"method key":"Ljavax/swing/text/html/parser/TagElement;.fictional()Z",
		"read list":[
			{
				"name":"javax.swing.text.html.parser.TagElement.insertedByErrorRecovery",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
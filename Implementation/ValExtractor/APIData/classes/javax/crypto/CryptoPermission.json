[
	{
		"class name":"javax.crypto.CryptoPermission",
		"method name":"implies",
		"method key":"Ljavax/crypto/CryptoPermission;.implies(Ljava/security/Permission;)Z",
		"read list":[
			{
				"name":"alg.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.ALG_NAME_WILDCARD",
				"static label":1
			},
			{
				"name":"javax.crypto.CryptoPermission.checkParam",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.exemptionMechanism",
				"static label":0
			},
			{
				"name":"((RC2ParameterSpec)algParamSpec).javax.crypto.spec.RC2ParameterSpec.effectiveKeyBits",
				"static label":0
			},
			{
				"name":"((RC5ParameterSpec)algParamSpec).javax.crypto.spec.RC5ParameterSpec.rounds",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.maxKeySize",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.alg",
				"static label":0
			},
			{
				"name":"this.exemptionMechanism.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.algParamSpec",
				"static label":0
			},
			{
				"name":"((PBEParameterSpec)algParamSpec).javax.crypto.spec.PBEParameterSpec.iterationCount",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			}
		]
	},
	{
		"class name":"javax.crypto.CryptoPermission",
		"method name":"equals",
		"method key":"Ljavax/crypto/CryptoPermission;.equals(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"alg.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.checkParam",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.exemptionMechanism",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.maxKeySize",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.alg",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.algParamSpec",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.crypto.CryptoPermission",
		"method name":"hashCode",
		"method key":"Ljavax/crypto/CryptoPermission;.hashCode()I",
		"read list":[
			{
				"name":"alg.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.exemptionMechanism",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.checkParam",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.maxKeySize",
				"static label":0
			},
			{
				"name":"alg.java.lang.String.hash",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.alg",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.algParamSpec",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"alg.java.lang.String.hash",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			}
		]
	},
	{
		"class name":"javax.crypto.CryptoPermission",
		"method name":"getActions",
		"method key":"Ljavax/crypto/CryptoPermission;.getActions()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.crypto.CryptoPermission",
		"method name":"newPermissionCollection",
		"method key":"Ljavax/crypto/CryptoPermission;.newPermissionCollection()Ljava/security/PermissionCollection;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.crypto.CryptoPermission",
		"method name":"toString",
		"method key":"Ljavax/crypto/CryptoPermission;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"javax.crypto.CryptoPermission.exemptionMechanism",
				"static label":0
			},
			{
				"name":"((RC2ParameterSpec)algParamSpec).javax.crypto.spec.RC2ParameterSpec.effectiveKeyBits",
				"static label":0
			},
			{
				"name":"((RC5ParameterSpec)algParamSpec).javax.crypto.spec.RC5ParameterSpec.rounds",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.maxKeySize",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.alg",
				"static label":0
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.algParamSpec",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.crypto.CryptoPermissionCollection",
		"method name":"add",
		"method key":"Ljavax/crypto/CryptoPermissionCollection;.add(Ljava/security/Permission;)V",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"javax.crypto.CryptoPermissionCollection.permissions",
				"static label":0
			},
			{
				"name":"java.security.PermissionCollection.readOnly",
				"static label":0
			},
			{
				"name":"java.util.Vector<E>.MAX_ARRAY_SIZE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"javax.crypto.CryptoPermissionCollection",
		"method name":"implies",
		"method key":"Ljavax/crypto/CryptoPermissionCollection;.implies(Ljava/security/Permission;)Z",
		"read list":[
			{
				"name":"x.javax.crypto.CryptoPermission.checkParam",
				"static label":0
			},
			{
				"name":"alg.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermission.ALG_NAME_WILDCARD",
				"static label":1
			},
			{
				"name":"((RC2ParameterSpec)algParamSpec).javax.crypto.spec.RC2ParameterSpec.effectiveKeyBits",
				"static label":0
			},
			{
				"name":"((RC5ParameterSpec)algParamSpec).javax.crypto.spec.RC5ParameterSpec.rounds",
				"static label":0
			},
			{
				"name":"javax.crypto.CryptoPermissionCollection.permissions",
				"static label":0
			},
			{
				"name":"x.javax.crypto.CryptoPermission.exemptionMechanism",
				"static label":0
			},
			{
				"name":"x.javax.crypto.CryptoPermission.alg",
				"static label":0
			},
			{
				"name":"this.exemptionMechanism.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"((PBEParameterSpec)algParamSpec).javax.crypto.spec.PBEParameterSpec.iterationCount",
				"static label":0
			},
			{
				"name":"x.javax.crypto.CryptoPermission.algParamSpec",
				"static label":0
			},
			{
				"name":"x.javax.crypto.CryptoPermission.maxKeySize",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			}
		]
	},
	{
		"class name":"javax.crypto.CryptoPermissionCollection",
		"method name":"elements",
		"method key":"Ljavax/crypto/CryptoPermissionCollection;.elements()Ljava/util/Enumeration<Ljava/security/Permission;>;",
		"read list":[
			{
				"name":"javax.crypto.CryptoPermissionCollection.permissions",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
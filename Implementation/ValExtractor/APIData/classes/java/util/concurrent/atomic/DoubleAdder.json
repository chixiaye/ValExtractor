[
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"add",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.add(D)V",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.BASE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.cellsBusy",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.Cell.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.Cell.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.CELLSBUSY",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.NCPU",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.Striped64.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.cellsBusy",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Double.doubleToRawLongBits",
				"static label":1
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"sum",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.sum()D",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"reset",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.reset()V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"sumThenReset",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.sumThenReset()D",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"toString",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"doubleValue",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.doubleValue()D",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"longValue",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.longValue()J",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"intValue",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.intValue()I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.DoubleAdder",
		"method name":"floatValue",
		"method key":"Ljava/util/concurrent/atomic/DoubleAdder;.floatValue()F",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.Striped64.base",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			}
		]
	}
]
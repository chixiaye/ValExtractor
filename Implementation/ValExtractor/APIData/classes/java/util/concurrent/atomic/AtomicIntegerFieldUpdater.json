[
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"newUpdater",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater<U:Ljava/lang/Object;>(Ljava/lang/Class<TU;>;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater<TU;>;",
		"read list":[],
		"write list":[],
		"native method list":[
			{
				"name":"sun.reflect.Reflection.getCallerClass",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"compareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet(TT;II)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"weakCompareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.weakCompareAndSet(TT;II)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"set",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.set(TT;I)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"lazySet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.lazySet(TT;I)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"get",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.get(TT;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"getAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndSet(TT;I)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"getAndIncrement",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndIncrement(TT;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"getAndDecrement",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndDecrement(TT;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"getAndAdd",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.getAndAdd(TT;I)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"incrementAndGet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.incrementAndGet(TT;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"decrementAndGet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.decrementAndGet(TT;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater",
		"method name":"addAndGet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.addAndGet(TT;I)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"compareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.compareAndSet(TT;II)Z",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"weakCompareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.weakCompareAndSet(TT;II)Z",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"set",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.set(TT;I)V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"lazySet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.lazySet(TT;I)V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"getAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.getAndSet(TT;I)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"getAndIncrement",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.getAndIncrement(TT;)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"getAndDecrement",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.getAndDecrement(TT;)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"getAndAdd",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.getAndAdd(TT;I)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"incrementAndGet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.incrementAndGet(TT;)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"decrementAndGet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.decrementAndGet(TT;)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl",
		"method name":"addAndGet",
		"method key":"Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater$AtomicIntegerFieldUpdaterImpl;.addAndGet(TT;I)I",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdaterImpl<T>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	}
]
[
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"newUpdater",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater<U:Ljava/lang/Object;W:Ljava/lang/Object;>(Ljava/lang/Class<TU;>;Ljava/lang/Class<TW;>;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater<TU;TW;>;",
		"read list":[],
		"write list":[],
		"native method list":[
			{
				"name":"sun.reflect.Reflection.getCallerClass",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"compareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet(TT;TV;TV;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"weakCompareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.weakCompareAndSet(TT;TV;TV;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"set",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.set(TT;TV;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"lazySet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.lazySet(TT;TV;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"get",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.get(TT;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater",
		"method name":"getAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.getAndSet(TT;TV;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"targetCheck",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.targetCheck(TT;)V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"updateCheck",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.updateCheck(TT;TV;)V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.vclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"compareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.compareAndSet(TT;TV;TV;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.vclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"weakCompareAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.weakCompareAndSet(TT;TV;TV;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.vclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"set",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.set(TT;TV;)V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.vclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"lazySet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.lazySet(TT;TV;)V",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.vclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"get",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.get(TT;)TV;",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl",
		"method name":"getAndSet",
		"method key":"Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl;.getAndSet(TT;TV;)TV;",
		"read list":[
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.cclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.offset",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.tclass",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicReferenceFieldUpdater.AtomicReferenceFieldUpdaterImpl<T,V>.vclass",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInstance",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapObject",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getObjectVolatile",
				"static label":0
			}
		]
	}
]
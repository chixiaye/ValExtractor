[
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"prevTerminator",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.prevTerminator()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"nextTerminator",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.nextTerminator()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Node",
		"method name":"casItem",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casItem(TE;TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Node",
		"method name":"lazySetNext",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetNext(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Node",
		"method name":"casNext",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casNext(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Node",
		"method name":"lazySetPrev",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.lazySetPrev(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Node",
		"method name":"casPrev",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Node;.casPrev(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"unlink",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.unlink(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"first",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.first()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"last",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.last()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"addFirst",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.addFirst(TE;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"addLast",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.addLast(TE;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"offerFirst",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.offerFirst(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"offerLast",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.offerLast(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"peekFirst",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.peekFirst()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"peekLast",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.peekLast()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"getFirst",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.getFirst()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"getLast",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.getLast()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"pollFirst",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.pollFirst()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"pollLast",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.pollLast()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"removeFirst",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirst()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"removeLast",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.removeLast()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"offer",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.offer(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"add",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.add(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"poll",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.poll()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"peek",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.peek()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.remove()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"pop",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.pop()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"element",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.element()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"push",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.push(TE;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"removeFirstOccurrence",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.removeFirstOccurrence(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"removeLastOccurrence",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.removeLastOccurrence(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"contains",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.contains(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"isEmpty",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.isEmpty()Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"size",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.size()I",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.remove(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"addAll",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.addAll(Ljava/util/Collection<+TE;>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"clear",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.clear()V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.toArray()[Ljava/lang/Object;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.toArray<T:Ljava/lang/Object;>([TT;)[TT;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Array.multiNewArray",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"iterator",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.iterator()Ljava/util/Iterator<TE;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"descendingIterator",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.descendingIterator()Ljava/util/Iterator<TE;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.AbstractItr",
		"method name":"startNode",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.startNode()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.AbstractItr",
		"method name":"nextNode",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.nextNode(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.AbstractItr",
		"method name":"hasNext",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.hasNext()Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.nextItem",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.AbstractItr",
		"method name":"next",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.next()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.nextNode",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.nextItem",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.lastRet",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.nextNode",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.nextItem",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.lastRet",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.AbstractItr",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$AbstractItr;.remove()V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.HOPS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.prevOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.NEXT_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.lastRet",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.Node<E>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.PREV_TERMINATOR",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.AbstractItr.lastRet",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Itr",
		"method name":"startNode",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.startNode()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.Itr",
		"method name":"nextNode",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$Itr;.nextNode(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.head",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.DescendingItr",
		"method name":"startNode",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.startNode()Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.DescendingItr",
		"method name":"nextNode",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$DescendingItr;.nextNode(Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;)Ljava/util/concurrent/ConcurrentLinkedDeque$Node<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.tail",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator;.trySplit()Ljava/util/Spliterator<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.queue",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.batch",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.exhausted",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.MAX_BATCH",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.CONCURRENT",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.batch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.exhausted",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator;.forEachRemaining(Ljava/util/function/Consumer<-TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.queue",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.exhausted",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.exhausted",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator;.tryAdvance(Ljava/util/function/Consumer<-TE;>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.queue",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.exhausted",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator<E>.exhausted",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque.CLDSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque$CLDSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.CONCURRENT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentLinkedDeque",
		"method name":"spliterator",
		"method key":"Ljava/util/concurrent/ConcurrentLinkedDeque;.spliterator()Ljava/util/Spliterator<TE;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"java.util.concurrent.SynchronousQueue.Transferer",
		"method name":"transfer",
		"method key":"Ljava/util/concurrent/SynchronousQueue$Transferer;.transfer(TE;ZJ)TE;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"isFulfilling",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.isFulfilling(I)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.FULFILLING",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode",
		"method name":"casNext",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.casNext(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.next",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode",
		"method name":"tryMatch",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryMatch(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.matchOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.match",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.waiter",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.waiter",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode",
		"method name":"tryCancel",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.tryCancel()V",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.matchOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode",
		"method name":"isCancelled",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;.isCancelled()Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.match",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"casHead",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.casHead(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.headOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"snode",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.snode(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;Ljava/lang/Object;Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;I)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"transfer",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.transfer(TE;ZJ)TE;",
		"read list":[
			{
				"name":"m.java.util.concurrent.SynchronousQueue.TransferStack.SNode.waiter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxTimedSpins",
				"static label":1
			},
			{
				"name":"p.java.util.concurrent.SynchronousQueue.TransferStack.SNode.next",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.DATA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.REQUEST",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.FULFILLING",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxUntimedSpins",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"h.java.util.concurrent.SynchronousQueue.TransferStack.SNode.match",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.matchOffset",
				"static label":1
			},
			{
				"name":"m.java.util.concurrent.SynchronousQueue.TransferStack.SNode.match",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.spinForTimeoutThreshold",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"m.java.util.concurrent.SynchronousQueue.TransferStack.SNode.waiter",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"awaitFulfill",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.awaitFulfill(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;ZJ)Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxTimedSpins",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.FULFILLING",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxUntimedSpins",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.matchOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.spinForTimeoutThreshold",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"shouldSpin",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.shouldSpin(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.FULFILLING",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferStack",
		"method name":"clean",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferStack;.clean(Ljava/util/concurrent/SynchronousQueue$TransferStack$SNode;)V",
		"read list":[
			{
				"name":"past.java.util.concurrent.SynchronousQueue.TransferStack.SNode.match",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"p.java.util.concurrent.SynchronousQueue.TransferStack.SNode.next",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack.SNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferStack<E>.headOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode",
		"method name":"casNext",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casNext(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.next",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.UNSAFE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode",
		"method name":"casItem",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.casItem(Ljava/lang/Object;Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.item",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.UNSAFE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode",
		"method name":"tryCancel",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.tryCancel(Ljava/lang/Object;)V",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.UNSAFE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode",
		"method name":"isCancelled",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isCancelled()Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.item",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode",
		"method name":"isOffList",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;.isOffList()Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.next",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue",
		"method name":"advanceHead",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceHead(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.UNSAFE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue",
		"method name":"advanceTail",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue;.advanceTail(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.tail",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue",
		"method name":"casCleanMe",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue;.casCleanMe(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.cleanMeOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.cleanMe",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue",
		"method name":"transfer",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue;.transfer(TE;ZJ)TE;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxTimedSpins",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.head",
				"static label":0
			},
			{
				"name":"m.java.util.concurrent.SynchronousQueue.TransferQueue.QNode.item",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.cleanMe",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxUntimedSpins",
				"static label":1
			},
			{
				"name":"t.java.util.concurrent.SynchronousQueue.TransferQueue.QNode.next",
				"static label":0
			},
			{
				"name":"hn.java.util.concurrent.SynchronousQueue.TransferQueue.QNode.item",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.cleanMeOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"s.java.util.concurrent.SynchronousQueue.TransferQueue.QNode.next",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.spinForTimeoutThreshold",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue",
		"method name":"awaitFulfill",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue;.awaitFulfill(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;TE;ZJ)Ljava/lang/Object;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxTimedSpins",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.maxUntimedSpins",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.itemOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.spinForTimeoutThreshold",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue.TransferQueue",
		"method name":"clean",
		"method key":"Ljava/util/concurrent/SynchronousQueue$TransferQueue;.clean(Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;Ljava/util/concurrent/SynchronousQueue$TransferQueue$QNode;)V",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.headOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.head",
				"static label":0
			},
			{
				"name":"pred.java.util.concurrent.SynchronousQueue.TransferQueue.QNode.next",
				"static label":0
			},
			{
				"name":"hn.java.util.concurrent.SynchronousQueue.TransferQueue.QNode.item",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.cleanMeOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.tail",
				"static label":0
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue.QNode.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.SynchronousQueue.TransferQueue<E>.cleanMe",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"put",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.put(TE;)V|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"offer",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.offer(TE;JLjava/util/concurrent/TimeUnit;)Z|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"offer",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.offer(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"take",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.take()TE;|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"poll",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.poll(JLjava/util/concurrent/TimeUnit;)TE;|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"poll",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.poll()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"isEmpty",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.isEmpty()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"size",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.size()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"remainingCapacity",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.remainingCapacity()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"clear",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.clear()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"contains",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.contains(Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.remove(Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"containsAll",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.containsAll(Ljava/util/Collection<*>;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"removeAll",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.removeAll(Ljava/util/Collection<*>;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"retainAll",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.retainAll(Ljava/util/Collection<*>;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"peek",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.peek()TE;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"iterator",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.iterator()Ljava/util/Iterator<TE;>;",
		"read list":[
			{
				"name":"java.util.Collections.EmptyIterator.EMPTY_ITERATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"spliterator",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.spliterator()Ljava/util/Spliterator<TE;>;",
		"read list":[
			{
				"name":"java.util.Spliterators.EMPTY_SPLITERATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.toArray()[Ljava/lang/Object;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.toArray<T:Ljava/lang/Object;>([TT;)[TT;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"drainTo",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.drainTo(Ljava/util/Collection<-TE;>;)I",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"drainTo",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.drainTo(Ljava/util/Collection<-TE;>;I)I",
		"read list":[
			{
				"name":"java.util.concurrent.SynchronousQueue<E>.transferer",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.SynchronousQueue",
		"method name":"objectFieldOffset",
		"method key":"Ljava/util/concurrent/SynchronousQueue;.objectFieldOffset(Lsun/misc/Unsafe;Ljava/lang/String;Ljava/lang/Class<*>;)J",
		"read list":[
			{
				"name":"java.lang.reflect.Modifier.PRIVATE",
				"static label":1
			},
			{
				"name":"java.security.AccessControlContext.debugInit",
				"static label":1
			},
			{
				"name":"java.security.Policy.policy",
				"static label":1
			},
			{
				"name":"Policy.java.security.Policy.PolicyInfo.policy",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isWrapped",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.initted",
				"static label":1
			},
			{
				"name":"java.lang.ref.ReferenceQueue<T>.NULL",
				"static label":1
			},
			{
				"name":"u.java.net.URL.path",
				"static label":0
			},
			{
				"name":"java.lang.ref.SoftReference<T>.clock",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.STRICT",
				"static label":1
			},
			{
				"name":"simpleName.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.System.err",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.hasAllPerm",
				"static label":0
			},
			{
				"name":"sun.security.provider.PolicyFile.DEFAULT_CACHE_SIZE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"perms.java.security.Permissions.allPermission",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.privilegedContext",
				"static label":0
			},
			{
				"name":"java.lang.System.security",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.reflectionDataOffset",
				"static label":1
			},
			{
				"name":"debug.sun.security.util.Debug.prefix",
				"static label":0
			},
			{
				"name":"context[i].java.security.ProtectionDomain.staticPermissions",
				"static label":0
			},
			{
				"name":"Policy.getPolicyNoCheck().java.security.Policy.pdMapping",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.theUnsafe",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.FINAL",
				"static label":1
			},
			{
				"name":"sun.misc.VM.peakFinalRefCount",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.combiner",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isPrivileged",
				"static label":0
			},
			{
				"name":"domain.java.security.ProtectionDomain.permissions",
				"static label":0
			},
			{
				"name":"u.java.net.URL.query",
				"static label":0
			},
			{
				"name":"java.security.AccessControlContext.debug",
				"static label":1
			},
			{
				"name":"u.java.net.URL.ref",
				"static label":0
			},
			{
				"name":"u.java.net.URL.protocol",
				"static label":0
			},
			{
				"name":"sun.misc.SharedSecrets.unsafe",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.SYNCHRONIZED",
				"static label":1
			},
			{
				"name":"fields[i].java.lang.reflect.Field.name",
				"static label":0
			},
			{
				"name":"getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.reflectionFactory",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Member.PUBLIC",
				"static label":1
			},
			{
				"name":"sun.reflect.Reflection.fieldFilterMap",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"sun.misc.VM.finalRefCount",
				"static label":1
			},
			{
				"name":"java.lang.Character.MIN_RADIX",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"perms.java.security.Permissions.hasUnresolved",
				"static label":0
			},
			{
				"name":"java.util.WeakHashMap<K,V>.MAXIMUM_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Member.DECLARED",
				"static label":1
			},
			{
				"name":"java.util.WeakHashMap<K,V>.NULL_KEY",
				"static label":1
			},
			{
				"name":"enclosingClass.getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.NATIVE",
				"static label":1
			},
			{
				"name":"to.java.lang.ClassLoader.parent",
				"static label":0
			},
			{
				"name":"sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isLimited",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.PUBLIC",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.permissions",
				"static label":0
			},
			{
				"name":"e.java.lang.reflect.InvocationTargetException.target",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.VOLATILE",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.unsafe",
				"static label":1
			},
			{
				"name":"enclosingInfo.java.lang.Class.EnclosingMethodInfo.enclosingClass",
				"static label":0
			},
			{
				"name":"sb.toString().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"context[i].java.security.ProtectionDomain.codesource",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.TRANSIENT",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.parent",
				"static label":0
			},
			{
				"name":"java.lang.Character.MAX_RADIX",
				"static label":1
			},
			{
				"name":"u.java.net.URL.authority",
				"static label":0
			},
			{
				"name":"name1.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.PROTECTED",
				"static label":1
			},
			{
				"name":"java.security.Policy.debug",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.INTERFACE",
				"static label":1
			},
			{
				"name":"result.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.Integer.SIZE",
				"static label":1
			},
			{
				"name":"seedUniquifier.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"uc.java.security.UnresolvedPermissionCollection.perms",
				"static label":0
			},
			{
				"name":"java.security.Policy.UNSUPPORTED_EMPTY_COLLECTION",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.STATIC",
				"static label":1
			},
			{
				"name":"sun.security.util.SecurityConstants.CHECK_MEMBER_ACCESS_PERMISSION",
				"static label":1
			},
			{
				"name":"context[i].getCodeSource().java.security.CodeSource.location",
				"static label":0
			},
			{
				"name":"sb.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.ABSTRACT",
				"static label":1
			},
			{
				"name":"sun.security.util.Debug.args",
				"static label":1
			},
			{
				"name":"sun.misc.SharedSecrets.javaSecurityProtectionDomainAccess",
				"static label":1
			},
			{
				"name":"new InstantiationException(getName()).java.lang.Throwable.cause",
				"static label":0
			},
			{
				"name":"java.util.Random.seedUniquifier",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"acc.java.security.AccessControlContext.isLimited",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"java.security.AccessControlContext.debugInit",
				"static label":1
			},
			{
				"name":"Policy.sun.security.provider.PolicyFile.PolicyInfo.pdMapping[]",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.hasUnresolved",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.allPermission",
				"static label":0
			},
			{
				"name":"java.security.AccessControlContext.debug",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.staticPermissions",
				"static label":0
			},
			{
				"name":"sun.misc.VM.finalRefCount",
				"static label":1
			},
			{
				"name":"sun.misc.VM.peakFinalRefCount",
				"static label":1
			},
			{
				"name":"perms.java.security.PermissionsHash.permsMap",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.security.AccessController.doPrivileged",
				"static label":1
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Class.getDeclaredFields0",
				"static label":0
			},
			{
				"name":"java.lang.Class.forName0",
				"static label":1
			},
			{
				"name":"java.security.AccessController.getStackAccessControlContext",
				"static label":1
			},
			{
				"name":"java.lang.Class.getClassLoader0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isArray",
				"static label":0
			},
			{
				"name":"java.lang.Class.getSuperclass",
				"static label":0
			},
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"sun.reflect.Reflection.getClassAccessFlags",
				"static label":1
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			},
			{
				"name":"java.lang.Class.getSigners",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInterface",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Array.multiNewArray",
				"static label":1
			},
			{
				"name":"sun.reflect.Reflection.getCallerClass",
				"static label":1
			},
			{
				"name":"java.lang.String.intern",
				"static label":0
			},
			{
				"name":"java.lang.Class.getDeclaringClass0",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			},
			{
				"name":"java.security.AccessController.getInheritedAccessControlContext",
				"static label":1
			},
			{
				"name":"java.lang.Class.getDeclaredConstructors0",
				"static label":0
			},
			{
				"name":"java.lang.Class.getComponentType",
				"static label":0
			},
			{
				"name":"java.lang.Class.getEnclosingMethod0",
				"static label":0
			}
		]
	}
]
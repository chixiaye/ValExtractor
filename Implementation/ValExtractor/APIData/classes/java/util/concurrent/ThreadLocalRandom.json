[
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"current",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.current()Ljava/util/concurrent/ThreadLocalRandom;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"setSeed",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.setSeed(J)V",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.initialized",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"next",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.next(I)I",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextInt",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextInt()I",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextInt",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextInt(I)I",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadBound",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextInt",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextInt(II)I",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextLong",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextLong()J",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextLong",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextLong(J)J",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadBound",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextLong",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextLong(JJ)J",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextDouble",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextDouble()D",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.DOUBLE_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextDouble",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextDouble(D)D",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadBound",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.DOUBLE_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextDouble",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextDouble(DD)D",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.DOUBLE_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextBoolean",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextBoolean()Z",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextFloat",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextFloat()F",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.FLOAT_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"nextGaussian",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.nextGaussian()D",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.lang.ThreadLocal.ThreadLocalMap.INITIAL_CAPACITY",
				"static label":1
			},
			{
				"name":"map.java.lang.ThreadLocal<>.threadLocalHashCode",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.size",
				"static label":0
			},
			{
				"name":"e.java.lang.ref.Reference<T>.referent",
				"static label":0
			},
			{
				"name":"d.java.lang.Double.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.DOUBLE_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.threshold",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.nextLocalGaussian",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.size",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.threshold",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			},
			{
				"name":"java.lang.StrictMath.sqrt",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"ints",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.ints(J)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadSize",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"ints",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.ints()Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"ints",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.ints(JII)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadSize",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"ints",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.ints(II)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"longs",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.longs(J)Ljava/util/stream/LongStream;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadSize",
				"static label":1
			},
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"longs",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.longs()Ljava/util/stream/LongStream;",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"longs",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.longs(JJJ)Ljava/util/stream/LongStream;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadSize",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"longs",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.longs(JJ)Ljava/util/stream/LongStream;",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"doubles",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.doubles(J)Ljava/util/stream/DoubleStream;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadSize",
				"static label":1
			},
			{
				"name":"java.lang.Double.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"doubles",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.doubles()Ljava/util/stream/DoubleStream;",
		"read list":[
			{
				"name":"java.lang.Double.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"doubles",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.doubles(JDD)Ljava/util/stream/DoubleStream;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadSize",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom",
		"method name":"doubles",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom;.doubles(DD)Ljava/util/stream/DoubleStream;",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.BadRange",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomIntsSpliterator;.trySplit()Ljava/util/concurrent/ThreadLocalRandom$RandomIntsSpliterator;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.origin",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomIntsSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.fence",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomIntsSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomIntsSpliterator;.tryAdvance(Ljava/util/function/IntConsumer;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.origin",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomIntsSpliterator;.forEachRemaining(Ljava/util/function/IntConsumer;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.origin",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomIntsSpliterator.index",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomLongsSpliterator;.trySplit()Ljava/util/concurrent/ThreadLocalRandom$RandomLongsSpliterator;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.origin",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.fence",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomLongsSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.fence",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomLongsSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomLongsSpliterator;.tryAdvance(Ljava/util/function/LongConsumer;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.origin",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomLongsSpliterator;.forEachRemaining(Ljava/util/function/LongConsumer;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.origin",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomLongsSpliterator.index",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomDoublesSpliterator;.trySplit()Ljava/util/concurrent/ThreadLocalRandom$RandomDoublesSpliterator;",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.origin",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomDoublesSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.fence",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomDoublesSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomDoublesSpliterator;.tryAdvance(Ljava/util/function/DoubleConsumer;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.DOUBLE_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.origin",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/concurrent/ThreadLocalRandom$RandomDoublesSpliterator;.forEachRemaining(Ljava/util/function/DoubleConsumer;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.DOUBLE_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.bound",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.fence",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.origin",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.ThreadLocalRandom.RandomDoublesSpliterator.index",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Double.longBitsToDouble",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	}
]
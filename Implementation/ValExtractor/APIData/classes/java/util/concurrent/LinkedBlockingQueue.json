[
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"fullyLock",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.fullyLock()V",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"fullyUnlock",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.fullyUnlock()V",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"size",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.size()I",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"remainingCapacity",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.remainingCapacity()I",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"put",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.put(TE;)V|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notEmpty",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"offer",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.offer(TE;JLjava/util/concurrent/TimeUnit;)Z|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notEmpty",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"offer",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.offer(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notEmpty",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"take",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.take()TE;|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notEmpty",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"poll",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.poll(JLjava/util/concurrent/TimeUnit;)TE;|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notEmpty",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"poll",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.poll()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notEmpty",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"peek",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.peek()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"unlink",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.unlink(Ljava/util/concurrent/LinkedBlockingQueue$Node<TE;>;Ljava/util/concurrent/LinkedBlockingQueue$Node<TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.remove(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"contains",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.contains(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.toArray()[Ljava/lang/Object;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.toArray<T:Ljava/lang/Object;>([TT;)[TT;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Array.multiNewArray",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"toString",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"sb.append(']').java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"clear",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.clear()V",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"drainTo",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.drainTo(Ljava/util/Collection<-TE;>;)I",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"drainTo",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.drainTo(Ljava/util/Collection<-TE;>;I)I",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"iterator",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.iterator()Ljava/util/Iterator<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.Itr",
		"method name":"hasNext",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$Itr;.hasNext()Z",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.current",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.Itr",
		"method name":"next",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$Itr;.next()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.currentElement",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.lastRet",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.currentElement",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.lastRet",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.Itr",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$Itr;.remove()V",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.putLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.notFull",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.capacity",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.takeLock",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.lastRet",
				"static label":0
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.last",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.Itr.lastRet",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$LBQSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.est",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$LBQSpliterator;.trySplit()Ljava/util/Spliterator<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.exhausted",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.queue",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.CONCURRENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.MAX_BATCH",
				"static label":1
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.batch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.est",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.exhausted",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.batch",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.est",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$LBQSpliterator;.forEachRemaining(Ljava/util/function/Consumer<-TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.exhausted",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.queue",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.exhausted",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$LBQSpliterator;.tryAdvance(Ljava/util/function/Consumer<-TE;>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.exhausted",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue<E>.head",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"takeLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"putLock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.current",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.queue",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.exhausted",
				"static label":0
			},
			{
				"name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator<E>.current",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue.LBQSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue$LBQSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.CONCURRENT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.LinkedBlockingQueue",
		"method name":"spliterator",
		"method key":"Ljava/util/concurrent/LinkedBlockingQueue;.spliterator()Ljava/util/Spliterator<TE;>;",
		"read list":[
			{
				"name":"count.java.util.concurrent.atomic.AtomicInteger.value",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"getOrDefault",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.getOrDefault(Ljava/lang/Object;TV;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"forEach",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.forEach(Ljava/util/function/BiConsumer<-TK;-TV;>;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"putIfAbsent",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.putIfAbsent(TK;TV;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.remove(Ljava/lang/Object;Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"replace",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.replace(TK;TV;TV;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"replace",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.replace(TK;TV;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"replaceAll",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.replaceAll(Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"computeIfAbsent",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.computeIfAbsent(TK;Ljava/util/function/Function<-TK;+TV;>;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"computeIfPresent",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.computeIfPresent(TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"compute",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.compute(TK;Ljava/util/function/BiFunction<-TK;-TV;+TV;>;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentMap",
		"method name":"merge",
		"method key":"Ljava/util/concurrent/ConcurrentMap;.merge(TK;TV;Ljava/util/function/BiFunction<-TV;-TV;+TV;>;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
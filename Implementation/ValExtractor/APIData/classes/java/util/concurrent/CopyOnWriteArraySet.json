[
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"size",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.size()I",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"isEmpty",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.isEmpty()Z",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"contains",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.contains(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.toArray()[Ljava/lang/Object;",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"toArray",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.toArray<T:Ljava/lang/Object;>([TT;)[TT;",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"clear",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.clear()V",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.remove(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"add",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.add(TE;)Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"containsAll",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.containsAll(Ljava/util/Collection<*>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"addAll",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.addAll(Ljava/util/Collection<+TE;>;)Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"removeAll",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.removeAll(Ljava/util/Collection<*>;)Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"retainAll",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.retainAll(Ljava/util/Collection<*>;)Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"iterator",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.iterator()Ljava/util/Iterator<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"equals",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.equals(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"removeIf",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.removeIf(Ljava/util/function/Predicate<-TE;>;)Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"lock.java.util.concurrent.locks.ReentrantLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"forEach",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.forEach(Ljava/util/function/Consumer<-TE;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.CopyOnWriteArraySet",
		"method name":"spliterator",
		"method key":"Ljava/util/concurrent/CopyOnWriteArraySet;.spliterator()Ljava/util/Spliterator<TE;>;",
		"read list":[
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.DISTINCT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.CopyOnWriteArraySet<E>.al",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"writeLock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.writeLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.writerLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"readLock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.readLock()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.readerLock",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync",
		"method name":"sharedCount",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.sharedCount(I)I",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_SHIFT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync",
		"method name":"exclusiveCount",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.exclusiveCount(I)I",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.ThreadLocalHoldCounter",
		"method name":"initialValue",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter;.initialValue()Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync$HoldCounter;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync",
		"method name":"readerShouldBlock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.readerShouldBlock()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync",
		"method name":"writerShouldBlock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$Sync;.writerShouldBlock()Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"lock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lock()V",
		"read list":[
			{
				"name":"java.lang.reflect.Modifier.PRIVATE",
				"static label":1
			},
			{
				"name":"Policy.java.security.Policy.PolicyInfo.policy",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"java.lang.ref.ReferenceQueue<T>.NULL",
				"static label":1
			},
			{
				"name":"java.lang.ref.SoftReference<T>.clock",
				"static label":1
			},
			{
				"name":"simpleName.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.System.err",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"sun.security.provider.PolicyFile.DEFAULT_CACHE_SIZE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.privilegedContext",
				"static label":0
			},
			{
				"name":"java.lang.Class.Atomic.reflectionDataOffset",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.staticPermissions",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.FINAL",
				"static label":1
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isPrivileged",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"Thread.currentThread().java.lang.Thread.blockerLock",
				"static label":0
			},
			{
				"name":"u.java.net.URL.ref",
				"static label":0
			},
			{
				"name":"u.java.net.URL.protocol",
				"static label":0
			},
			{
				"name":"sun.misc.SharedSecrets.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.lang.Character.MIN_RADIX",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.WeakHashMap<K,V>.MAXIMUM_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Member.DECLARED",
				"static label":1
			},
			{
				"name":"enclosingClass.getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.NATIVE",
				"static label":1
			},
			{
				"name":"sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.PUBLIC",
				"static label":1
			},
			{
				"name":"sb.toString().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"context[i].java.security.ProtectionDomain.codesource",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.lang.Character.MAX_RADIX",
				"static label":1
			},
			{
				"name":"u.java.net.URL.authority",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"name1.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.PROTECTED",
				"static label":1
			},
			{
				"name":"java.security.Policy.debug",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.INTERFACE",
				"static label":1
			},
			{
				"name":"result.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.Integer.SIZE",
				"static label":1
			},
			{
				"name":"uc.java.security.UnresolvedPermissionCollection.perms",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"sun.security.util.SecurityConstants.CHECK_MEMBER_ACCESS_PERMISSION",
				"static label":1
			},
			{
				"name":"java.lang.SecurityManager.rootGroup",
				"static label":1
			},
			{
				"name":"sun.misc.SharedSecrets.javaSecurityProtectionDomainAccess",
				"static label":1
			},
			{
				"name":"java.util.Random.seedUniquifier",
				"static label":1
			},
			{
				"name":"java.security.AccessControlContext.debugInit",
				"static label":1
			},
			{
				"name":"java.security.Policy.policy",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isWrapped",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.initted",
				"static label":1
			},
			{
				"name":"u.java.net.URL.path",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.STRICT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.hasAllPerm",
				"static label":0
			},
			{
				"name":"s.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"perms.java.security.Permissions.allPermission",
				"static label":0
			},
			{
				"name":"java.lang.System.security",
				"static label":1
			},
			{
				"name":"debug.sun.security.util.Debug.prefix",
				"static label":0
			},
			{
				"name":"Policy.getPolicyNoCheck().java.security.Policy.pdMapping",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.theUnsafe",
				"static label":1
			},
			{
				"name":"sun.misc.VM.peakFinalRefCount",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.combiner",
				"static label":0
			},
			{
				"name":"domain.java.security.ProtectionDomain.permissions",
				"static label":0
			},
			{
				"name":"u.java.net.URL.query",
				"static label":0
			},
			{
				"name":"java.security.AccessControlContext.debug",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.SYNCHRONIZED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.reflectionFactory",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Member.PUBLIC",
				"static label":1
			},
			{
				"name":"Thread.currentThread().java.lang.Thread.blocker",
				"static label":0
			},
			{
				"name":"sun.misc.VM.finalRefCount",
				"static label":1
			},
			{
				"name":"perms.java.security.Permissions.hasUnresolved",
				"static label":0
			},
			{
				"name":"java.util.WeakHashMap<K,V>.NULL_KEY",
				"static label":1
			},
			{
				"name":"to.java.lang.ClassLoader.parent",
				"static label":0
			},
			{
				"name":"stack.java.security.AccessControlContext.isLimited",
				"static label":0
			},
			{
				"name":"context[i].java.security.ProtectionDomain.permissions",
				"static label":0
			},
			{
				"name":"e.java.lang.reflect.InvocationTargetException.target",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.VOLATILE",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.unsafe",
				"static label":1
			},
			{
				"name":"enclosingInfo.java.lang.Class.EnclosingMethodInfo.enclosingClass",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.TRANSIENT",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.parent",
				"static label":0
			},
			{
				"name":"seedUniquifier.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"java.security.Policy.UNSUPPORTED_EMPTY_COLLECTION",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.STATIC",
				"static label":1
			},
			{
				"name":"context[i].getCodeSource().java.security.CodeSource.location",
				"static label":0
			},
			{
				"name":"sb.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.ABSTRACT",
				"static label":1
			},
			{
				"name":"sun.security.util.Debug.args",
				"static label":1
			},
			{
				"name":"new InstantiationException(getName()).java.lang.Throwable.cause",
				"static label":0
			},
			{
				"name":"sun.security.util.SecurityConstants.MODIFY_THREADGROUP_PERMISSION",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"acc.java.security.AccessControlContext.isLimited",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"java.security.AccessControlContext.debugInit",
				"static label":1
			},
			{
				"name":"Policy.sun.security.provider.PolicyFile.PolicyInfo.pdMapping[]",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.hasUnresolved",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.allPermission",
				"static label":0
			},
			{
				"name":"java.security.AccessControlContext.debug",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.staticPermissions",
				"static label":0
			},
			{
				"name":"sun.misc.VM.finalRefCount",
				"static label":1
			},
			{
				"name":"sun.misc.VM.peakFinalRefCount",
				"static label":1
			},
			{
				"name":"perms.java.security.PermissionsHash.permsMap",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.security.AccessController.doPrivileged",
				"static label":1
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			},
			{
				"name":"java.lang.Class.forName0",
				"static label":1
			},
			{
				"name":"java.lang.Thread.interrupt0",
				"static label":0
			},
			{
				"name":"java.security.AccessController.getStackAccessControlContext",
				"static label":1
			},
			{
				"name":"java.lang.Class.getClassLoader0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isArray",
				"static label":0
			},
			{
				"name":"java.lang.Class.getSuperclass",
				"static label":0
			},
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"sun.reflect.Reflection.getClassAccessFlags",
				"static label":1
			},
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			},
			{
				"name":"java.lang.Class.getSigners",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInterface",
				"static label":0
			},
			{
				"name":"sun.reflect.Reflection.getCallerClass",
				"static label":1
			},
			{
				"name":"java.lang.Class.getDeclaringClass0",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			},
			{
				"name":"java.security.AccessController.getInheritedAccessControlContext",
				"static label":1
			},
			{
				"name":"java.lang.Class.getDeclaredConstructors0",
				"static label":0
			},
			{
				"name":"java.lang.Class.getComponentType",
				"static label":0
			},
			{
				"name":"java.lang.Class.getEnclosingMethod0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"lockInterruptibly",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.lockInterruptibly()V|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"s.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"tryLock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.tryLock()Z",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.firstReaderHoldCount",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_SHIFT",
				"static label":1
			},
			{
				"name":"map.java.lang.ThreadLocal<>.threadLocalHashCode",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.cachedHoldCounter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.TID_OFFSET",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			},
			{
				"name":"e.java.lang.ref.Reference<T>.referent",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.MAX_COUNT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_UNIT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.lang.ThreadLocal.ThreadLocalMap.INITIAL_CAPACITY",
				"static label":1
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.size",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.readHolds",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.sync",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.firstReader",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.threshold",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.stateOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.firstReaderHoldCount",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.cachedHoldCounter",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.size",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.firstReader",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.threshold",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"tryLock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.tryLock(JLjava/util/concurrent/TimeUnit;)Z|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.spinForTimeoutThreshold",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"s.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"unlock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.unlock()V",
		"read list":[
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.PROPAGATE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"newCondition",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.newCondition()Ljava/util/concurrent/locks/Condition;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock",
		"method name":"toString",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_SHIFT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"lock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lock()V",
		"read list":[
			{
				"name":"java.lang.reflect.Modifier.PRIVATE",
				"static label":1
			},
			{
				"name":"java.security.AccessControlContext.debugInit",
				"static label":1
			},
			{
				"name":"java.security.Policy.policy",
				"static label":1
			},
			{
				"name":"Policy.java.security.Policy.PolicyInfo.policy",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isWrapped",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.initted",
				"static label":1
			},
			{
				"name":"java.lang.ref.ReferenceQueue<T>.NULL",
				"static label":1
			},
			{
				"name":"u.java.net.URL.path",
				"static label":0
			},
			{
				"name":"java.lang.ref.SoftReference<T>.clock",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.STRICT",
				"static label":1
			},
			{
				"name":"simpleName.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.System.err",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.hasAllPerm",
				"static label":0
			},
			{
				"name":"sun.security.provider.PolicyFile.DEFAULT_CACHE_SIZE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"perms.java.security.Permissions.allPermission",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.privilegedContext",
				"static label":0
			},
			{
				"name":"java.lang.System.security",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.reflectionDataOffset",
				"static label":1
			},
			{
				"name":"debug.sun.security.util.Debug.prefix",
				"static label":0
			},
			{
				"name":"context[i].java.security.ProtectionDomain.staticPermissions",
				"static label":0
			},
			{
				"name":"Policy.getPolicyNoCheck().java.security.Policy.pdMapping",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.theUnsafe",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.FINAL",
				"static label":1
			},
			{
				"name":"sun.misc.VM.peakFinalRefCount",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.combiner",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isPrivileged",
				"static label":0
			},
			{
				"name":"domain.java.security.ProtectionDomain.permissions",
				"static label":0
			},
			{
				"name":"u.java.net.URL.query",
				"static label":0
			},
			{
				"name":"Thread.currentThread().java.lang.Thread.blockerLock",
				"static label":0
			},
			{
				"name":"java.security.AccessControlContext.debug",
				"static label":1
			},
			{
				"name":"u.java.net.URL.ref",
				"static label":0
			},
			{
				"name":"u.java.net.URL.protocol",
				"static label":0
			},
			{
				"name":"sun.misc.SharedSecrets.unsafe",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.SYNCHRONIZED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.reflectionFactory",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Member.PUBLIC",
				"static label":1
			},
			{
				"name":"Thread.currentThread().java.lang.Thread.blocker",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"sun.misc.VM.finalRefCount",
				"static label":1
			},
			{
				"name":"java.lang.Character.MIN_RADIX",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.hasUnresolved",
				"static label":0
			},
			{
				"name":"java.util.WeakHashMap<K,V>.MAXIMUM_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Member.DECLARED",
				"static label":1
			},
			{
				"name":"java.util.WeakHashMap<K,V>.NULL_KEY",
				"static label":1
			},
			{
				"name":"enclosingClass.getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.NATIVE",
				"static label":1
			},
			{
				"name":"to.java.lang.ClassLoader.parent",
				"static label":0
			},
			{
				"name":"sun.security.util.SecurityConstants.GET_CLASSLOADER_PERMISSION",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.isLimited",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.PUBLIC",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.permissions",
				"static label":0
			},
			{
				"name":"e.java.lang.reflect.InvocationTargetException.target",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.VOLATILE",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.unsafe",
				"static label":1
			},
			{
				"name":"enclosingInfo.java.lang.Class.EnclosingMethodInfo.enclosingClass",
				"static label":0
			},
			{
				"name":"sb.toString().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"context[i].java.security.ProtectionDomain.codesource",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.TRANSIENT",
				"static label":1
			},
			{
				"name":"stack.java.security.AccessControlContext.parent",
				"static label":0
			},
			{
				"name":"java.lang.Character.MAX_RADIX",
				"static label":1
			},
			{
				"name":"u.java.net.URL.authority",
				"static label":0
			},
			{
				"name":"name1.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.PROTECTED",
				"static label":1
			},
			{
				"name":"java.security.Policy.debug",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.INTERFACE",
				"static label":1
			},
			{
				"name":"result.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.Integer.SIZE",
				"static label":1
			},
			{
				"name":"seedUniquifier.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"uc.java.security.UnresolvedPermissionCollection.perms",
				"static label":0
			},
			{
				"name":"java.security.Policy.UNSUPPORTED_EMPTY_COLLECTION",
				"static label":1
			},
			{
				"name":"java.lang.reflect.Modifier.STATIC",
				"static label":1
			},
			{
				"name":"sun.security.util.SecurityConstants.CHECK_MEMBER_ACCESS_PERMISSION",
				"static label":1
			},
			{
				"name":"context[i].getCodeSource().java.security.CodeSource.location",
				"static label":0
			},
			{
				"name":"sb.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"java.lang.reflect.Modifier.ABSTRACT",
				"static label":1
			},
			{
				"name":"java.lang.SecurityManager.rootGroup",
				"static label":1
			},
			{
				"name":"sun.security.util.Debug.args",
				"static label":1
			},
			{
				"name":"sun.misc.SharedSecrets.javaSecurityProtectionDomainAccess",
				"static label":1
			},
			{
				"name":"new InstantiationException(getName()).java.lang.Throwable.cause",
				"static label":0
			},
			{
				"name":"sun.security.util.SecurityConstants.MODIFY_THREADGROUP_PERMISSION",
				"static label":1
			},
			{
				"name":"java.util.Random.seedUniquifier",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"acc.java.security.AccessControlContext.isLimited",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"java.security.AccessControlContext.debugInit",
				"static label":1
			},
			{
				"name":"Policy.sun.security.provider.PolicyFile.PolicyInfo.pdMapping[]",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.hasUnresolved",
				"static label":0
			},
			{
				"name":"perms.java.security.Permissions.allPermission",
				"static label":0
			},
			{
				"name":"java.security.AccessControlContext.debug",
				"static label":1
			},
			{
				"name":"context[i].java.security.ProtectionDomain.staticPermissions",
				"static label":0
			},
			{
				"name":"sun.misc.VM.finalRefCount",
				"static label":1
			},
			{
				"name":"sun.misc.VM.peakFinalRefCount",
				"static label":1
			},
			{
				"name":"perms.java.security.PermissionsHash.permsMap",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.security.AccessController.doPrivileged",
				"static label":1
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			},
			{
				"name":"java.lang.Class.forName0",
				"static label":1
			},
			{
				"name":"java.lang.Thread.interrupt0",
				"static label":0
			},
			{
				"name":"java.security.AccessController.getStackAccessControlContext",
				"static label":1
			},
			{
				"name":"java.lang.Class.getClassLoader0",
				"static label":0
			},
			{
				"name":"java.lang.Class.isArray",
				"static label":0
			},
			{
				"name":"java.lang.Class.getSuperclass",
				"static label":0
			},
			{
				"name":"java.lang.System.arraycopy",
				"static label":1
			},
			{
				"name":"sun.reflect.Reflection.getClassAccessFlags",
				"static label":1
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			},
			{
				"name":"java.lang.Class.getSigners",
				"static label":0
			},
			{
				"name":"java.lang.Class.isInterface",
				"static label":0
			},
			{
				"name":"sun.reflect.Reflection.getCallerClass",
				"static label":1
			},
			{
				"name":"java.lang.Class.getDeclaringClass0",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			},
			{
				"name":"java.security.AccessController.getInheritedAccessControlContext",
				"static label":1
			},
			{
				"name":"java.lang.Class.getDeclaredConstructors0",
				"static label":0
			},
			{
				"name":"java.lang.Class.getComponentType",
				"static label":0
			},
			{
				"name":"java.lang.Class.getEnclosingMethod0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"lockInterruptibly",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.lockInterruptibly()V|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"tryLock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.tryLock()Z",
		"read list":[
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.MAX_COUNT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.stateOffset",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractOwnableSynchronizer.exclusiveOwnerThread",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"tryLock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.tryLock(JLjava/util/concurrent/TimeUnit;)Z|Ljava/lang/InterruptedException;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.tailOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.EXCLUSIVE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SIGNAL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CANCELLED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.spinForTimeoutThreshold",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			},
			{
				"name":"node.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.prev",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.isInterrupted",
				"static label":0
			},
			{
				"name":"java.lang.System.nanoTime",
				"static label":1
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"unlock",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.unlock()V",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.head",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.waitStatusOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"newCondition",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.newCondition()Ljava/util/concurrent/locks/Condition;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"toString",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"isHeldByCurrentThread",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.isHeldByCurrentThread()Z",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock",
		"method name":"getHoldCount",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;.getHoldCount()I",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getOwner",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getOwner()Ljava/lang/Thread;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getReadLockCount",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadLockCount()I",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_SHIFT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"isWriteLocked",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.isWriteLocked()Z",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"isWriteLockedByCurrentThread",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.isWriteLockedByCurrentThread()Z",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getWriteHoldCount",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWriteHoldCount()I",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getReadHoldCount",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getReadHoldCount()I",
		"read list":[
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.firstReaderHoldCount",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_SHIFT",
				"static label":1
			},
			{
				"name":"map.java.lang.ThreadLocal<>.threadLocalHashCode",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.cachedHoldCounter",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.TID_OFFSET",
				"static label":1
			},
			{
				"name":"e.java.lang.ref.Reference<T>.referent",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.lang.ThreadLocal.ThreadLocalMap.INITIAL_CAPACITY",
				"static label":1
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.readHolds",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.size",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.ReentrantReadWriteLock.Sync.firstReader",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.threshold",
				"static label":0
			},
			{
				"name":"m.java.lang.ThreadLocal<>.threadLocalHashCode",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.size",
				"static label":0
			},
			{
				"name":"map.java.lang.ThreadLocal.ThreadLocalMap.threshold",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getQueuedWriterThreads",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueuedWriterThreads()Ljava/util/Collection<Ljava/lang/Thread;>;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"p.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.tail",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getQueuedReaderThreads",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueuedReaderThreads()Ljava/util/Collection<Ljava/lang/Thread;>;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"p.java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.nextWaiter",
				"static label":0
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.tail",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.SHARED",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getQueuedThreads",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getQueuedThreads()Ljava/util/Collection<Ljava/lang/Thread;>;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"sync.java.util.concurrent.locks.AbstractQueuedSynchronizer.tail",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"hasWaiters",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.hasWaiters(Ljava/util/concurrent/locks/Condition;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CONDITION",
				"static label":1
			},
			{
				"name":"condition.java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.firstWaiter",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getWaitQueueLength",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWaitQueueLength(Ljava/util/concurrent/locks/Condition;)I",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CONDITION",
				"static label":1
			},
			{
				"name":"condition.java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.firstWaiter",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"getWaitingThreads",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.getWaitingThreads(Ljava/util/concurrent/locks/Condition;)Ljava/util/Collection<Ljava/lang/Thread;>;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.AbstractQueuedSynchronizer.Node.CONDITION",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"condition.java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject.firstWaiter",
				"static label":0
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.ReentrantReadWriteLock",
		"method name":"toString",
		"method key":"Ljava/util/concurrent/locks/ReentrantReadWriteLock;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.sync",
				"static label":0
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.SHARED_SHIFT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.ReentrantReadWriteLock.Sync.EXCLUSIVE_MASK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	}
]
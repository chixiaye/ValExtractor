[
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"await",
		"method key":"Ljava/util/concurrent/locks/Condition;.await()V|Ljava/lang/InterruptedException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"awaitUninterruptibly",
		"method key":"Ljava/util/concurrent/locks/Condition;.awaitUninterruptibly()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"awaitNanos",
		"method key":"Ljava/util/concurrent/locks/Condition;.awaitNanos(J)J|Ljava/lang/InterruptedException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"await",
		"method key":"Ljava/util/concurrent/locks/Condition;.await(JLjava/util/concurrent/TimeUnit;)Z|Ljava/lang/InterruptedException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"awaitUntil",
		"method key":"Ljava/util/concurrent/locks/Condition;.awaitUntil(Ljava/util/Date;)Z|Ljava/lang/InterruptedException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"signal",
		"method key":"Ljava/util/concurrent/locks/Condition;.signal()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.locks.Condition",
		"method name":"signalAll",
		"method key":"Ljava/util/concurrent/locks/Condition;.signalAll()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
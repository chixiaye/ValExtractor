[
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"clone",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.clone()Ljava/util/concurrent/ConcurrentSkipListSet<TE;>;",
		"read list":[
			{
				"name":"java.util.ArrayList<E>.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.EMPTY_ELEMENTDATA[]",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListMap<K,V>.BASE_HEADER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.instance",
				"static label":1
			},
			{
				"name":"java.util.ArrayList<E>.DEFAULT_CAPACITY",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.mapOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.GAMMA",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			}
		]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"size",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.size()I",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"isEmpty",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.isEmpty()Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"contains",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.contains(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"add",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.add(TE;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			},
			{
				"name":"java.lang.Boolean.TRUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"remove",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.remove(Ljava/lang/Object;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			},
			{
				"name":"java.lang.Boolean.TRUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"clear",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.clear()V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"iterator",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.iterator()Ljava/util/Iterator<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"descendingIterator",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.descendingIterator()Ljava/util/Iterator<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"equals",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.equals(Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"removeAll",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.removeAll(Ljava/util/Collection<*>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			},
			{
				"name":"java.lang.Boolean.TRUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"lower",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.lower(TE;)TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"floor",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.floor(TE;)TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"ceiling",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.ceiling(TE;)TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"higher",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.higher(TE;)TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"pollFirst",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.pollFirst()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"pollLast",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.pollLast()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"comparator",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.comparator()Ljava/util/Comparator<-TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"first",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.first()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"last",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.last()TE;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"subSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.subSet(TE;ZTE;Z)Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"headSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.headSet(TE;Z)Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"tailSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet(TE;Z)Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"subSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.subSet(TE;TE;)Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"headSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.headSet(TE;)Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"tailSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.tailSet(TE;)Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"descendingSet",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.descendingSet()Ljava/util/NavigableSet<TE;>;",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.concurrent.ConcurrentSkipListSet",
		"method name":"spliterator",
		"method key":"Ljava/util/concurrent/ConcurrentSkipListSet;.spliterator()Ljava/util/Spliterator<TE;>;",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListMap.Node<K,V>.nextOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListMap.Node<K,V>.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentSkipListSet<E>.m",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
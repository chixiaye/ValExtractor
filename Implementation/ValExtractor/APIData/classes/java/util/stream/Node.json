[
	{
		"class name":"java.util.stream.Node",
		"method name":"spliterator",
		"method key":"Ljava/util/stream/Node;.spliterator()Ljava/util/Spliterator<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"forEach",
		"method key":"Ljava/util/stream/Node;.forEach(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"getChildCount",
		"method key":"Ljava/util/stream/Node;.getChildCount()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"getChild",
		"method key":"Ljava/util/stream/Node;.getChild(I)Ljava/util/stream/Node<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"truncate",
		"method key":"Ljava/util/stream/Node;.truncate(JJLjava/util/function/IntFunction<[TT;>;)Ljava/util/stream/Node<TT;>;",
		"read list":[
			{
				"name":"java.util.stream.Nodes.MAX_ARRAY_SIZE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"asArray",
		"method key":"Ljava/util/stream/Node;.asArray(Ljava/util/function/IntFunction<[TT;>;)[TT;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"copyInto",
		"method key":"Ljava/util/stream/Node;.copyInto([TT;I)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"getShape",
		"method key":"Ljava/util/stream/Node;.getShape()Ljava/util/stream/StreamShape;",
		"read list":[
			{
				"name":"java.util.stream.StreamShape.REFERENCE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node",
		"method name":"count",
		"method key":"Ljava/util/stream/Node;.count()J",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.Builder",
		"method name":"build",
		"method key":"Ljava/util/stream/Node$Builder;.build()Ljava/util/stream/Node<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.Builder.OfInt",
		"method name":"build",
		"method key":"Ljava/util/stream/Node$Builder$OfInt;.build()Ljava/util/stream/Node$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.Builder.OfLong",
		"method name":"build",
		"method key":"Ljava/util/stream/Node$Builder$OfLong;.build()Ljava/util/stream/Node$OfLong;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.Builder.OfDouble",
		"method name":"build",
		"method key":"Ljava/util/stream/Node$Builder$OfDouble;.build()Ljava/util/stream/Node$OfDouble;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"spliterator",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.spliterator()TT_SPLITR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"forEach",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.forEach(TT_CONS;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"getChild",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.getChild(I)TT_NODE;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"truncate",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.truncate(JJLjava/util/function/IntFunction<[TT;>;)TT_NODE;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"asArray",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.asArray(Ljava/util/function/IntFunction<[TT;>;)[TT;",
		"read list":[
			{
				"name":"java.util.stream.Nodes.MAX_ARRAY_SIZE",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"java.util.stream.Nodes.BAD_SIZE",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"asPrimitiveArray",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.asPrimitiveArray()TT_ARR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"newArray",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.newArray(I)TT_ARR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfPrimitive",
		"method name":"copyInto",
		"method key":"Ljava/util/stream/Node$OfPrimitive;.copyInto(TT_ARR;I)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfInt",
		"method name":"forEach",
		"method key":"Ljava/util/stream/Node$OfInt;.forEach(Ljava/util/function/Consumer<-Ljava/lang/Integer;>;)V",
		"read list":[
			{
				"name":"java.util.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfInt",
		"method name":"copyInto",
		"method key":"Ljava/util/stream/Node$OfInt;.copyInto([Ljava/lang/Integer;I)V",
		"read list":[
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfInt",
		"method name":"truncate",
		"method key":"Ljava/util/stream/Node$OfInt;.truncate(JJLjava/util/function/IntFunction<[Ljava/lang/Integer;>;)Ljava/util/stream/Node$OfInt;",
		"read list":[
			{
				"name":"java.util.stream.Nodes.MAX_ARRAY_SIZE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfInt",
		"method name":"newArray",
		"method key":"Ljava/util/stream/Node$OfInt;.newArray(I)[I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfInt",
		"method name":"getShape",
		"method key":"Ljava/util/stream/Node$OfInt;.getShape()Ljava/util/stream/StreamShape;",
		"read list":[
			{
				"name":"java.util.stream.StreamShape.INT_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfLong",
		"method name":"forEach",
		"method key":"Ljava/util/stream/Node$OfLong;.forEach(Ljava/util/function/Consumer<-Ljava/lang/Long;>;)V",
		"read list":[
			{
				"name":"java.util.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfLong",
		"method name":"copyInto",
		"method key":"Ljava/util/stream/Node$OfLong;.copyInto([Ljava/lang/Long;I)V",
		"read list":[
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfLong",
		"method name":"truncate",
		"method key":"Ljava/util/stream/Node$OfLong;.truncate(JJLjava/util/function/IntFunction<[Ljava/lang/Long;>;)Ljava/util/stream/Node$OfLong;",
		"read list":[
			{
				"name":"java.util.stream.Nodes.MAX_ARRAY_SIZE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfLong",
		"method name":"newArray",
		"method key":"Ljava/util/stream/Node$OfLong;.newArray(I)[J",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfLong",
		"method name":"getShape",
		"method key":"Ljava/util/stream/Node$OfLong;.getShape()Ljava/util/stream/StreamShape;",
		"read list":[
			{
				"name":"java.util.stream.StreamShape.LONG_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfDouble",
		"method name":"forEach",
		"method key":"Ljava/util/stream/Node$OfDouble;.forEach(Ljava/util/function/Consumer<-Ljava/lang/Double;>;)V",
		"read list":[
			{
				"name":"java.util.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfDouble",
		"method name":"copyInto",
		"method key":"Ljava/util/stream/Node$OfDouble;.copyInto([Ljava/lang/Double;I)V",
		"read list":[
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.loggerProxy",
				"static label":0
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggingEnabled",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.DEFAULT_LEVEL",
				"static label":1
			},
			{
				"name":"java.util.stream.Tripwire.ENABLED",
				"static label":1
			},
			{
				"name":"sun.util.logging.PlatformLogger.loggers",
				"static label":1
			},
			{
				"name":"PlatformLogger.sun.util.logging.PlatformLogger.javaLoggerProxy",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.Node.OfDouble",
		"method name":"truncate",
		"method key":"Ljava/util/stream/Node$OfDouble;.truncate(JJLjava/util/function/IntFunction<[Ljava/lang/Double;>;)Ljava/util/stream/Node$OfDouble;",
		"read list":[
			{
				"name":"java.util.stream.Nodes.MAX_ARRAY_SIZE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfDouble",
		"method name":"newArray",
		"method key":"Ljava/util/stream/Node$OfDouble;.newArray(I)[D",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Node.OfDouble",
		"method name":"getShape",
		"method key":"Ljava/util/stream/Node$OfDouble;.getShape()Ljava/util/stream/StreamShape;",
		"read list":[
			{
				"name":"java.util.stream.StreamShape.DOUBLE_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	}
]
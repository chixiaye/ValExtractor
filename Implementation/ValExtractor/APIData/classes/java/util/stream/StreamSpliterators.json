[
	{
		"class name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator",
		"method name":"wrap",
		"method key":"Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;.wrap(Ljava/util/Spliterator<TP_IN;>;)Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator<TP_IN;TP_OUT;*>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator",
		"method name":"initPartialTraversalState",
		"method key":"Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;.initPartialTraversalState()V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;.trySplit()Ljava/util/Spliterator<TP_OUT;>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.isParallel",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator",
		"method name":"getComparator",
		"method key":"Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator;.getComparator()Ljava/util/Comparator<-TP_OUT;>;",
		"read list":[
			{
				"name":"java.util.Spliterator<P_OUT>.SORTED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.WrappingSpliterator",
		"method name":"wrap",
		"method key":"Ljava/util/stream/StreamSpliterators$WrappingSpliterator;.wrap(Ljava/util/Spliterator<TP_IN;>;)Ljava/util/stream/StreamSpliterators$WrappingSpliterator<TP_IN;TP_OUT;>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.ph",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.isParallel",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.WrappingSpliterator",
		"method name":"initPartialTraversalState",
		"method key":"Ljava/util/stream/StreamSpliterators$WrappingSpliterator;.initPartialTraversalState()V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.ph",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.buffer",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.WrappingSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$WrappingSpliterator;.tryAdvance(Ljava/util/function/Consumer<-TP_OUT;>;)Z",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.WrappingSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$WrappingSpliterator;.forEachRemaining(Ljava/util/function/Consumer<-TP_OUT;>;)V",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.ph",
				"static label":0
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.finished",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,java.util.stream.SpinedBuffer<P_OUT>>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.IntWrappingSpliterator",
		"method name":"wrap",
		"method key":"Ljava/util/stream/StreamSpliterators$IntWrappingSpliterator;.wrap(Ljava/util/Spliterator<TP_IN;>;)Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator<TP_IN;Ljava/lang/Integer;*>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.ph",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.isParallel",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.IntWrappingSpliterator",
		"method name":"initPartialTraversalState",
		"method key":"Ljava/util/stream/StreamSpliterators$IntWrappingSpliterator;.initPartialTraversalState()V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.ph",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.buffer",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.IntWrappingSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$IntWrappingSpliterator;.trySplit()Ljava/util/Spliterator$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.IntWrappingSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$IntWrappingSpliterator;.tryAdvance(Ljava/util/function/IntConsumer;)Z",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.IntWrappingSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$IntWrappingSpliterator;.forEachRemaining(Ljava/util/function/IntConsumer;)V",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.ph",
				"static label":0
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.finished",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Integer,java.util.stream.SpinedBuffer.OfInt>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.LongWrappingSpliterator",
		"method name":"wrap",
		"method key":"Ljava/util/stream/StreamSpliterators$LongWrappingSpliterator;.wrap(Ljava/util/Spliterator<TP_IN;>;)Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator<TP_IN;Ljava/lang/Long;*>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.isParallel",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.ph",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.LongWrappingSpliterator",
		"method name":"initPartialTraversalState",
		"method key":"Ljava/util/stream/StreamSpliterators$LongWrappingSpliterator;.initPartialTraversalState()V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.ph",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.pusher",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.pusher",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.LongWrappingSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$LongWrappingSpliterator;.trySplit()Ljava/util/Spliterator$OfLong;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.LongWrappingSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$LongWrappingSpliterator;.tryAdvance(Ljava/util/function/LongConsumer;)Z",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.buffer",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.LongWrappingSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$LongWrappingSpliterator;.forEachRemaining(Ljava/util/function/LongConsumer;)V",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.ph",
				"static label":0
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.finished",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Long,java.util.stream.SpinedBuffer.OfLong>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DoubleWrappingSpliterator",
		"method name":"wrap",
		"method key":"Ljava/util/stream/StreamSpliterators$DoubleWrappingSpliterator;.wrap(Ljava/util/Spliterator<TP_IN;>;)Ljava/util/stream/StreamSpliterators$AbstractWrappingSpliterator<TP_IN;Ljava/lang/Double;*>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.ph",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.isParallel",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DoubleWrappingSpliterator",
		"method name":"initPartialTraversalState",
		"method key":"Ljava/util/stream/StreamSpliterators$DoubleWrappingSpliterator;.initPartialTraversalState()V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.ph",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.spliterator",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.bufferSink",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.pusher",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DoubleWrappingSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$DoubleWrappingSpliterator;.trySplit()Ljava/util/Spliterator$OfDouble;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DoubleWrappingSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$DoubleWrappingSpliterator;.tryAdvance(Ljava/util/function/DoubleConsumer;)Z",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.nextToConsume",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DoubleWrappingSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$DoubleWrappingSpliterator;.forEachRemaining(Ljava/util/function/DoubleConsumer;)V",
		"read list":[
			{
				"name":"java.lang.Integer.DigitOnes[]",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.pusher",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.bufferSink",
				"static label":0
			},
			{
				"name":"java.lang.Integer.DigitTens[]",
				"static label":1
			},
			{
				"name":"java.lang.Integer.digits[]",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.ph",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.nextToConsume",
				"static label":0
			},
			{
				"name":"Long.java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.nextToConsume",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,java.lang.Double,java.util.stream.SpinedBuffer.OfDouble>.finished",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.spliteratorSupplier",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.AbstractWrappingSpliterator<P_IN,P_OUT,T_BUFFER>.finished",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"get",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.get()TT_SPLITR;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.trySplit()TT_SPLITR;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.forEachRemaining(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"getComparator",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.getComparator()Ljava/util/Comparator<-TT;>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"getExactSizeIfKnown",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.getExactSizeIfKnown()J",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			},
			{
				"name":"java.util.Spliterator<T>.SIZED",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator",
		"method name":"toString",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator;.toString()Ljava/lang/String;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator.OfPrimitive",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator$OfPrimitive;.tryAdvance(TT_CONS;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DelegatingSpliterator.OfPrimitive",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$DelegatingSpliterator$OfPrimitive;.forEachRemaining(TT_CONS;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.supplier",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.DelegatingSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator;.makeSpliterator(TT_SPLITR;JJJJ)TT_SPLITR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator;.trySplit()TT_SPLITR;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.sliceOrigin",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.sliceFence",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.fence",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.fence",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.sliceOrigin",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.fence",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfRef",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfRef;.makeSpliterator(Ljava/util/Spliterator<TT;>;JJJJ)Ljava/util/Spliterator<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfRef",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfRef;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.sliceOrigin",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.fence",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.s",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfRef",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfRef;.forEachRemaining(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.sliceFence",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.sliceOrigin",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.fence",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.s",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,java.util.Spliterator<T>>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;.tryAdvance(TT_CONS;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.sliceOrigin",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.fence",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;.forEachRemaining(TT_CONS;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.sliceOrigin",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.sliceFence",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.fence",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.SliceSpliterator<T,T_SPLITR>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfPrimitive",
		"method name":"emptyConsumer",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfPrimitive;.emptyConsumer()TT_CONS;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfInt",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfInt;.makeSpliterator(Ljava/util/Spliterator$OfInt;JJJJ)Ljava/util/Spliterator$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfInt",
		"method name":"emptyConsumer",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfInt;.emptyConsumer()Ljava/util/function/IntConsumer;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfLong",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfLong;.makeSpliterator(Ljava/util/Spliterator$OfLong;JJJJ)Ljava/util/Spliterator$OfLong;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfLong",
		"method name":"emptyConsumer",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfLong;.emptyConsumer()Ljava/util/function/LongConsumer;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfDouble",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfDouble;.makeSpliterator(Ljava/util/Spliterator$OfDouble;JJJJ)Ljava/util/Spliterator$OfDouble;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.SliceSpliterator.OfDouble",
		"method name":"emptyConsumer",
		"method key":"Ljava/util/stream/StreamSpliterators$SliceSpliterator$OfDouble;.emptyConsumer()Ljava/util/function/DoubleConsumer;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator;.makeSpliterator(TT_SPLITR;)TT_SPLITR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,java.util.Spliterator<T>>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.MAYBE_MORE",
				"static label":1
			},
			{
				"name":"permits.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.UNLIMITED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef<T>.tmpSlot",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.permits",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.unlimited",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.NO_MORE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.skipThreshold",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef<T>.tmpSlot",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef;.forEachRemaining(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,java.util.Spliterator<T>>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.MAYBE_MORE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,java.util.Spliterator<T>>.CHUNK_SIZE",
				"static label":1
			},
			{
				"name":"permits.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.UNLIMITED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.permits",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.unlimited",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.NO_MORE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.skipThreshold",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfRef",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfRef;.makeSpliterator(Ljava/util/Spliterator<TT;>;)Ljava/util/Spliterator<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive;.tryAdvance(TT_CONS;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.MAYBE_MORE",
				"static label":1
			},
			{
				"name":"permits.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.UNLIMITED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.permits",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.unlimited",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.NO_MORE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.skipThreshold",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive",
		"method name":"acceptConsumed",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive;.acceptConsumed(TT_CONS;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive;.forEachRemaining(TT_CONS;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.MAYBE_MORE",
				"static label":1
			},
			{
				"name":"permits.java.util.concurrent.atomic.AtomicLong.value",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.UNLIMITED",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.permits",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.unlimited",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.PermitStatus.NO_MORE",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.CHUNK_SIZE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator<T,T_SPLITR>.skipThreshold",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfPrimitive",
		"method name":"bufferCreate",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfPrimitive;.bufferCreate(I)TT_BUFF;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfInt;.accept(I)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt.tmpValue",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt.tmpValue",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt",
		"method name":"acceptConsumed",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfInt;.acceptConsumed(Ljava/util/function/IntConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt.tmpValue",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt",
		"method name":"bufferCreate",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfInt;.bufferCreate(I)Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfInt",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfInt;.makeSpliterator(Ljava/util/Spliterator$OfInt;)Ljava/util/Spliterator$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfLong;.accept(J)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong.tmpValue",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong.tmpValue",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong",
		"method name":"acceptConsumed",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfLong;.acceptConsumed(Ljava/util/function/LongConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong.tmpValue",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong",
		"method name":"bufferCreate",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfLong;.bufferCreate(I)Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfLong;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfLong",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfLong;.makeSpliterator(Ljava/util/Spliterator$OfLong;)Ljava/util/Spliterator$OfLong;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfDouble;.accept(D)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble.tmpValue",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble.tmpValue",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble",
		"method name":"acceptConsumed",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfDouble;.acceptConsumed(Ljava/util/function/DoubleConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble.tmpValue",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble",
		"method name":"bufferCreate",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfDouble;.bufferCreate(I)Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfDouble;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.UnorderedSliceSpliterator.OfDouble",
		"method name":"makeSpliterator",
		"method key":"Ljava/util/stream/StreamSpliterators$UnorderedSliceSpliterator$OfDouble;.makeSpliterator(Ljava/util/Spliterator$OfDouble;)Ljava/util/Spliterator$OfDouble;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.accept(TT;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.tmpSlot",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MIN_TRANSFER_STRIDE",
				"static label":1
			},
			{
				"name":"r.sun.reflect.generics.visitor.Reifier.resultType",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.RESIZE_STAMP_SHIFT",
				"static label":1
			},
			{
				"name":"java.lang.ref.SoftReference<T>.clock",
				"static label":1
			},
			{
				"name":"sun.reflect.generics.repository.ClassRepository.NONE",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.scope",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.DEFAULT_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MAXIMUM_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.reflectionDataOffset",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.s",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.U",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WRITER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.HASH_BITS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.U",
				"static label":1
			},
			{
				"name":"a.getClass().getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.decl",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.CELLSBUSY",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MOVED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.NULL_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.ASHIFT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.UNTREEIFY_THRESHOLD",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MAX_RESIZERS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.BASECOUNT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.LOCKSTATE",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TREEBIN",
				"static label":1
			},
			{
				"name":"java.lang.Boolean.TRUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.ABASE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WAITER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.CELLVALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TREEIFY_THRESHOLD",
				"static label":1
			},
			{
				"name":"Reifier.sun.reflect.generics.visitor.Reifier.factory",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.RESIZE_STAMP_BITS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.NCPU",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TRANSFERINDEX",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.tmpSlot",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.SIZECTL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MIN_TREEIFY_CAPACITY",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.seen",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.scope",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WAITER",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.decl",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.tmpSlot",
				"static label":0
			},
			{
				"name":"Reifier.sun.reflect.generics.visitor.Reifier.factory",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Class.getGenericSignature0",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			},
			{
				"name":"java.lang.System.identityHashCode",
				"static label":1
			},
			{
				"name":"java.lang.Thread.yield",
				"static label":1
			},
			{
				"name":"java.lang.Class.getInterfaces0",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.forEachRemaining(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MIN_TRANSFER_STRIDE",
				"static label":1
			},
			{
				"name":"r.sun.reflect.generics.visitor.Reifier.resultType",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.RESIZE_STAMP_SHIFT",
				"static label":1
			},
			{
				"name":"java.lang.ref.SoftReference<T>.clock",
				"static label":1
			},
			{
				"name":"sun.reflect.generics.repository.ClassRepository.NONE",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.scope",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.DEFAULT_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MAXIMUM_CAPACITY",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.reflectionDataOffset",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.s",
				"static label":0
			},
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.U",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WRITER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.HASH_BITS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.U",
				"static label":1
			},
			{
				"name":"a.getClass().getName().java.lang.String.value[]",
				"static label":0
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.valueOffset",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.decl",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.CELLSBUSY",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.parkBlockerOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MOVED",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicLong.unsafe",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.NULL_VALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.ASHIFT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.UNTREEIFY_THRESHOLD",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MAX_RESIZERS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.BASECOUNT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.LOCKSTATE",
				"static label":1
			},
			{
				"name":"java.lang.Class.Atomic.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.probeGenerator",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.unsafe",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TREEBIN",
				"static label":1
			},
			{
				"name":"java.lang.Boolean.TRUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.seeder",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.ABASE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WAITER",
				"static label":1
			},
			{
				"name":"java.util.concurrent.locks.LockSupport.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.CELLVALUE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.PROBE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TREEIFY_THRESHOLD",
				"static label":1
			},
			{
				"name":"Reifier.sun.reflect.generics.visitor.Reifier.factory",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.RESIZE_STAMP_BITS",
				"static label":1
			},
			{
				"name":"java.util.concurrent.atomic.AtomicInteger.valueOffset",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.UNSAFE",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ThreadLocalRandom.SEEDER_INCREMENT",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.NCPU",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.TRANSFERINDEX",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.SIZECTL",
				"static label":1
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap<K,V>.MIN_TREEIFY_CAPACITY",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.seen",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.lang.Class<T>.useCaches",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.scope",
				"static label":0
			},
			{
				"name":"java.util.concurrent.ConcurrentHashMap.TreeBin<K,V>.WAITER",
				"static label":1
			},
			{
				"name":"CoreReflectionFactory.sun.reflect.generics.factory.CoreReflectionFactory.decl",
				"static label":0
			},
			{
				"name":"Reifier.sun.reflect.generics.visitor.Reifier.factory",
				"static label":0
			}
		],
		"native method list":[
			{
				"name":"java.lang.Class.getGenericSignature0",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getLongVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			},
			{
				"name":"java.lang.Thread.currentThread",
				"static label":1
			},
			{
				"name":"java.lang.System.identityHashCode",
				"static label":1
			},
			{
				"name":"java.lang.Thread.yield",
				"static label":1
			},
			{
				"name":"java.lang.Class.getInterfaces0",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapInt",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.getIntVolatile",
				"static label":0
			},
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"sun.misc.Unsafe.compareAndSwapLong",
				"static label":0
			},
			{
				"name":"java.lang.Object.clone",
				"static label":0
			},
			{
				"name":"java.lang.Object.hashCode",
				"static label":0
			}
		]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.trySplit()Ljava/util/Spliterator<TT;>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.seen",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.DISTINCT",
				"static label":1
			},
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.s",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.SORTED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.DistinctSpliterator",
		"method name":"getComparator",
		"method key":"Ljava/util/stream/StreamSpliterators$DistinctSpliterator;.getComparator()Ljava/util/Comparator<-TT;>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.DistinctSpliterator<T>.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<T>.estimate",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator<T>.IMMUTABLE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfRef",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfRef<T>.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfRef",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfRef;.trySplit()Ljava/util/Spliterator<TT;>;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<T>.estimate",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfRef<T>.s",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<T>.estimate",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfInt",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfInt;.tryAdvance(Ljava/util/function/IntConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfInt.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfInt",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfInt;.trySplit()Ljava/util/Spliterator$OfInt;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<java.lang.Integer>.estimate",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfInt.s",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<java.lang.Integer>.estimate",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfLong",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfLong;.tryAdvance(Ljava/util/function/LongConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfLong.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfLong",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfLong;.trySplit()Ljava/util/Spliterator$OfLong;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<java.lang.Long>.estimate",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfLong.s",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<java.lang.Long>.estimate",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfDouble",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble;.tryAdvance(Ljava/util/function/DoubleConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfDouble.s",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfDouble",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/StreamSpliterators$InfiniteSupplyingSpliterator$OfDouble;.trySplit()Ljava/util/Spliterator$OfDouble;",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator.OfDouble.s",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<java.lang.Double>.estimate",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.InfiniteSupplyingSpliterator<java.lang.Double>.estimate",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer",
		"method name":"reset",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer;.reset()V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.index",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfRef",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfRef;.accept(TT;)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.index",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfRef<T>.array[]",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfRef",
		"method name":"forEach",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfRef;.forEach(Ljava/util/function/Consumer<-TT;>;J)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfRef<T>.array[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive",
		"method name":"reset",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfPrimitive;.reset()V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<T_CONS>.index",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<T_CONS>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive",
		"method name":"forEach",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfPrimitive;.forEach(TT_CONS;J)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfInt",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfInt;.accept(I)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfInt.array[]",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<java.util.function.IntConsumer>.index",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<java.util.function.IntConsumer>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfInt",
		"method name":"forEach",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfInt;.forEach(Ljava/util/function/IntConsumer;J)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfInt.array[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfLong",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfLong;.accept(J)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfLong.array[]",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<java.util.function.LongConsumer>.index",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<java.util.function.LongConsumer>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfLong",
		"method name":"forEach",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfLong;.forEach(Ljava/util/function/LongConsumer;J)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfLong.array[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfDouble",
		"method name":"accept",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfDouble;.accept(D)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfDouble.array[]",
				"static label":0
			},
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<java.util.function.DoubleConsumer>.index",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfPrimitive<java.util.function.DoubleConsumer>.index",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfDouble",
		"method name":"forEach",
		"method key":"Ljava/util/stream/StreamSpliterators$ArrayBuffer$OfDouble;.forEach(Ljava/util/function/DoubleConsumer;J)V",
		"read list":[
			{
				"name":"java.util.stream.StreamSpliterators.ArrayBuffer.OfDouble.array[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]
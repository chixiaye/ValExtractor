[
	{
		"class name":"java.util.stream.IntStream",
		"method name":"filter",
		"method key":"Ljava/util/stream/IntStream;.filter(Ljava/util/function/IntPredicate;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"map",
		"method key":"Ljava/util/stream/IntStream;.map(Ljava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"mapToObj",
		"method key":"Ljava/util/stream/IntStream;.mapToObj<U:Ljava/lang/Object;>(Ljava/util/function/IntFunction<+TU;>;)Ljava/util/stream/Stream<TU;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"mapToLong",
		"method key":"Ljava/util/stream/IntStream;.mapToLong(Ljava/util/function/IntToLongFunction;)Ljava/util/stream/LongStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"mapToDouble",
		"method key":"Ljava/util/stream/IntStream;.mapToDouble(Ljava/util/function/IntToDoubleFunction;)Ljava/util/stream/DoubleStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"flatMap",
		"method key":"Ljava/util/stream/IntStream;.flatMap(Ljava/util/function/IntFunction<+Ljava/util/stream/IntStream;>;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"distinct",
		"method key":"Ljava/util/stream/IntStream;.distinct()Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"sorted",
		"method key":"Ljava/util/stream/IntStream;.sorted()Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"peek",
		"method key":"Ljava/util/stream/IntStream;.peek(Ljava/util/function/IntConsumer;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"limit",
		"method key":"Ljava/util/stream/IntStream;.limit(J)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"skip",
		"method key":"Ljava/util/stream/IntStream;.skip(J)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"forEach",
		"method key":"Ljava/util/stream/IntStream;.forEach(Ljava/util/function/IntConsumer;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"forEachOrdered",
		"method key":"Ljava/util/stream/IntStream;.forEachOrdered(Ljava/util/function/IntConsumer;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"toArray",
		"method key":"Ljava/util/stream/IntStream;.toArray()[I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"reduce",
		"method key":"Ljava/util/stream/IntStream;.reduce(ILjava/util/function/IntBinaryOperator;)I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"reduce",
		"method key":"Ljava/util/stream/IntStream;.reduce(Ljava/util/function/IntBinaryOperator;)Ljava/util/OptionalInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"collect",
		"method key":"Ljava/util/stream/IntStream;.collect<R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/ObjIntConsumer<TR;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"sum",
		"method key":"Ljava/util/stream/IntStream;.sum()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"min",
		"method key":"Ljava/util/stream/IntStream;.min()Ljava/util/OptionalInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"max",
		"method key":"Ljava/util/stream/IntStream;.max()Ljava/util/OptionalInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"count",
		"method key":"Ljava/util/stream/IntStream;.count()J",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"average",
		"method key":"Ljava/util/stream/IntStream;.average()Ljava/util/OptionalDouble;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"summaryStatistics",
		"method key":"Ljava/util/stream/IntStream;.summaryStatistics()Ljava/util/IntSummaryStatistics;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"anyMatch",
		"method key":"Ljava/util/stream/IntStream;.anyMatch(Ljava/util/function/IntPredicate;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"allMatch",
		"method key":"Ljava/util/stream/IntStream;.allMatch(Ljava/util/function/IntPredicate;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"noneMatch",
		"method key":"Ljava/util/stream/IntStream;.noneMatch(Ljava/util/function/IntPredicate;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"findFirst",
		"method key":"Ljava/util/stream/IntStream;.findFirst()Ljava/util/OptionalInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"findAny",
		"method key":"Ljava/util/stream/IntStream;.findAny()Ljava/util/OptionalInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"asLongStream",
		"method key":"Ljava/util/stream/IntStream;.asLongStream()Ljava/util/stream/LongStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"asDoubleStream",
		"method key":"Ljava/util/stream/IntStream;.asDoubleStream()Ljava/util/stream/DoubleStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"boxed",
		"method key":"Ljava/util/stream/IntStream;.boxed()Ljava/util/stream/Stream<Ljava/lang/Integer;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"sequential",
		"method key":"Ljava/util/stream/IntStream;.sequential()Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"parallel",
		"method key":"Ljava/util/stream/IntStream;.parallel()Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"iterator",
		"method key":"Ljava/util/stream/IntStream;.iterator()Ljava/util/PrimitiveIterator$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"spliterator",
		"method key":"Ljava/util/stream/IntStream;.spliterator()Ljava/util/Spliterator$OfInt;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"builder",
		"method key":"Ljava/util/stream/IntStream;.builder()Ljava/util/stream/IntStream$Builder;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"empty",
		"method key":"Ljava/util/stream/IntStream;.empty()Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.util.Spliterators.EMPTY_INT_SPLITERATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"of",
		"method key":"Ljava/util/stream/IntStream;.of(I)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"of",
		"method key":"Ljava/util/stream/IntStream;.of([I)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"iterate",
		"method key":"Ljava/util/stream/IntStream;.iterate(ILjava/util/function/IntUnaryOperator;)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"generate",
		"method key":"Ljava/util/stream/IntStream;.generate(Ljava/util/function/IntSupplier;)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"range",
		"method key":"Ljava/util/stream/IntStream;.range(II)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.util.Spliterators.EMPTY_INT_SPLITERATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"rangeClosed",
		"method key":"Ljava/util/stream/IntStream;.rangeClosed(II)Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"java.util.Spliterators.EMPTY_INT_SPLITERATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream",
		"method name":"concat",
		"method key":"Ljava/util/stream/IntStream;.concat(Ljava/util/stream/IntStream;Ljava/util/stream/IntStream;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream.Builder",
		"method name":"accept",
		"method key":"Ljava/util/stream/IntStream$Builder;.accept(I)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream.Builder",
		"method name":"add",
		"method key":"Ljava/util/stream/IntStream$Builder;.add(I)Ljava/util/stream/IntStream$Builder;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.IntStream.Builder",
		"method name":"build",
		"method key":"Ljava/util/stream/IntStream$Builder;.build()Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
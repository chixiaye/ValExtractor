[
	{
		"class name":"java.util.stream.Stream",
		"method name":"filter",
		"method key":"Ljava/util/stream/Stream;.filter(Ljava/util/function/Predicate<-TT;>;)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"map",
		"method key":"Ljava/util/stream/Stream;.map<R:Ljava/lang/Object;>(Ljava/util/function/Function<-TT;+TR;>;)Ljava/util/stream/Stream<TR;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"mapToInt",
		"method key":"Ljava/util/stream/Stream;.mapToInt(Ljava/util/function/ToIntFunction<-TT;>;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"mapToLong",
		"method key":"Ljava/util/stream/Stream;.mapToLong(Ljava/util/function/ToLongFunction<-TT;>;)Ljava/util/stream/LongStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"mapToDouble",
		"method key":"Ljava/util/stream/Stream;.mapToDouble(Ljava/util/function/ToDoubleFunction<-TT;>;)Ljava/util/stream/DoubleStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"flatMap",
		"method key":"Ljava/util/stream/Stream;.flatMap<R:Ljava/lang/Object;>(Ljava/util/function/Function<-TT;+Ljava/util/stream/Stream<+TR;>;>;)Ljava/util/stream/Stream<TR;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"flatMapToInt",
		"method key":"Ljava/util/stream/Stream;.flatMapToInt(Ljava/util/function/Function<-TT;+Ljava/util/stream/IntStream;>;)Ljava/util/stream/IntStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"flatMapToLong",
		"method key":"Ljava/util/stream/Stream;.flatMapToLong(Ljava/util/function/Function<-TT;+Ljava/util/stream/LongStream;>;)Ljava/util/stream/LongStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"flatMapToDouble",
		"method key":"Ljava/util/stream/Stream;.flatMapToDouble(Ljava/util/function/Function<-TT;+Ljava/util/stream/DoubleStream;>;)Ljava/util/stream/DoubleStream;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"distinct",
		"method key":"Ljava/util/stream/Stream;.distinct()Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"sorted",
		"method key":"Ljava/util/stream/Stream;.sorted()Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"sorted",
		"method key":"Ljava/util/stream/Stream;.sorted(Ljava/util/Comparator<-TT;>;)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"peek",
		"method key":"Ljava/util/stream/Stream;.peek(Ljava/util/function/Consumer<-TT;>;)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"limit",
		"method key":"Ljava/util/stream/Stream;.limit(J)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"skip",
		"method key":"Ljava/util/stream/Stream;.skip(J)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"forEach",
		"method key":"Ljava/util/stream/Stream;.forEach(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"forEachOrdered",
		"method key":"Ljava/util/stream/Stream;.forEachOrdered(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"toArray",
		"method key":"Ljava/util/stream/Stream;.toArray()[Ljava/lang/Object;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"toArray",
		"method key":"Ljava/util/stream/Stream;.toArray<A:Ljava/lang/Object;>(Ljava/util/function/IntFunction<[TA;>;)[TA;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"reduce",
		"method key":"Ljava/util/stream/Stream;.reduce(TT;Ljava/util/function/BinaryOperator<TT;>;)TT;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"reduce",
		"method key":"Ljava/util/stream/Stream;.reduce(Ljava/util/function/BinaryOperator<TT;>;)Ljava/util/Optional<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"reduce",
		"method key":"Ljava/util/stream/Stream;.reduce<U:Ljava/lang/Object;>(TU;Ljava/util/function/BiFunction<TU;-TT;TU;>;Ljava/util/function/BinaryOperator<TU;>;)TU;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"collect",
		"method key":"Ljava/util/stream/Stream;.collect<R:Ljava/lang/Object;>(Ljava/util/function/Supplier<TR;>;Ljava/util/function/BiConsumer<TR;-TT;>;Ljava/util/function/BiConsumer<TR;TR;>;)TR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"collect",
		"method key":"Ljava/util/stream/Stream;.collect<R:Ljava/lang/Object;A:Ljava/lang/Object;>(Ljava/util/stream/Collector<-TT;TA;TR;>;)TR;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"min",
		"method key":"Ljava/util/stream/Stream;.min(Ljava/util/Comparator<-TT;>;)Ljava/util/Optional<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"max",
		"method key":"Ljava/util/stream/Stream;.max(Ljava/util/Comparator<-TT;>;)Ljava/util/Optional<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"count",
		"method key":"Ljava/util/stream/Stream;.count()J",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"anyMatch",
		"method key":"Ljava/util/stream/Stream;.anyMatch(Ljava/util/function/Predicate<-TT;>;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"allMatch",
		"method key":"Ljava/util/stream/Stream;.allMatch(Ljava/util/function/Predicate<-TT;>;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"noneMatch",
		"method key":"Ljava/util/stream/Stream;.noneMatch(Ljava/util/function/Predicate<-TT;>;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"findFirst",
		"method key":"Ljava/util/stream/Stream;.findFirst()Ljava/util/Optional<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"findAny",
		"method key":"Ljava/util/stream/Stream;.findAny()Ljava/util/Optional<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"builder",
		"method key":"Ljava/util/stream/Stream;.builder<T:Ljava/lang/Object;>()Ljava/util/stream/Stream$Builder<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"empty",
		"method key":"Ljava/util/stream/Stream;.empty<T:Ljava/lang/Object;>()Ljava/util/stream/Stream<TT;>;",
		"read list":[
			{
				"name":"java.util.Spliterators.EMPTY_SPLITERATOR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"of",
		"method key":"Ljava/util/stream/Stream;.of<T:Ljava/lang/Object;>(TT;)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"of",
		"method key":"Ljava/util/stream/Stream;.of<T:Ljava/lang/Object;>([TT;)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"iterate",
		"method key":"Ljava/util/stream/Stream;.iterate<T:Ljava/lang/Object;>(TT;Ljava/util/function/UnaryOperator<TT;>;)Ljava/util/stream/Stream<TT;>;",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"generate",
		"method key":"Ljava/util/stream/Stream;.generate<T:Ljava/lang/Object;>(Ljava/util/function/Supplier<TT;>;)Ljava/util/stream/Stream<TT;>;",
		"read list":[
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream",
		"method name":"concat",
		"method key":"Ljava/util/stream/Stream;.concat<T:Ljava/lang/Object;>(Ljava/util/stream/Stream<+TT;>;Ljava/util/stream/Stream<+TT;>;)Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream.Builder",
		"method name":"accept",
		"method key":"Ljava/util/stream/Stream$Builder;.accept(TT;)V",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream.Builder",
		"method name":"add",
		"method key":"Ljava/util/stream/Stream$Builder;.add(TT;)Ljava/util/stream/Stream$Builder<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Stream.Builder",
		"method name":"build",
		"method key":"Ljava/util/stream/Stream$Builder;.build()Ljava/util/stream/Stream<TT;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
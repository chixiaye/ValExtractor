[
	{
		"class name":"java.util.stream.Streams.RangeIntSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$RangeIntSpliterator;.tryAdvance(Ljava/util/function/IntConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.upTo",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.last",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.last",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeIntSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$RangeIntSpliterator;.forEachRemaining(Ljava/util/function/IntConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.upTo",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.last",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.last",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeIntSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/Streams$RangeIntSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.upTo",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.last",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeIntSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/Streams$RangeIntSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.DISTINCT",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SORTED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeIntSpliterator",
		"method name":"getComparator",
		"method key":"Ljava/util/stream/Streams$RangeIntSpliterator;.getComparator()Ljava/util/Comparator<-Ljava/lang/Integer;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeIntSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/Streams$RangeIntSpliterator;.trySplit()Ljava/util/Spliterator$OfInt;",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.upTo",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.BALANCED_SPLIT_THRESHOLD",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.last",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.RIGHT_BALANCED_SPLIT_RATIO",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.RangeIntSpliterator.from",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeLongSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$RangeLongSpliterator;.tryAdvance(Ljava/util/function/LongConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.last",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.upTo",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.last",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeLongSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$RangeLongSpliterator;.forEachRemaining(Ljava/util/function/LongConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.last",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.upTo",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.last",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeLongSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/Streams$RangeLongSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.last",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.upTo",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeLongSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/Streams$RangeLongSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.NONNULL",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.DISTINCT",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SORTED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeLongSpliterator",
		"method name":"getComparator",
		"method key":"Ljava/util/stream/Streams$RangeLongSpliterator;.getComparator()Ljava/util/Comparator<-Ljava/lang/Long;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.RangeLongSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/Streams$RangeLongSpliterator;.trySplit()Ljava/util/Spliterator$OfLong;",
		"read list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.BALANCED_SPLIT_THRESHOLD",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.RIGHT_BALANCED_SPLIT_RATIO",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.last",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.upTo",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.RangeLongSpliterator.from",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.AbstractStreamBuilderImpl",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/Streams$AbstractStreamBuilderImpl;.trySplit()TS;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.AbstractStreamBuilderImpl",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/Streams$AbstractStreamBuilderImpl;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,S>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,S>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.AbstractStreamBuilderImpl",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/Streams$AbstractStreamBuilderImpl;.characteristics()I",
		"read list":[
			{
				"name":"java.util.Spliterator.ORDERED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.Spliterator.IMMUTABLE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.StreamBuilderImpl",
		"method name":"accept",
		"method key":"Ljava/util/stream/Streams$StreamBuilderImpl;.accept(TT;)V",
		"read list":[
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MIN_SPINE_SIZE",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MAX_CHUNK_POWER",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.buffer",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.StreamBuilderImpl",
		"method name":"add",
		"method key":"Ljava/util/stream/Streams$StreamBuilderImpl;.add(TT;)Ljava/util/stream/Stream$Builder<TT;>;",
		"read list":[
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MIN_SPINE_SIZE",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MAX_CHUNK_POWER",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.buffer",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.StreamBuilderImpl",
		"method name":"build",
		"method key":"Ljava/util/stream/Streams$StreamBuilderImpl;.build()Ljava/util/stream/Stream<TT;>;",
		"read list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.StreamBuilderImpl",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$StreamBuilderImpl;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.StreamBuilderImpl",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$StreamBuilderImpl;.forEachRemaining(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.StreamBuilderImpl<T>.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<T,java.util.Spliterator<T>>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.IntStreamBuilderImpl",
		"method name":"accept",
		"method key":"Ljava/util/stream/Streams$IntStreamBuilderImpl;.accept(I)V",
		"read list":[
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MIN_SPINE_SIZE",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MAX_CHUNK_POWER",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.IntStreamBuilderImpl",
		"method name":"build",
		"method key":"Ljava/util/stream/Streams$IntStreamBuilderImpl;.build()Ljava/util/stream/IntStream;",
		"read list":[
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.IntStreamBuilderImpl",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$IntStreamBuilderImpl;.tryAdvance(Ljava/util/function/IntConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.IntStreamBuilderImpl",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$IntStreamBuilderImpl;.forEachRemaining(Ljava/util/function/IntConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.IntStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Integer,java.util.Spliterator.OfInt>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.LongStreamBuilderImpl",
		"method name":"accept",
		"method key":"Ljava/util/stream/Streams$LongStreamBuilderImpl;.accept(J)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MIN_SPINE_SIZE",
				"static label":1
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MAX_CHUNK_POWER",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.buffer",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.LongStreamBuilderImpl",
		"method name":"build",
		"method key":"Ljava/util/stream/Streams$LongStreamBuilderImpl;.build()Ljava/util/stream/LongStream;",
		"read list":[
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.LongStreamBuilderImpl",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$LongStreamBuilderImpl;.tryAdvance(Ljava/util/function/LongConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.LongStreamBuilderImpl",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$LongStreamBuilderImpl;.forEachRemaining(Ljava/util/function/LongConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.LongStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Long,java.util.Spliterator.OfLong>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.DoubleStreamBuilderImpl",
		"method name":"accept",
		"method key":"Ljava/util/stream/Streams$DoubleStreamBuilderImpl;.accept(D)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MIN_SPINE_SIZE",
				"static label":1
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.buffer",
				"static label":0
			},
			{
				"name":"java.util.stream.AbstractSpinedBuffer.MAX_CHUNK_POWER",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.first",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.buffer",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.DoubleStreamBuilderImpl",
		"method name":"build",
		"method key":"Ljava/util/stream/Streams$DoubleStreamBuilderImpl;.build()Ljava/util/stream/DoubleStream;",
		"read list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.spineIndex",
				"static label":0
			},
			{
				"name":"buffer.java.util.stream.AbstractSpinedBuffer.elementIndex",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.buffer",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.DoubleStreamBuilderImpl",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$DoubleStreamBuilderImpl;.tryAdvance(Ljava/util/function/DoubleConsumer;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.first",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.DoubleStreamBuilderImpl",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$DoubleStreamBuilderImpl;.forEachRemaining(Ljava/util/function/DoubleConsumer;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.DoubleStreamBuilderImpl.first",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.AbstractStreamBuilderImpl<java.lang.Double,java.util.Spliterator.OfDouble>.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator",
		"method name":"trySplit",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator;.trySplit()TT_SPLITR;",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator;.tryAdvance(Ljava/util/function/Consumer<-TT;>;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator;.forEachRemaining(Ljava/util/function/Consumer<-TT;>;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator",
		"method name":"estimateSize",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator;.estimateSize()J",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator",
		"method name":"characteristics",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator;.characteristics()I",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.unsized",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.SIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.SUBSIZED",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.DISTINCT",
				"static label":1
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			},
			{
				"name":"java.util.Spliterator.SORTED",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator",
		"method name":"getComparator",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator;.getComparator()Ljava/util/Comparator<-TT;>;",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator.OfPrimitive",
		"method name":"tryAdvance",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator$OfPrimitive;.tryAdvance(TT_CONS;)Z",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams.ConcatSpliterator.OfPrimitive",
		"method name":"forEachRemaining",
		"method key":"Ljava/util/stream/Streams$ConcatSpliterator$OfPrimitive;.forEachRemaining(TT_CONS;)V",
		"read list":[
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.bSpliterator",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.beforeSplit",
				"static label":0
			},
			{
				"name":"java.util.stream.Streams.ConcatSpliterator<T,T_SPLITR>.aSpliterator",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams",
		"method name":"composeWithExceptions",
		"method key":"Ljava/util/stream/Streams;.composeWithExceptions(Ljava/lang/Runnable;Ljava/lang/Runnable;)Ljava/lang/Runnable;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.util.stream.Streams",
		"method name":"composedClose",
		"method key":"Ljava/util/stream/Streams;.composedClose(Ljava/util/stream/BaseStream<**>;Ljava/util/stream/BaseStream<**>;)Ljava/lang/Runnable;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
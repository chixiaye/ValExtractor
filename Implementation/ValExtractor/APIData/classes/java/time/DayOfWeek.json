[
	{
		"class name":"java.time.DayOfWeek",
		"method name":"of",
		"method key":"Ljava/time/DayOfWeek;.of(I)Ljava/time/DayOfWeek;",
		"read list":[
			{
				"name":"java.time.DayOfWeek.ENUMS[]",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"from",
		"method key":"Ljava/time/DayOfWeek;.from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/DayOfWeek;",
		"read list":[
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.time.DayOfWeek.ENUMS[]",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"getValue",
		"method key":"Ljava/time/DayOfWeek;.getValue()I",
		"read list":[
			{
				"name":"java.lang.Enum<E>.ordinal",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"getDisplayName",
		"method key":"Ljava/time/DayOfWeek;.getDisplayName(Ljava/time/format/TextStyle;Ljava/util/Locale;)Ljava/lang/String;",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.time.format.DecimalStyle.STANDARD",
				"static label":1
			},
			{
				"name":"context.java.time.format.DateTimePrintContext.optional",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.printerParsers[]",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.optional",
				"static label":0
			},
			{
				"name":"ex.java.lang.Throwable.detailMessage",
				"static label":0
			},
			{
				"name":"java.time.format.ResolverStyle.SMART",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"new DateTimeFormatterBuilder().appendText(DAY_OF_WEEK,style).java.time.format.DateTimeFormatterBuilder.active",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"isSupported",
		"method key":"Ljava/time/DayOfWeek;.isSupported(Ljava/time/temporal/TemporalField;)Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"range",
		"method key":"Ljava/time/DayOfWeek;.range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"get",
		"method key":"Ljava/time/DayOfWeek;.get(Ljava/time/temporal/TemporalField;)I",
		"read list":[
			{
				"name":"java.lang.Enum<E>.ordinal",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"getLong",
		"method key":"Ljava/time/DayOfWeek;.getLong(Ljava/time/temporal/TemporalField;)J",
		"read list":[
			{
				"name":"java.lang.Enum<E>.ordinal",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"plus",
		"method key":"Ljava/time/DayOfWeek;.plus(J)Ljava/time/DayOfWeek;",
		"read list":[
			{
				"name":"java.lang.Enum<E>.ordinal",
				"static label":0
			},
			{
				"name":"java.time.DayOfWeek.ENUMS[]",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"minus",
		"method key":"Ljava/time/DayOfWeek;.minus(J)Ljava/time/DayOfWeek;",
		"read list":[
			{
				"name":"java.lang.Enum<E>.ordinal",
				"static label":0
			},
			{
				"name":"java.time.DayOfWeek.ENUMS[]",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"query",
		"method key":"Ljava/time/DayOfWeek;.query<R:Ljava/lang/Object;>(Ljava/time/temporal/TemporalQuery<TR;>;)TR;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoUnit.DAYS",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.DayOfWeek",
		"method name":"adjustInto",
		"method key":"Ljava/time/DayOfWeek;.adjustInto(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;",
		"read list":[
			{
				"name":"java.lang.Enum<E>.ordinal",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"timeLineOrder",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.timeLineOrder()Ljava/util/Comparator<Ljava/time/chrono/ChronoLocalDate;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"from",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[
			{
				"name":"java.time.temporal.TemporalQueries.ZONE_ID",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.CHRONO",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			}
		]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"getChronology",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.getChronology()Ljava/time/chrono/Chronology;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"getEra",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.getEra()Ljava/time/chrono/Era;",
		"read list":[
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.ERA",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"isLeapYear",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.isLeapYear()Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.YEAR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"lengthOfMonth",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.lengthOfMonth()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"lengthOfYear",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.lengthOfYear()I",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.YEAR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"isSupported",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.isSupported(Ljava/time/temporal/TemporalField;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"isSupported",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.isSupported(Ljava/time/temporal/TemporalUnit;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"with",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.with(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"with",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"plus",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"plus",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"minus",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.minus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"minus",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDate;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"query",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.query<R:Ljava/lang/Object;>(Ljava/time/temporal/TemporalQuery<TR;>;)TR;",
		"read list":[
			{
				"name":"java.time.temporal.TemporalQueries.ZONE_ID",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.LOCAL_TIME",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.OFFSET",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoUnit.DAYS",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.CHRONO",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"adjustInto",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.adjustInto(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"until",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.until(Ljava/time/temporal/Temporal;Ljava/time/temporal/TemporalUnit;)J",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"until",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.until(Ljava/time/chrono/ChronoLocalDate;)Ljava/time/chrono/ChronoPeriod;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"format",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"context.java.time.format.DateTimePrintContext.optional",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.printerParsers[]",
				"static label":0
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.optional",
				"static label":0
			},
			{
				"name":"ex.java.lang.Throwable.detailMessage",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"atTime",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.atTime(Ljava/time/LocalTime;)Ljava/time/chrono/ChronoLocalDateTime<*>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"toEpochDay",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.toEpochDay()J",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"compareTo",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.compareTo(Ljava/time/chrono/ChronoLocalDate;)I",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"isAfter",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.isAfter(Ljava/time/chrono/ChronoLocalDate;)Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"isBefore",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.isBefore(Ljava/time/chrono/ChronoLocalDate;)Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"isEqual",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.isEqual(Ljava/time/chrono/ChronoLocalDate;)Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"equals",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.equals(Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"hashCode",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.hashCode()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDate",
		"method name":"toString",
		"method key":"Ljava/time/chrono/ChronoLocalDate;.toString()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
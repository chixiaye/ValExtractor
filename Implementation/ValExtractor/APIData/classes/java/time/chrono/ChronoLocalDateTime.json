[
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"timeLineOrder",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.timeLineOrder()Ljava/util/Comparator<Ljava/time/chrono/ChronoLocalDateTime<*>;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"from",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoLocalDateTime<*>;",
		"read list":[
			{
				"name":"java.time.temporal.TemporalQueries.ZONE_ID",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.LOCAL_TIME",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.CHRONO",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"getChronology",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.getChronology()Ljava/time/chrono/Chronology;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"toLocalDate",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.toLocalDate()TD;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"toLocalTime",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.toLocalTime()Ljava/time/LocalTime;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"isSupported",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.isSupported(Ljava/time/temporal/TemporalField;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"isSupported",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.isSupported(Ljava/time/temporal/TemporalUnit;)Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoUnit.FOREVER",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"with",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.with(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"with",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"plus",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"plus",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"minus",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.minus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"minus",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"query",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.query<R:Ljava/lang/Object;>(Ljava/time/temporal/TemporalQuery<TR;>;)TR;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoUnit.NANOS",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE_ID",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.LOCAL_TIME",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.OFFSET",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.CHRONO",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"adjustInto",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.adjustInto(Ljava/time/temporal/Temporal;)Ljava/time/temporal/Temporal;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.NANO_OF_DAY",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_HOUR",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"format",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"context.java.time.format.DateTimePrintContext.optional",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.printerParsers[]",
				"static label":0
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.optional",
				"static label":0
			},
			{
				"name":"ex.java.lang.Throwable.detailMessage",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"atZone",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.atZone(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"toInstant",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.toInstant(Ljava/time/ZoneOffset;)Ljava/time/Instant;",
		"read list":[
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"java.time.Instant.EPOCH",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.Instant.MIN_SECOND",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.Instant.MAX_SECOND",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"offset.java.time.ZoneOffset.totalSeconds",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"toEpochSecond",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.toEpochSecond(Ljava/time/ZoneOffset;)J",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"offset.java.time.ZoneOffset.totalSeconds",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"compareTo",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.compareTo(Ljava/time/chrono/ChronoLocalDateTime<*>;)I",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"isAfter",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.isAfter(Ljava/time/chrono/ChronoLocalDateTime<*>;)Z",
		"read list":[
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.nano",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"isBefore",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.isBefore(Ljava/time/chrono/ChronoLocalDateTime<*>;)Z",
		"read list":[
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.nano",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"isEqual",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.isEqual(Ljava/time/chrono/ChronoLocalDateTime<*>;)Z",
		"read list":[
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"this.toLocalTime().java.time.LocalTime.nano",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"equals",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.equals(Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"hashCode",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.hashCode()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoLocalDateTime",
		"method name":"toString",
		"method key":"Ljava/time/chrono/ChronoLocalDateTime;.toString()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
[
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"timeLineOrder",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.timeLineOrder()Ljava/util/Comparator<Ljava/time/chrono/ChronoZonedDateTime<*>;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"from",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.from(Ljava/time/temporal/TemporalAccessor;)Ljava/time/chrono/ChronoZonedDateTime<*>;",
		"read list":[
			{
				"name":"instant.java.time.Instant.seconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE_ID",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.INSTANT_SECONDS",
				"static label":1
			},
			{
				"name":"trans.java.time.zone.ZoneOffsetTransition.transition",
				"static label":0
			},
			{
				"name":"java.time.Month.FEBRUARY",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_DAY",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.NANOS_PER_DAY",
				"static label":1
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.timeEndOfDay",
				"static label":0
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.timeDefinition",
				"static label":0
			},
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.SECONDS_PER_DAY",
				"static label":1
			},
			{
				"name":"java.time.Duration.ZERO",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.DAY_OF_WEEK",
				"static label":1
			},
			{
				"name":"LocalDateTime.java.time.LocalDateTime.time",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"LocalDateTime.java.time.LocalDateTime.date",
				"static label":0
			},
			{
				"name":"java.time.Instant.EPOCH",
				"static label":1
			},
			{
				"name":"java.lang.Long.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.time.Instant.MIN_SECOND",
				"static label":1
			},
			{
				"name":"transition.java.time.LocalDateTime.date",
				"static label":0
			},
			{
				"name":"date.java.time.LocalDate.day",
				"static label":0
			},
			{
				"name":"java.time.Month.SEPTEMBER",
				"static label":1
			},
			{
				"name":"java.lang.Long.MAX_VALUE",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.HOURS_PER_DAY",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE",
				"static label":1
			},
			{
				"name":"java.time.Instant.MAX_SECOND",
				"static label":1
			},
			{
				"name":"offset.java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.Month.APRIL",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.MINUTES_PER_DAY",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.NANO_OF_SECOND",
				"static label":1
			},
			{
				"name":"java.time.Month.NOVEMBER",
				"static label":1
			},
			{
				"name":"LocalDate.java.time.LocalDate.month",
				"static label":0
			},
			{
				"name":"date.java.time.LocalDate.year",
				"static label":0
			},
			{
				"name":"java.time.temporal.TemporalQueries.LOCAL_DATE",
				"static label":1
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.dow",
				"static label":0
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.time",
				"static label":0
			},
			{
				"name":"time.java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"((ZonedDateTime)temporal).java.time.ZonedDateTime.dateTime",
				"static label":0
			},
			{
				"name":"instant.java.time.Instant.nanos",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoUnit.DAYS",
				"static label":1
			},
			{
				"name":"date.java.time.LocalDate.month",
				"static label":0
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.month",
				"static label":0
			},
			{
				"name":"savingsLocalTransitions[index].java.time.LocalDateTime.time",
				"static label":0
			},
			{
				"name":"dt.java.time.LocalDateTime.date",
				"static label":0
			},
			{
				"name":"trans.getDuration().java.time.Duration.seconds",
				"static label":0
			},
			{
				"name":"LocalDate.java.time.LocalDate.day",
				"static label":0
			},
			{
				"name":"java.time.temporal.TemporalQueries.LOCAL_TIME",
				"static label":1
			},
			{
				"name":"other.java.time.LocalDateTime.time",
				"static label":0
			},
			{
				"name":"java.util.Collections.EMPTY_LIST",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.NANOS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.NANOS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.CHRONO",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.HOURS[]",
				"static label":1
			},
			{
				"name":"LocalDate.java.time.LocalDate.year",
				"static label":0
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.standardOffset",
				"static label":0
			},
			{
				"name":"java.time.LocalDate.DAYS_PER_CYCLE",
				"static label":1
			},
			{
				"name":"java.time.Month.JUNE",
				"static label":1
			},
			{
				"name":"((OffsetDateTime)temporal).java.time.OffsetDateTime.dateTime",
				"static label":0
			},
			{
				"name":"savingsLocalTransitions[index].java.time.LocalDateTime.date",
				"static label":0
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.offsetBefore",
				"static label":0
			},
			{
				"name":"time.java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.NANO_OF_DAY",
				"static label":1
			},
			{
				"name":"other.java.time.LocalDateTime.date",
				"static label":0
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.dom",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.YEAR",
				"static label":1
			},
			{
				"name":"java.time.chrono.IsoChronology.INSTANCE",
				"static label":1
			},
			{
				"name":"ruleArray[i].java.time.zone.ZoneOffsetTransitionRule.offsetAfter",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.NANOS_PER_DAY",
				"static label":1
			},
			{
				"name":"time.java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"java.time.LocalDate.DAYS_0000_TO_1970",
				"static label":1
			},
			{
				"name":"time.java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.MINUTES_PER_DAY",
				"static label":1
			},
			{
				"name":"java.time.chrono.ChronoLocalDateTimeImpl<D>.HOURS_PER_DAY",
				"static label":1
			},
			{
				"name":"java.time.zone.ZoneRules.LAST_CACHED_YEAR",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[
			{
				"name":"java.lang.Object.getClass",
				"static label":0
			},
			{
				"name":"java.lang.Class.getName0",
				"static label":0
			}
		]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"range",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.range(Ljava/time/temporal/TemporalField;)Ljava/time/temporal/ValueRange;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoField.INSTANT_SECONDS",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.OFFSET_SECONDS",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"get",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.get(Ljava/time/temporal/TemporalField;)I",
		"read list":[
			{
				"name":"java.lang.Integer.MIN_VALUE",
				"static label":1
			},
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.INSTANT_SECONDS",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.OFFSET_SECONDS",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"getLong",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.getLong(Ljava/time/temporal/TemporalField;)J",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.INSTANT_SECONDS",
				"static label":1
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.OFFSET_SECONDS",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"toLocalDate",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.toLocalDate()TD;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"toLocalTime",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.toLocalTime()Ljava/time/LocalTime;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"toLocalDateTime",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.toLocalDateTime()Ljava/time/chrono/ChronoLocalDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"getChronology",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.getChronology()Ljava/time/chrono/Chronology;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"getOffset",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.getOffset()Ljava/time/ZoneOffset;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"getZone",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.getZone()Ljava/time/ZoneId;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"withEarlierOffsetAtOverlap",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.withEarlierOffsetAtOverlap()Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"withLaterOffsetAtOverlap",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.withLaterOffsetAtOverlap()Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"withZoneSameLocal",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.withZoneSameLocal(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"withZoneSameInstant",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.withZoneSameInstant(Ljava/time/ZoneId;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"isSupported",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.isSupported(Ljava/time/temporal/TemporalField;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"isSupported",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.isSupported(Ljava/time/temporal/TemporalUnit;)Z",
		"read list":[
			{
				"name":"java.time.temporal.ChronoUnit.FOREVER",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"with",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.with(Ljava/time/temporal/TemporalAdjuster;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"with",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.with(Ljava/time/temporal/TemporalField;J)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"plus",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.plus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"plus",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.plus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"minus",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.minus(Ljava/time/temporal/TemporalAmount;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"minus",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.minus(JLjava/time/temporal/TemporalUnit;)Ljava/time/chrono/ChronoZonedDateTime<TD;>;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"query",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.query<R:Ljava/lang/Object;>(Ljava/time/temporal/TemporalQuery<TR;>;)TR;",
		"read list":[
			{
				"name":"java.time.temporal.ChronoUnit.NANOS",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE_ID",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.LOCAL_TIME",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.OFFSET",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.PRECISION",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.ZONE",
				"static label":1
			},
			{
				"name":"java.time.temporal.TemporalQueries.CHRONO",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"format",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.format(Ljava/time/format/DateTimeFormatter;)Ljava/lang/String;",
		"read list":[
			{
				"name":"java.lang.Integer.MAX_VALUE",
				"static label":1
			},
			{
				"name":"context.java.time.format.DateTimePrintContext.optional",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.printerParsers[]",
				"static label":0
			},
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			},
			{
				"name":"printerParser.java.time.format.DateTimeFormatterBuilder.CompositePrinterParser.optional",
				"static label":0
			},
			{
				"name":"ex.java.lang.Throwable.detailMessage",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"buf.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"toInstant",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.toInstant()Ljava/time/Instant;",
		"read list":[
			{
				"name":"java.time.LocalTime.NANOS_PER_SECOND",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"java.time.Instant.EPOCH",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"java.time.Instant.MIN_SECOND",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.Instant.MAX_SECOND",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"toEpochSecond",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.toEpochSecond()J",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"compareTo",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.compareTo(Ljava/time/chrono/ChronoZonedDateTime<*>;)I",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			},
			{
				"name":"getZone().getId().java.lang.String.value[]",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"isBefore",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.isBefore(Ljava/time/chrono/ChronoZonedDateTime<*>;)Z",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"isAfter",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.isAfter(Ljava/time/chrono/ChronoZonedDateTime<*>;)Z",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"isEqual",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.isEqual(Ljava/time/chrono/ChronoZonedDateTime<*>;)Z",
		"read list":[
			{
				"name":"toLocalTime().java.time.LocalTime.nano",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.hour",
				"static label":0
			},
			{
				"name":"toLocalTime().java.time.LocalTime.minute",
				"static label":0
			},
			{
				"name":"getOffset().java.time.ZoneOffset.totalSeconds",
				"static label":0
			},
			{
				"name":"java.time.temporal.ChronoField.EPOCH_DAY",
				"static label":1
			},
			{
				"name":"toLocalTime().java.time.LocalTime.second",
				"static label":0
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_HOUR",
				"static label":1
			},
			{
				"name":"java.time.LocalTime.SECONDS_PER_MINUTE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"equals",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.equals(Ljava/lang/Object;)Z",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"hashCode",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.hashCode()I",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.time.chrono.ChronoZonedDateTime",
		"method name":"toString",
		"method key":"Ljava/time/chrono/ChronoZonedDateTime;.toString()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
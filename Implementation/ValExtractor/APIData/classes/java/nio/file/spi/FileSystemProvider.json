[
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"installedProviders",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.installedProviders()Ljava/util/List<Ljava/nio/file/spi/FileSystemProvider;>;",
		"read list":[
			{
				"name":"java.nio.file.spi.FileSystemProvider.loadingProviders",
				"static label":1
			},
			{
				"name":"java.nio.file.spi.FileSystemProvider.installedProviders",
				"static label":1
			},
			{
				"name":"java.nio.file.FileSystems.DefaultFileSystemHolder.defaultFileSystem",
				"static label":1
			},
			{
				"name":"java.nio.file.spi.FileSystemProvider.lock",
				"static label":1
			}
		],
		"write list":[
			{
				"name":"java.nio.file.spi.FileSystemProvider.loadingProviders",
				"static label":1
			},
			{
				"name":"java.nio.file.spi.FileSystemProvider.installedProviders",
				"static label":1
			}
		],
		"native method list":[
			{
				"name":"java.security.AccessController.doPrivileged",
				"static label":1
			}
		]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"getScheme",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.getScheme()Ljava/lang/String;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newFileSystem",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newFileSystem(Ljava/net/URI;Ljava/util/Map<Ljava/lang/String;*>;)Ljava/nio/file/FileSystem;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"getFileSystem",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.getFileSystem(Ljava/net/URI;)Ljava/nio/file/FileSystem;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"getPath",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.getPath(Ljava/net/URI;)Ljava/nio/file/Path;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newFileSystem",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newFileSystem(Ljava/nio/file/Path;Ljava/util/Map<Ljava/lang/String;*>;)Ljava/nio/file/FileSystem;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newInputStream",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newInputStream(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;|Ljava/io/IOException;",
		"read list":[
			{
				"name":"java.nio.file.StandardOpenOption.APPEND",
				"static label":1
			},
			{
				"name":"java.nio.file.StandardOpenOption.WRITE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newOutputStream",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newOutputStream(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;|Ljava/io/IOException;",
		"read list":[
			{
				"name":"java.nio.file.StandardOpenOption.TRUNCATE_EXISTING",
				"static label":1
			},
			{
				"name":"java.nio.file.StandardOpenOption.CREATE",
				"static label":1
			},
			{
				"name":"java.nio.file.StandardOpenOption.READ",
				"static label":1
			},
			{
				"name":"java.nio.file.StandardOpenOption.WRITE",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newFileChannel",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newFileChannel(Ljava/nio/file/Path;Ljava/util/Set<+Ljava/nio/file/OpenOption;>;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/channels/FileChannel;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newAsynchronousFileChannel",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newAsynchronousFileChannel(Ljava/nio/file/Path;Ljava/util/Set<+Ljava/nio/file/OpenOption;>;Ljava/util/concurrent/ExecutorService;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/channels/AsynchronousFileChannel;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newByteChannel",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newByteChannel(Ljava/nio/file/Path;Ljava/util/Set<+Ljava/nio/file/OpenOption;>;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/channels/SeekableByteChannel;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"newDirectoryStream",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.newDirectoryStream(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter<-Ljava/nio/file/Path;>;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"createDirectory",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.createDirectory(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"createSymbolicLink",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.createSymbolicLink(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"createLink",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.createLink(Ljava/nio/file/Path;Ljava/nio/file/Path;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"delete",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.delete(Ljava/nio/file/Path;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"deleteIfExists",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.deleteIfExists(Ljava/nio/file/Path;)Z|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"readSymbolicLink",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.readSymbolicLink(Ljava/nio/file/Path;)Ljava/nio/file/Path;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"copy",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.copy(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"move",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.move(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"isSameFile",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.isSameFile(Ljava/nio/file/Path;Ljava/nio/file/Path;)Z|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"isHidden",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.isHidden(Ljava/nio/file/Path;)Z|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"getFileStore",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.getFileStore(Ljava/nio/file/Path;)Ljava/nio/file/FileStore;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"checkAccess",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.checkAccess(Ljava/nio/file/Path;[Ljava/nio/file/AccessMode;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"getFileAttributeView",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.getFileAttributeView<V::Ljava/nio/file/attribute/FileAttributeView;>(Ljava/nio/file/Path;Ljava/lang/Class<TV;>;[Ljava/nio/file/LinkOption;)TV;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"readAttributes",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.readAttributes<A::Ljava/nio/file/attribute/BasicFileAttributes;>(Ljava/nio/file/Path;Ljava/lang/Class<TA;>;[Ljava/nio/file/LinkOption;)TA;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"readAttributes",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.readAttributes(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.nio.file.spi.FileSystemProvider",
		"method name":"setAttribute",
		"method key":"Ljava/nio/file/spi/FileSystemProvider;.setAttribute(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/Object;[Ljava/nio/file/LinkOption;)V|Ljava/io/IOException;",
		"read list":[],
		"write list":[],
		"native method list":[]
	}
]
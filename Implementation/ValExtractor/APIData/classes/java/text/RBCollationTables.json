[
	{
		"class name":"java.text.RBCollationTables.BuildAPI",
		"method name":"fillInTables",
		"method key":"Ljava/text/RBCollationTables$BuildAPI;.fillInTables(ZZLsun/text/UCompactIntArray;Ljava/util/Vector<Ljava/util/Vector<Ljava/text/EntryPair;>;>;Ljava/util/Vector<[I>;Lsun/text/IntHashtable;SS)V",
		"read list":[
			{
				"name":"java.text.RBCollationTables.seAsianSwapping",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.frenchSec",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.expandTable",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.contractFlags",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.contractTable",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.maxSecOrder",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.mapping",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.maxTerOrder",
				"static label":0
			}
		],
		"write list":[
			{
				"name":"java.text.RBCollationTables.seAsianSwapping",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.frenchSec",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.expandTable",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.contractFlags",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.contractTable",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.maxSecOrder",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.mapping",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.maxTerOrder",
				"static label":0
			}
		],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"getRules",
		"method key":"Ljava/text/RBCollationTables;.getRules()Ljava/lang/String;",
		"read list":[
			{
				"name":"java.text.RBCollationTables.rules",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"isFrenchSec",
		"method key":"Ljava/text/RBCollationTables;.isFrenchSec()Z",
		"read list":[
			{
				"name":"java.text.RBCollationTables.frenchSec",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"isSEAsianSwapping",
		"method key":"Ljava/text/RBCollationTables;.isSEAsianSwapping()Z",
		"read list":[
			{
				"name":"java.text.RBCollationTables.seAsianSwapping",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"getContractValues",
		"method key":"Ljava/text/RBCollationTables;.getContractValues(I)Ljava/util/Vector<Ljava/text/EntryPair;>;",
		"read list":[
			{
				"name":"mapping.sun.text.UCompactIntArray.defaultValue",
				"static label":0
			},
			{
				"name":"sun.text.UCompactIntArray.CODEPOINTMASK",
				"static label":1
			},
			{
				"name":"sun.text.UCompactIntArray.BLOCKSHIFT",
				"static label":1
			},
			{
				"name":"java.text.RBCollationTables.contractTable",
				"static label":0
			},
			{
				"name":"java.text.RBCollationTables.mapping",
				"static label":0
			},
			{
				"name":"sun.text.UCompactIntArray.BLOCKMASK",
				"static label":1
			},
			{
				"name":"java.text.RBCollationTables.CONTRACTCHARINDEX",
				"static label":1
			},
			{
				"name":"sun.text.UCompactIntArray.PLANEMASK",
				"static label":1
			},
			{
				"name":"sun.text.UCompactIntArray.PLANESHIFT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"usedInContractSeq",
		"method key":"Ljava/text/RBCollationTables;.usedInContractSeq(I)Z",
		"read list":[
			{
				"name":"java.text.RBCollationTables.contractFlags",
				"static label":0
			},
			{
				"name":"sun.text.IntHashtable.MAX_UNUSED",
				"static label":1
			},
			{
				"name":"sun.text.IntHashtable.EMPTY",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"getMaxExpansion",
		"method key":"Ljava/text/RBCollationTables;.getMaxExpansion(I)I",
		"read list":[
			{
				"name":"java.text.RBCollationTables.expandTable",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"getUnicodeOrder",
		"method key":"Ljava/text/RBCollationTables;.getUnicodeOrder(I)I",
		"read list":[
			{
				"name":"mapping.sun.text.UCompactIntArray.defaultValue",
				"static label":0
			},
			{
				"name":"sun.text.UCompactIntArray.CODEPOINTMASK",
				"static label":1
			},
			{
				"name":"sun.text.UCompactIntArray.BLOCKSHIFT",
				"static label":1
			},
			{
				"name":"java.text.RBCollationTables.mapping",
				"static label":0
			},
			{
				"name":"sun.text.UCompactIntArray.BLOCKMASK",
				"static label":1
			},
			{
				"name":"sun.text.UCompactIntArray.PLANEMASK",
				"static label":1
			},
			{
				"name":"sun.text.UCompactIntArray.PLANESHIFT",
				"static label":1
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"getMaxSecOrder",
		"method key":"Ljava/text/RBCollationTables;.getMaxSecOrder()S",
		"read list":[
			{
				"name":"java.text.RBCollationTables.maxSecOrder",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"getMaxTerOrder",
		"method key":"Ljava/text/RBCollationTables;.getMaxTerOrder()S",
		"read list":[
			{
				"name":"java.text.RBCollationTables.maxTerOrder",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	},
	{
		"class name":"java.text.RBCollationTables",
		"method name":"reverse",
		"method key":"Ljava/text/RBCollationTables;.reverse(Ljava/lang/StringBuffer;II)V",
		"read list":[
			{
				"name":"result.java.lang.AbstractStringBuilder.count",
				"static label":0
			}
		],
		"write list":[],
		"native method list":[]
	}
]